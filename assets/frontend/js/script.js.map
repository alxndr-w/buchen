{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\n/*! UIkit 3.6.8 | https://www.getuikit.com | (c) 2014 - 2021 YOOtheme | MIT License */\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : (0, _typeof2[\"default\"])(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define('uikiticons', factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.UIkitIcons = factory());\n})(void 0, function () {\n  'use strict';\n\n  function plugin(UIkit) {\n    if (plugin.installed) {\n      return;\n    }\n\n    UIkit.icon.add({\n      \"500px\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.624,11.866c-0.141,0.132,0.479,0.658,0.662,0.418c0.051-0.046,0.607-0.61,0.662-0.664c0,0,0.738,0.719,0.814,0.719 c0.1,0,0.207-0.055,0.322-0.17c0.27-0.269,0.135-0.416,0.066-0.495l-0.631-0.616l0.658-0.668c0.146-0.156,0.021-0.314-0.1-0.449 c-0.182-0.18-0.359-0.226-0.471-0.125l-0.656,0.654l-0.654-0.654c-0.033-0.034-0.08-0.045-0.124-0.045 c-0.079,0-0.191,0.068-0.307,0.181c-0.202,0.202-0.247,0.351-0.133,0.462l0.665,0.665L9.624,11.866z\\\"/><path d=\\\"M11.066,2.884c-1.061,0-2.185,0.248-3.011,0.604c-0.087,0.034-0.141,0.106-0.15,0.205C7.893,3.784,7.919,3.909,7.982,4.066 c0.05,0.136,0.187,0.474,0.452,0.372c0.844-0.326,1.779-0.507,2.633-0.507c0.963,0,1.9,0.191,2.781,0.564 c0.695,0.292,1.357,0.719,2.078,1.34c0.051,0.044,0.105,0.068,0.164,0.068c0.143,0,0.273-0.137,0.389-0.271 c0.191-0.214,0.324-0.395,0.135-0.575c-0.686-0.654-1.436-1.138-2.363-1.533C13.24,3.097,12.168,2.884,11.066,2.884z\\\"/><path d=\\\"M16.43,15.747c-0.092-0.028-0.242,0.05-0.309,0.119l0,0c-0.652,0.652-1.42,1.169-2.268,1.521 c-0.877,0.371-1.814,0.551-2.779,0.551c-0.961,0-1.896-0.189-2.775-0.564c-0.848-0.36-1.612-0.879-2.268-1.53 c-0.682-0.688-1.196-1.455-1.529-2.268c-0.325-0.799-0.471-1.643-0.471-1.643c-0.045-0.24-0.258-0.249-0.567-0.203 c-0.128,0.021-0.519,0.079-0.483,0.36v0.01c0.105,0.644,0.289,1.284,0.545,1.895c0.417,0.969,1.002,1.849,1.756,2.604 c0.757,0.754,1.636,1.34,2.604,1.757C8.901,18.785,9.97,19,11.088,19c1.104,0,2.186-0.215,3.188-0.645 c1.838-0.896,2.604-1.757,2.604-1.757c0.182-0.204,0.227-0.317-0.1-0.643C16.779,15.956,16.525,15.774,16.43,15.747z\\\"/><path d=\\\"M5.633,13.287c0.293,0.71,0.723,1.341,1.262,1.882c0.54,0.54,1.172,0.971,1.882,1.264c0.731,0.303,1.509,0.461,2.298,0.461 c0.801,0,1.578-0.158,2.297-0.461c0.711-0.293,1.344-0.724,1.883-1.264c0.543-0.541,0.971-1.172,1.264-1.882 c0.314-0.721,0.463-1.5,0.463-2.298c0-0.79-0.148-1.569-0.463-2.289c-0.293-0.699-0.721-1.329-1.264-1.881 c-0.539-0.541-1.172-0.959-1.867-1.263c-0.721-0.303-1.5-0.461-2.299-0.461c-0.802,0-1.613,0.159-2.322,0.461 c-0.577,0.25-1.544,0.867-2.119,1.454v0.012V2.108h8.16C15.1,2.104,15.1,1.69,15.1,1.552C15.1,1.417,15.1,1,14.809,1H5.915 C5.676,1,5.527,1.192,5.527,1.384v6.84c0,0.214,0.273,0.372,0.529,0.428c0.5,0.105,0.614-0.056,0.737-0.224l0,0 c0.18-0.273,0.776-0.884,0.787-0.894c0.901-0.905,2.117-1.408,3.416-1.408c1.285,0,2.5,0.501,3.412,1.408 c0.914,0.914,1.408,2.122,1.408,3.405c0,1.288-0.508,2.496-1.408,3.405c-0.9,0.896-2.152,1.406-3.438,1.406 c-0.877,0-1.711-0.229-2.433-0.671v-4.158c0-0.553,0.237-1.151,0.643-1.614c0.462-0.519,1.094-0.799,1.782-0.799 c0.664,0,1.293,0.253,1.758,0.715c0.459,0.459,0.709,1.071,0.709,1.723c0,1.385-1.094,2.468-2.488,2.468 c-0.273,0-0.769-0.121-0.781-0.125c-0.281-0.087-0.405,0.306-0.438,0.436c-0.159,0.496,0.079,0.585,0.123,0.607 c0.452,0.137,0.743,0.157,1.129,0.157c1.973,0,3.572-1.6,3.572-3.57c0-1.964-1.6-3.552-3.572-3.552c-0.97,0-1.872,0.36-2.546,1.038 c-0.656,0.631-1.027,1.487-1.027,2.322v3.438v-0.011c-0.372-0.42-0.732-1.041-0.981-1.682c-0.102-0.248-0.315-0.202-0.607-0.113 c-0.135,0.035-0.519,0.157-0.44,0.439C5.372,12.799,5.577,13.164,5.633,13.287z\\\"/></svg>\",\n      \"album\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"5\\\" y=\\\"2\\\" width=\\\"10\\\" height=\\\"1\\\"/><rect x=\\\"3\\\" y=\\\"4\\\" width=\\\"14\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"6.5\\\" width=\\\"17\\\" height=\\\"11\\\"/></svg>\",\n      \"arrow-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"10.5,16.08 5.63,10.66 6.37,10 10.5,14.58 14.63,10 15.37,10.66\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10.5\\\" y1=\\\"4\\\" x2=\\\"10.5\\\" y2=\\\"15\\\"/></svg>\",\n      \"arrow-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"10 14 5 9.5 10 5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"16\\\" y1=\\\"9.5\\\" x2=\\\"5\\\" y2=\\\"9.52\\\"/></svg>\",\n      \"arrow-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"10 5 15 9.5 10 14\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"4\\\" y1=\\\"9.5\\\" x2=\\\"15\\\" y2=\\\"9.5\\\"/></svg>\",\n      \"arrow-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"10.5,4 15.37,9.4 14.63,10.08 10.5,5.49 6.37,10.08 5.63,9.4\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10.5\\\" y1=\\\"16\\\" x2=\\\"10.5\\\" y2=\\\"5\\\"/></svg>\",\n      \"ban\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"4\\\" y1=\\\"3.5\\\" x2=\\\"16\\\" y2=\\\"16.5\\\"/></svg>\",\n      \"behance\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.5,10.6c-0.4-0.5-0.9-0.9-1.6-1.1c1.7-1,2.2-3.2,0.7-4.7C7.8,4,6.3,4,5.2,4C3.5,4,1.7,4,0,4v12c1.7,0,3.4,0,5.2,0 c1,0,2.1,0,3.1-0.5C10.2,14.6,10.5,12.3,9.5,10.6L9.5,10.6z M5.6,6.1c1.8,0,1.8,2.7-0.1,2.7c-1,0-2,0-2.9,0V6.1H5.6z M2.6,13.8v-3.1 c1.1,0,2.1,0,3.2,0c2.1,0,2.1,3.2,0.1,3.2L2.6,13.8z\\\"/><path d=\\\"M19.9,10.9C19.7,9.2,18.7,7.6,17,7c-4.2-1.3-7.3,3.4-5.3,7.1c0.9,1.7,2.8,2.3,4.7,2.1c1.7-0.2,2.9-1.3,3.4-2.9h-2.2 c-0.4,1.3-2.4,1.5-3.5,0.6c-0.4-0.4-0.6-1.1-0.6-1.7H20C20,11.7,19.9,10.9,19.9,10.9z M13.5,10.6c0-1.6,2.3-2.7,3.5-1.4 c0.4,0.4,0.5,0.9,0.6,1.4H13.5L13.5,10.6z\\\"/><rect x=\\\"13\\\" y=\\\"4\\\" width=\\\"5\\\" height=\\\"1.4\\\"/></svg>\",\n      \"bell\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17,15.5 L3,15.5 C2.99,14.61 3.79,13.34 4.1,12.51 C4.58,11.3 4.72,10.35 5.19,7.01 C5.54,4.53 5.89,3.2 7.28,2.16 C8.13,1.56 9.37,1.5 9.81,1.5 L9.96,1.5 C9.96,1.5 11.62,1.41 12.67,2.17 C14.08,3.2 14.42,4.54 14.77,7.02 C15.26,10.35 15.4,11.31 15.87,12.52 C16.2,13.34 17.01,14.61 17,15.5 L17,15.5 Z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M12.39,16 C12.39,17.37 11.35,18.43 9.91,18.43 C8.48,18.43 7.42,17.37 7.42,16\\\"/></svg>\",\n      \"bold\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5,15.3 C5.66,15.3 5.9,15 5.9,14.53 L5.9,5.5 C5.9,4.92 5.56,4.7 5,4.7 L5,4 L8.95,4 C12.6,4 13.7,5.37 13.7,6.9 C13.7,7.87 13.14,9.17 10.86,9.59 L10.86,9.7 C13.25,9.86 14.29,11.28 14.3,12.54 C14.3,14.47 12.94,16 9,16 L5,16 L5,15.3 Z M9,9.3 C11.19,9.3 11.8,8.5 11.85,7 C11.85,5.65 11.3,4.8 9,4.8 L7.67,4.8 L7.67,9.3 L9,9.3 Z M9.185,15.22 C11.97,15 12.39,14 12.4,12.58 C12.4,11.15 11.39,10 9,10 L7.67,10 L7.67,15 L9.18,15 Z\\\"/></svg>\",\n      \"bolt\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4.74,20 L7.73,12 L3,12 L15.43,1 L12.32,9 L17.02,9 L4.74,20 L4.74,20 L4.74,20 Z M9.18,11 L7.1,16.39 L14.47,10 L10.86,10 L12.99,4.67 L5.61,11 L9.18,11 L9.18,11 L9.18,11 Z\\\"/></svg>\",\n      \"bookmark\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5.5 1.5 15.5 1.5 15.5 17.5 10.5 12.5 5.5 17.5\\\"/></svg>\",\n      \"calendar\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M 2,3 2,17 18,17 18,3 2,3 Z M 17,16 3,16 3,8 17,8 17,16 Z M 17,7 3,7 3,4 17,4 17,7 Z\\\"/><rect width=\\\"1\\\" height=\\\"3\\\" x=\\\"6\\\" y=\\\"2\\\"/><rect width=\\\"1\\\" height=\\\"3\\\" x=\\\"13\\\" y=\\\"2\\\"/></svg>\",\n      \"camera\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10.8\\\" r=\\\"3.8\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1,4.5 C0.7,4.5 0.5,4.7 0.5,5 L0.5,17 C0.5,17.3 0.7,17.5 1,17.5 L19,17.5 C19.3,17.5 19.5,17.3 19.5,17 L19.5,5 C19.5,4.7 19.3,4.5 19,4.5 L13.5,4.5 L13.5,2.9 C13.5,2.6 13.3,2.5 13,2.5 L7,2.5 C6.7,2.5 6.5,2.6 6.5,2.9 L6.5,4.5 L1,4.5 L1,4.5 Z\\\"/></svg>\",\n      \"cart\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"7.3\\\" cy=\\\"17.3\\\" r=\\\"1.4\\\"/><circle cx=\\\"13.3\\\" cy=\\\"17.3\\\" r=\\\"1.4\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"0 2 3.2 4 5.3 12.5 16 12.5 18 6.5 8 6.5\\\"/></svg>\",\n      \"check\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"4,10 8,15 17,4\\\"/></svg>\",\n      \"chevron-double-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"10 14 6 10 10 6\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"14 14 10 10 14 6\\\"/></svg>\",\n      \"chevron-double-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"10 6 14 10 10 14\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"6 6 10 10 6 14\\\"/></svg>\",\n      \"chevron-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"16 7 10 13 4 7\\\"/></svg>\",\n      \"chevron-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"13 16 7 10 13 4\\\"/></svg>\",\n      \"chevron-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"7 4 13 10 7 16\\\"/></svg>\",\n      \"chevron-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" points=\\\"4 13 10 7 16 13\\\"/></svg>\",\n      \"clock\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.018,14.197 L9.445,10.625\\\"/></svg>\",\n      \"close\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.06\\\" d=\\\"M16,16 L4,4\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.06\\\" d=\\\"M16,4 L4,16\\\"/></svg>\",\n      \"cloud-download\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.3,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"11.75 16 9.5 18.25 7.25 16\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M9.5,18 L9.5,9.5\\\"/></svg>\",\n      \"cloud-upload\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.5,14.61 L3.75,14.61 C1.96,14.61 0.5,13.17 0.5,11.39 C0.5,9.76 1.72,8.41 3.31,8.2 C3.38,5.31 5.75,3 8.68,3 C11.19,3 13.31,4.71 13.89,7.02 C14.39,6.8 14.93,6.68 15.5,6.68 C17.71,6.68 19.5,8.45 19.5,10.64 C19.5,12.83 17.71,14.6 15.5,14.6 L12.5,14.6\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"7.25 11.75 9.5 9.5 11.75 11.75\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M9.5,18 L9.5,9.5\\\"/></svg>\",\n      \"code\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"13,4 19,10 13,16\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"7,4 1,10 7,16\\\"/></svg>\",\n      \"cog\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"9.997\\\" cy=\\\"10\\\" r=\\\"3.31\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M18.488,12.285 L16.205,16.237 C15.322,15.496 14.185,15.281 13.303,15.791 C12.428,16.289 12.047,17.373 12.246,18.5 L7.735,18.5 C7.938,17.374 7.553,16.299 6.684,15.791 C5.801,15.27 4.655,15.492 3.773,16.237 L1.5,12.285 C2.573,11.871 3.317,10.999 3.317,9.991 C3.305,8.98 2.573,8.121 1.5,7.716 L3.765,3.784 C4.645,4.516 5.794,4.738 6.687,4.232 C7.555,3.722 7.939,2.637 7.735,1.5 L12.263,1.5 C12.072,2.637 12.441,3.71 13.314,4.22 C14.206,4.73 15.343,4.516 16.225,3.794 L18.487,7.714 C17.404,8.117 16.661,8.988 16.67,10.009 C16.672,11.018 17.415,11.88 18.488,12.285 L18.488,12.285 Z\\\"/></svg>\",\n      \"comment\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6,18.71 L6,14 L1,14 L1,1 L19,1 L19,14 L10.71,14 L6,18.71 L6,18.71 Z M2,13 L7,13 L7,16.29 L10.29,13 L18,13 L18,2 L2,2 L2,13 L2,13 Z\\\"/></svg>\",\n      \"commenting\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"1.5,1.5 18.5,1.5 18.5,13.5 10.5,13.5 6.5,17.5 6.5,13.5 1.5,13.5\\\"/><circle cx=\\\"10\\\" cy=\\\"8\\\" r=\\\"1\\\"/><circle cx=\\\"6\\\" cy=\\\"8\\\" r=\\\"1\\\"/><circle cx=\\\"14\\\" cy=\\\"8\\\" r=\\\"1\\\"/></svg>\",\n      \"comments\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"2 0.5 19.5 0.5 19.5 13\\\"/><path d=\\\"M5,19.71 L5,15 L0,15 L0,2 L18,2 L18,15 L9.71,15 L5,19.71 L5,19.71 L5,19.71 Z M1,14 L6,14 L6,17.29 L9.29,14 L17,14 L17,3 L1,3 L1,14 L1,14 L1,14 Z\\\"/></svg>\",\n      \"copy\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"2.5\\\" width=\\\"12\\\" height=\\\"16\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5 0.5 17.5 0.5 17.5 17\\\"/></svg>\",\n      \"credit-card\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"4.5\\\" width=\\\"17\\\" height=\\\"12\\\"/><rect x=\\\"1\\\" y=\\\"7\\\" width=\\\"18\\\" height=\\\"3\\\"/></svg>\",\n      \"database\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"4.64\\\" rx=\\\"7.5\\\" ry=\\\"3.14\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.5,8.11 C17.5,9.85 14.14,11.25 10,11.25 C5.86,11.25 2.5,9.84 2.5,8.11\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.5,11.25 C17.5,12.99 14.14,14.39 10,14.39 C5.86,14.39 2.5,12.98 2.5,11.25\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.49,4.64 L17.5,14.36 C17.5,16.1 14.14,17.5 10,17.5 C5.86,17.5 2.5,16.09 2.5,14.36 L2.5,4.64\\\"/></svg>\",\n      \"desktop\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"8\\\" y=\\\"15\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"11\\\" y=\\\"15\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"5\\\" y=\\\"16\\\" width=\\\"10\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"3.5\\\" width=\\\"17\\\" height=\\\"11\\\"/></svg>\",\n      \"download\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"14,10 9.5,14.5 5,10\\\"/><rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"13\\\" height=\\\"1\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"13.91\\\" x2=\\\"9.5\\\" y2=\\\"3\\\"/></svg>\",\n      \"dribbble\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M1.3,8.9c0,0,5,0.1,8.6-1c1.4-0.4,2.6-0.9,4-1.9 c1.4-1.1,2.5-2.5,2.5-2.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M3.9,16.6c0,0,1.7-2.8,3.5-4.2 c1.8-1.3,4-2,5.7-2.2C16,10,19,10.6,19,10.6\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" d=\\\"M6.9,1.6c0,0,3.3,4.6,4.2,6.8 c0.4,0.9,1.3,3.1,1.9,5.2c0.6,2,0.9,4.4,0.9,4.4\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/></svg>\",\n      \"etsy\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\"><path d=\\\"M8,4.26C8,4.07,8,4,8.31,4h4.46c.79,0,1.22.67,1.53,1.91l.25,1h.76c.14-2.82.26-4,.26-4S13.65,3,12.52,3H6.81L3.75,2.92v.84l1,.2c.73.11.9.27,1,1,0,0,.06,2,.06,5.17s-.06,5.14-.06,5.14c0,.59-.23.81-1,.94l-1,.2v.84l3.06-.1h5.11c1.15,0,3.82.1,3.82.1,0-.7.45-3.88.51-4.22h-.73l-.76,1.69a2.25,2.25,0,0,1-2.45,1.47H9.4c-1,0-1.44-.4-1.44-1.24V10.44s2.16,0,2.86.06c.55,0,.85.19,1.06,1l.23,1H13L12.9,9.94,13,7.41h-.85l-.28,1.13c-.16.74-.28.84-1,1-1,.1-2.89.09-2.89.09Z\\\"/></svg>\",\n      \"expand\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"13 2 18 2 18 7 17 7 17 3 13 3\\\"/><polygon points=\\\"2 13 3 13 3 17 7 17 7 18 2 18\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M11,9 L17,3\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M3,17 L9,11\\\"/></svg>\",\n      \"facebook\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M11,10h2.6l0.4-3H11V5.3c0-0.9,0.2-1.5,1.5-1.5H14V1.1c-0.3,0-1-0.1-2.1-0.1C9.6,1,8,2.4,8,5v2H5.5v3H8v8h3V10z\\\"/></svg>\",\n      \"file-edit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M18.65,1.68 C18.41,1.45 18.109,1.33 17.81,1.33 C17.499,1.33 17.209,1.45 16.98,1.68 L8.92,9.76 L8,12.33 L10.55,11.41 L18.651,3.34 C19.12,2.87 19.12,2.15 18.65,1.68 L18.65,1.68 L18.65,1.68 Z\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"16.5 8.482 16.5 18.5 3.5 18.5 3.5 1.5 14.211 1.5\\\"/></svg>\",\n      \"file-pdf\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" width=\\\"13\\\" height=\\\"17\\\" x=\\\"3.5\\\" y=\\\"1.5\\\"/><path d=\\\"M14.65 11.67c-.48.3-1.37-.19-1.79-.37a4.65 4.65 0 0 1 1.49.06c.35.1.36.28.3.31zm-6.3.06l.43-.79a14.7 14.7 0 0 0 .75-1.64 5.48 5.48 0 0 0 1.25 1.55l.2.15a16.36 16.36 0 0 0-2.63.73zM9.5 5.32c.2 0 .32.5.32.97a1.99 1.99 0 0 1-.23 1.04 5.05 5.05 0 0 1-.17-1.3s0-.71.08-.71zm-3.9 9a4.35 4.35 0 0 1 1.21-1.46l.24-.22a4.35 4.35 0 0 1-1.46 1.68zm9.23-3.3a2.05 2.05 0 0 0-1.32-.3 11.07 11.07 0 0 0-1.58.11 4.09 4.09 0 0 1-.74-.5 5.39 5.39 0 0 1-1.32-2.06 10.37 10.37 0 0 0 .28-2.62 1.83 1.83 0 0 0-.07-.25.57.57 0 0 0-.52-.4H9.4a.59.59 0 0 0-.6.38 6.95 6.95 0 0 0 .37 3.14c-.26.63-1 2.12-1 2.12-.3.58-.57 1.08-.82 1.5l-.8.44A3.11 3.11 0 0 0 5 14.16a.39.39 0 0 0 .15.42l.24.13c1.15.56 2.28-1.74 2.66-2.42a23.1 23.1 0 0 1 3.59-.85 4.56 4.56 0 0 0 2.91.8.5.5 0 0 0 .3-.21 1.1 1.1 0 0 0 .12-.75.84.84 0 0 0-.14-.25z\\\"/></svg>\",\n      \"file-text\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" width=\\\"13\\\" height=\\\"17\\\" x=\\\"3.5\\\" y=\\\"1.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"12\\\" y1=\\\"12.5\\\" y2=\\\"12.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"14\\\" y1=\\\"8.5\\\" y2=\\\"8.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"14\\\" y1=\\\"6.5\\\" y2=\\\"6.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"6\\\" x2=\\\"14\\\" y1=\\\"10.5\\\" y2=\\\"10.5\\\"/></svg>\",\n      \"file\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"1.5\\\" width=\\\"13\\\" height=\\\"17\\\"/></svg>\",\n      \"flickr\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"5.5\\\" cy=\\\"9.5\\\" r=\\\"3.5\\\"/><circle cx=\\\"14.5\\\" cy=\\\"9.5\\\" r=\\\"3.5\\\"/></svg>\",\n      \"folder\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"9.5 5.5 8.5 3.5 1.5 3.5 1.5 16.5 18.5 16.5 18.5 5.5\\\"/></svg>\",\n      \"forward\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.47,13.11 C4.02,10.02 6.27,7.85 9.04,6.61 C9.48,6.41 10.27,6.13 11,5.91 L11,2 L18.89,9 L11,16 L11,12.13 C9.25,12.47 7.58,13.19 6.02,14.25 C3.03,16.28 1.63,18.54 1.63,18.54 C1.63,18.54 1.38,15.28 2.47,13.11 L2.47,13.11 Z M5.3,13.53 C6.92,12.4 9.04,11.4 12,10.92 L12,13.63 L17.36,9 L12,4.25 L12,6.8 C11.71,6.86 10.86,7.02 9.67,7.49 C6.79,8.65 4.58,10.96 3.49,13.08 C3.18,13.7 2.68,14.87 2.49,16 C3.28,15.05 4.4,14.15 5.3,13.53 L5.3,13.53 Z\\\"/></svg>\",\n      \"foursquare\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M15.23,2 C15.96,2 16.4,2.41 16.5,2.86 C16.57,3.15 16.56,3.44 16.51,3.73 C16.46,4.04 14.86,11.72 14.75,12.03 C14.56,12.56 14.16,12.82 13.61,12.83 C13.03,12.84 11.09,12.51 10.69,13 C10.38,13.38 7.79,16.39 6.81,17.53 C6.61,17.76 6.4,17.96 6.08,17.99 C5.68,18.04 5.29,17.87 5.17,17.45 C5.12,17.28 5.1,17.09 5.1,16.91 C5.1,12.4 4.86,7.81 5.11,3.31 C5.17,2.5 5.81,2.12 6.53,2 L15.23,2 L15.23,2 Z M9.76,11.42 C9.94,11.19 10.17,11.1 10.45,11.1 L12.86,11.1 C13.12,11.1 13.31,10.94 13.36,10.69 C13.37,10.64 13.62,9.41 13.74,8.83 C13.81,8.52 13.53,8.28 13.27,8.28 C12.35,8.29 11.42,8.28 10.5,8.28 C9.84,8.28 9.83,7.69 9.82,7.21 C9.8,6.85 10.13,6.55 10.5,6.55 C11.59,6.56 12.67,6.55 13.76,6.55 C14.03,6.55 14.23,6.4 14.28,6.14 C14.34,5.87 14.67,4.29 14.67,4.29 C14.67,4.29 14.82,3.74 14.19,3.74 L7.34,3.74 C7,3.75 6.84,4.02 6.84,4.33 C6.84,7.58 6.85,14.95 6.85,14.99 C6.87,15 8.89,12.51 9.76,11.42 L9.76,11.42 Z\\\"/></svg>\",\n      \"future\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline points=\\\"19 2 18 2 18 6 14 6 14 7 19 7 19 2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M18,6.548 C16.709,3.29 13.354,1 9.6,1 C4.6,1 0.6,5 0.6,10 C0.6,15 4.6,19 9.6,19 C14.6,19 18.6,15 18.6,10\\\"/><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"/><path d=\\\"M13.018,14.197 L9.445,10.625\\\" fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\"/></svg>\",\n      \"git-branch\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"7\\\" cy=\\\"3\\\" r=\\\"2\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"14\\\" cy=\\\"6\\\" r=\\\"2\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"7\\\" cy=\\\"17\\\" r=\\\"2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" d=\\\"M14,8 C14,10.41 12.43,10.87 10.56,11.25 C9.09,11.54 7,12.06 7,15 L7,5\\\"/></svg>\",\n      \"git-fork\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"5.79\\\" cy=\\\"2.79\\\" r=\\\"1.79\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"14.19\\\" cy=\\\"2.79\\\" r=\\\"1.79\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" cx=\\\"10.03\\\" cy=\\\"16.79\\\" r=\\\"1.79\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" d=\\\"M5.79,4.57 L5.79,6.56 C5.79,9.19 10.03,10.22 10.03,13.31 C10.03,14.86 10.04,14.55 10.04,14.55 C10.04,14.37 10.04,14.86 10.04,13.31 C10.04,10.22 14.2,9.19 14.2,6.56 L14.2,4.57\\\"/></svg>\",\n      \"github-alt\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,0.5 C4.75,0.5 0.5,4.76 0.5,10.01 C0.5,15.26 4.75,19.51 10,19.51 C15.24,19.51 19.5,15.26 19.5,10.01 C19.5,4.76 15.25,0.5 10,0.5 L10,0.5 Z M12.81,17.69 C12.81,17.69 12.81,17.7 12.79,17.69 C12.47,17.75 12.35,17.59 12.35,17.36 L12.35,16.17 C12.35,15.45 12.09,14.92 11.58,14.56 C12.2,14.51 12.77,14.39 13.26,14.21 C13.87,13.98 14.36,13.69 14.74,13.29 C15.42,12.59 15.76,11.55 15.76,10.17 C15.76,9.25 15.45,8.46 14.83,7.8 C15.1,7.08 15.07,6.29 14.75,5.44 L14.51,5.42 C14.34,5.4 14.06,5.46 13.67,5.61 C13.25,5.78 12.79,6.03 12.31,6.35 C11.55,6.16 10.81,6.05 10.09,6.05 C9.36,6.05 8.61,6.15 7.88,6.35 C7.28,5.96 6.75,5.68 6.26,5.54 C6.07,5.47 5.9,5.44 5.78,5.44 L5.42,5.44 C5.06,6.29 5.04,7.08 5.32,7.8 C4.7,8.46 4.4,9.25 4.4,10.17 C4.4,11.94 4.96,13.16 6.08,13.84 C6.53,14.13 7.05,14.32 7.69,14.43 C8.03,14.5 8.32,14.54 8.55,14.55 C8.07,14.89 7.82,15.42 7.82,16.16 L7.82,17.51 C7.8,17.69 7.7,17.8 7.51,17.8 C4.21,16.74 1.82,13.65 1.82,10.01 C1.82,5.5 5.49,1.83 10,1.83 C14.5,1.83 18.17,5.5 18.17,10.01 C18.18,13.53 15.94,16.54 12.81,17.69 L12.81,17.69 Z\\\"/></svg>\",\n      \"github\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,1 C5.03,1 1,5.03 1,10 C1,13.98 3.58,17.35 7.16,18.54 C7.61,18.62 7.77,18.34 7.77,18.11 C7.77,17.9 7.76,17.33 7.76,16.58 C5.26,17.12 4.73,15.37 4.73,15.37 C4.32,14.33 3.73,14.05 3.73,14.05 C2.91,13.5 3.79,13.5 3.79,13.5 C4.69,13.56 5.17,14.43 5.17,14.43 C5.97,15.8 7.28,15.41 7.79,15.18 C7.87,14.6 8.1,14.2 8.36,13.98 C6.36,13.75 4.26,12.98 4.26,9.53 C4.26,8.55 4.61,7.74 5.19,7.11 C5.1,6.88 4.79,5.97 5.28,4.73 C5.28,4.73 6.04,4.49 7.75,5.65 C8.47,5.45 9.24,5.35 10,5.35 C10.76,5.35 11.53,5.45 12.25,5.65 C13.97,4.48 14.72,4.73 14.72,4.73 C15.21,5.97 14.9,6.88 14.81,7.11 C15.39,7.74 15.73,8.54 15.73,9.53 C15.73,12.99 13.63,13.75 11.62,13.97 C11.94,14.25 12.23,14.8 12.23,15.64 C12.23,16.84 12.22,17.81 12.22,18.11 C12.22,18.35 12.38,18.63 12.84,18.54 C16.42,17.35 19,13.98 19,10 C19,5.03 14.97,1 10,1 L10,1 Z\\\"/></svg>\",\n      \"gitter\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"3.5\\\" y=\\\"1\\\" width=\\\"1.531\\\" height=\\\"11.471\\\"/><rect x=\\\"7.324\\\" y=\\\"4.059\\\" width=\\\"1.529\\\" height=\\\"15.294\\\"/><rect x=\\\"11.148\\\" y=\\\"4.059\\\" width=\\\"1.527\\\" height=\\\"15.294\\\"/><rect x=\\\"14.971\\\" y=\\\"4.059\\\" width=\\\"1.529\\\" height=\\\"8.412\\\"/></svg>\",\n      \"google-plus\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.9,9c0,2.7-0.6,5-3.2,6.3c-3.7,1.8-8.1,0.2-9.4-3.6C-1.1,7.6,1.9,3.3,6.1,3c1.7-0.1,3.2,0.3,4.6,1.3 c0.1,0.1,0.3,0.2,0.4,0.4c-0.5,0.5-1.2,1-1.7,1.6c-1-0.8-2.1-1.1-3.5-0.9C5,5.6,4.2,6,3.6,6.7c-1.3,1.3-1.5,3.4-0.5,5 c1,1.7,2.6,2.3,4.6,1.9c1.4-0.3,2.4-1.2,2.6-2.6H6.9V9H12.9z\\\"/><polygon points=\\\"20,9 20,11 18,11 18,13 16,13 16,11 14,11 14,9 16,9 16,7 18,7 18,9\\\"/></svg>\",\n      \"google\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.86,9.09 C18.46,12.12 17.14,16.05 13.81,17.56 C9.45,19.53 4.13,17.68 2.47,12.87 C0.68,7.68 4.22,2.42 9.5,2.03 C11.57,1.88 13.42,2.37 15.05,3.65 C15.22,3.78 15.37,3.93 15.61,4.14 C14.9,4.81 14.23,5.45 13.5,6.14 C12.27,5.08 10.84,4.72 9.28,4.98 C8.12,5.17 7.16,5.76 6.37,6.63 C4.88,8.27 4.62,10.86 5.76,12.82 C6.95,14.87 9.17,15.8 11.57,15.25 C13.27,14.87 14.76,13.33 14.89,11.75 L10.51,11.75 L10.51,9.09 L17.86,9.09 L17.86,9.09 Z\\\"/></svg>\",\n      \"grid\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"2\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"8\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"14\\\" y=\\\"2\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"2\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"8\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"14\\\" y=\\\"8\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"8\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"/><rect x=\\\"14\\\" y=\\\"14\\\" width=\\\"3\\\" height=\\\"3\\\"/></svg>\",\n      \"happy\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"13\\\" cy=\\\"7\\\" r=\\\"1\\\"/><circle cx=\\\"7\\\" cy=\\\"7\\\" r=\\\"1\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"8.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M14.6,11.4 C13.9,13.3 12.1,14.5 10,14.5 C7.9,14.5 6.1,13.3 5.4,11.4\\\"/></svg>\",\n      \"hashtag\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M15.431,8 L15.661,7 L12.911,7 L13.831,3 L12.901,3 L11.98,7 L9.29,7 L10.21,3 L9.281,3 L8.361,7 L5.23,7 L5,8 L8.13,8 L7.21,12 L4.23,12 L4,13 L6.98,13 L6.061,17 L6.991,17 L7.911,13 L10.601,13 L9.681,17 L10.611,17 L11.531,13 L14.431,13 L14.661,12 L11.76,12 L12.681,8 L15.431,8 Z M10.831,12 L8.141,12 L9.061,8 L11.75,8 L10.831,12 Z\\\"/></svg>\",\n      \"heart\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.03\\\" d=\\\"M10,4 C10,4 8.1,2 5.74,2 C3.38,2 1,3.55 1,6.73 C1,8.84 2.67,10.44 2.67,10.44 L10,18 L17.33,10.44 C17.33,10.44 19,8.84 19,6.73 C19,3.55 16.62,2 14.26,2 C11.9,2 10,4 10,4 L10,4 Z\\\"/></svg>\",\n      \"history\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"#000\\\" points=\\\"1 2 2 2 2 6 6 6 6 7 1 7 1 2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M2.1,6.548 C3.391,3.29 6.746,1 10.5,1 C15.5,1 19.5,5 19.5,10 C19.5,15 15.5,19 10.5,19 C5.5,19 1.5,15 1.5,10\\\"/><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.018,14.197 L9.445,10.625\\\"/></svg>\",\n      \"home\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"18.65 11.35 10 2.71 1.35 11.35 0.65 10.65 10 1.29 19.35 10.65\\\"/><polygon points=\\\"15 4 18 4 18 7 17 7 17 5 15 5\\\"/><polygon points=\\\"3 11 4 11 4 18 7 18 7 12 12 12 12 18 16 18 16 11 17 11 17 19 11 19 11 13 8 13 8 19 3 19\\\"/></svg>\",\n      \"image\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"16.1\\\" cy=\\\"6.1\\\" r=\\\"1.1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\".5\\\" y=\\\"2.5\\\" width=\\\"19\\\" height=\\\"15\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"4,13 8,9 13,14\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"11,12 12.5,10.5 16,14\\\"/></svg>\",\n      \"info\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.13,11.59 C11.97,12.84 10.35,14.12 9.1,14.16 C6.17,14.2 9.89,9.46 8.74,8.37 C9.3,8.16 10.62,7.83 10.62,8.81 C10.62,9.63 10.12,10.55 9.88,11.32 C8.66,15.16 12.13,11.15 12.14,11.18 C12.16,11.21 12.16,11.35 12.13,11.59 C12.08,11.95 12.16,11.35 12.13,11.59 L12.13,11.59 Z M11.56,5.67 C11.56,6.67 9.36,7.15 9.36,6.03 C9.36,5 11.56,4.54 11.56,5.67 L11.56,5.67 Z\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/></svg>\",\n      \"instagram\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M13.55,1H6.46C3.45,1,1,3.44,1,6.44v7.12c0,3,2.45,5.44,5.46,5.44h7.08c3.02,0,5.46-2.44,5.46-5.44V6.44 C19.01,3.44,16.56,1,13.55,1z M17.5,14c0,1.93-1.57,3.5-3.5,3.5H6c-1.93,0-3.5-1.57-3.5-3.5V6c0-1.93,1.57-3.5,3.5-3.5h8 c1.93,0,3.5,1.57,3.5,3.5V14z\\\"/><circle cx=\\\"14.87\\\" cy=\\\"5.26\\\" r=\\\"1.09\\\"/><path d=\\\"M10.03,5.45c-2.55,0-4.63,2.06-4.63,4.6c0,2.55,2.07,4.61,4.63,4.61c2.56,0,4.63-2.061,4.63-4.61 C14.65,7.51,12.58,5.45,10.03,5.45L10.03,5.45L10.03,5.45z M10.08,13c-1.66,0-3-1.34-3-2.99c0-1.65,1.34-2.99,3-2.99s3,1.34,3,2.99 C13.08,11.66,11.74,13,10.08,13L10.08,13L10.08,13z\\\"/></svg>\",\n      \"italic\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M12.63,5.48 L10.15,14.52 C10,15.08 10.37,15.25 11.92,15.3 L11.72,16 L6,16 L6.2,15.31 C7.78,15.26 8.19,15.09 8.34,14.53 L10.82,5.49 C10.97,4.92 10.63,4.76 9.09,4.71 L9.28,4 L15,4 L14.81,4.69 C13.23,4.75 12.78,4.91 12.63,5.48 L12.63,5.48 Z\\\"/></svg>\",\n      \"joomla\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7.8,13.4l1.7-1.7L5.9,8c-0.6-0.5-0.6-1.5,0-2c0.6-0.6,1.4-0.6,2,0l1.7-1.7c-1-1-2.3-1.3-3.6-1C5.8,2.2,4.8,1.4,3.7,1.4 c-1.3,0-2.3,1-2.3,2.3c0,1.1,0.8,2,1.8,2.3c-0.4,1.3-0.1,2.8,1,3.8L7.8,13.4L7.8,13.4z\\\"/><path d=\\\"M10.2,4.3c1-1,2.5-1.4,3.8-1c0.2-1.1,1.1-2,2.3-2c1.3,0,2.3,1,2.3,2.3c0,1.2-0.9,2.2-2,2.3c0.4,1.3,0,2.8-1,3.8L13.9,8 c0.6-0.5,0.6-1.5,0-2c-0.5-0.6-1.5-0.6-2,0L8.2,9.7L6.5,8\\\"/><path d=\\\"M14.1,16.8c-1.3,0.4-2.8,0.1-3.8-1l1.7-1.7c0.6,0.6,1.5,0.6,2,0c0.5-0.6,0.6-1.5,0-2l-3.7-3.7L12,6.7l3.7,3.7 c1,1,1.3,2.4,1,3.6c1.1,0.2,2,1.1,2,2.3c0,1.3-1,2.3-2.3,2.3C15.2,18.6,14.3,17.8,14.1,16.8\\\"/><path d=\\\"M13.2,12.2l-3.7,3.7c-1,1-2.4,1.3-3.6,1c-0.2,1-1.2,1.8-2.2,1.8c-1.3,0-2.3-1-2.3-2.3c0-1.1,0.8-2,1.8-2.3 c-0.3-1.3,0-2.7,1-3.7l1.7,1.7c-0.6,0.6-0.6,1.5,0,2c0.6,0.6,1.4,0.6,2,0l3.7-3.7\\\"/></svg>\",\n      \"laptop\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect y=\\\"16\\\" width=\\\"20\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"2.5\\\" y=\\\"4.5\\\" width=\\\"15\\\" height=\\\"10\\\"/></svg>\",\n      \"lifesaver\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,0.5 C4.76,0.5 0.5,4.76 0.5,10 C0.5,15.24 4.76,19.5 10,19.5 C15.24,19.5 19.5,15.24 19.5,10 C19.5,4.76 15.24,0.5 10,0.5 L10,0.5 Z M10,1.5 C11.49,1.5 12.89,1.88 14.11,2.56 L11.85,4.82 C11.27,4.61 10.65,4.5 10,4.5 C9.21,4.5 8.47,4.67 7.79,4.96 L5.58,2.75 C6.87,1.95 8.38,1.5 10,1.5 L10,1.5 Z M4.96,7.8 C4.67,8.48 4.5,9.21 4.5,10 C4.5,10.65 4.61,11.27 4.83,11.85 L2.56,14.11 C1.88,12.89 1.5,11.49 1.5,10 C1.5,8.38 1.95,6.87 2.75,5.58 L4.96,7.79 L4.96,7.8 L4.96,7.8 Z M10,18.5 C8.25,18.5 6.62,17.97 5.27,17.06 L7.46,14.87 C8.22,15.27 9.08,15.5 10,15.5 C10.79,15.5 11.53,15.33 12.21,15.04 L14.42,17.25 C13.13,18.05 11.62,18.5 10,18.5 L10,18.5 Z M10,14.5 C7.52,14.5 5.5,12.48 5.5,10 C5.5,7.52 7.52,5.5 10,5.5 C12.48,5.5 14.5,7.52 14.5,10 C14.5,12.48 12.48,14.5 10,14.5 L10,14.5 Z M15.04,12.21 C15.33,11.53 15.5,10.79 15.5,10 C15.5,9.08 15.27,8.22 14.87,7.46 L17.06,5.27 C17.97,6.62 18.5,8.25 18.5,10 C18.5,11.62 18.05,13.13 17.25,14.42 L15.04,12.21 L15.04,12.21 Z\\\"/></svg>\",\n      \"link\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M10.625,12.375 L7.525,15.475 C6.825,16.175 5.925,16.175 5.225,15.475 L4.525,14.775 C3.825,14.074 3.825,13.175 4.525,12.475 L7.625,9.375\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M9.325,7.375 L12.425,4.275 C13.125,3.575 14.025,3.575 14.724,4.275 L15.425,4.975 C16.125,5.675 16.125,6.575 15.425,7.275 L12.325,10.375\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M7.925,11.875 L11.925,7.975\\\"/></svg>\",\n      \"linkedin\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.77,17.89 L5.77,7.17 L2.21,7.17 L2.21,17.89 L5.77,17.89 L5.77,17.89 Z M3.99,5.71 C5.23,5.71 6.01,4.89 6.01,3.86 C5.99,2.8 5.24,2 4.02,2 C2.8,2 2,2.8 2,3.85 C2,4.88 2.77,5.7 3.97,5.7 L3.99,5.7 L3.99,5.71 L3.99,5.71 Z\\\"/><path d=\\\"M7.75,17.89 L11.31,17.89 L11.31,11.9 C11.31,11.58 11.33,11.26 11.43,11.03 C11.69,10.39 12.27,9.73 13.26,9.73 C14.55,9.73 15.06,10.71 15.06,12.15 L15.06,17.89 L18.62,17.89 L18.62,11.74 C18.62,8.45 16.86,6.92 14.52,6.92 C12.6,6.92 11.75,7.99 11.28,8.73 L11.3,8.73 L11.3,7.17 L7.75,7.17 C7.79,8.17 7.75,17.89 7.75,17.89 L7.75,17.89 L7.75,17.89 Z\\\"/></svg>\",\n      \"list\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"6\\\" y=\\\"4\\\" width=\\\"12\\\" height=\\\"1\\\"/><rect x=\\\"6\\\" y=\\\"9\\\" width=\\\"12\\\" height=\\\"1\\\"/><rect x=\\\"6\\\" y=\\\"14\\\" width=\\\"12\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"4\\\" width=\\\"2\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"9\\\" width=\\\"2\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"2\\\" height=\\\"1\\\"/></svg>\",\n      \"location\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" d=\\\"M10,0.5 C6.41,0.5 3.5,3.39 3.5,6.98 C3.5,11.83 10,19 10,19 C10,19 16.5,11.83 16.5,6.98 C16.5,3.39 13.59,0.5 10,0.5 L10,0.5 Z\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"6.8\\\" r=\\\"2.3\\\"/></svg>\",\n      \"lock\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" height=\\\"10\\\" width=\\\"13\\\" y=\\\"8.5\\\" x=\\\"3.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M6.5,8 L6.5,4.88 C6.5,3.01 8.07,1.5 10,1.5 C11.93,1.5 13.5,3.01 13.5,4.88 L13.5,8\\\"/></svg>\",\n      \"mail\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"1.4,6.5 10,11 18.6,6.5\\\"/><path d=\\\"M 1,4 1,16 19,16 19,4 1,4 Z M 18,15 2,15 2,5 18,5 18,15 Z\\\"/></svg>\",\n      \"menu\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"2\\\" y=\\\"4\\\" width=\\\"16\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"9\\\" width=\\\"16\\\" height=\\\"1\\\"/><rect x=\\\"2\\\" y=\\\"14\\\" width=\\\"16\\\" height=\\\"1\\\"/></svg>\",\n      \"microphone\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"10\\\" x2=\\\"10\\\" y1=\\\"16.44\\\" y2=\\\"18.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"7\\\" x2=\\\"13\\\" y1=\\\"18.5\\\" y2=\\\"18.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M13.5 4.89v5.87a3.5 3.5 0 0 1-7 0V4.89a3.5 3.5 0 0 1 7 0z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M15.5 10.36V11a5.5 5.5 0 0 1-11 0v-.6\\\"/></svg>\",\n      \"minus-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.5\\\" cy=\\\"9.5\\\" r=\\\"9\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"5\\\" y1=\\\"9.5\\\" x2=\\\"14\\\" y2=\\\"9.5\\\"/></svg>\",\n      \"minus\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect height=\\\"1\\\" width=\\\"18\\\" y=\\\"9\\\" x=\\\"1\\\"/></svg>\",\n      \"more-vertical\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"10\\\" cy=\\\"3\\\" r=\\\"2\\\"/><circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"2\\\"/><circle cx=\\\"10\\\" cy=\\\"17\\\" r=\\\"2\\\"/></svg>\",\n      \"more\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"3\\\" cy=\\\"10\\\" r=\\\"2\\\"/><circle cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"2\\\"/><circle cx=\\\"17\\\" cy=\\\"10\\\" r=\\\"2\\\"/></svg>\",\n      \"move\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"4,5 1,5 1,9 2,9 2,6 4,6\\\"/><polygon points=\\\"1,16 2,16 2,18 4,18 4,19 1,19\\\"/><polygon points=\\\"14,16 14,19 11,19 11,18 13,18 13,16\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"5.5\\\" y=\\\"1.5\\\" width=\\\"13\\\" height=\\\"13\\\"/><rect x=\\\"1\\\" y=\\\"11\\\" width=\\\"1\\\" height=\\\"3\\\"/><rect x=\\\"6\\\" y=\\\"18\\\" width=\\\"3\\\" height=\\\"1\\\"/></svg>\",\n      \"nut\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"2.5,5.7 10,1.3 17.5,5.7 17.5,14.3 10,18.7 2.5,14.3\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"3.5\\\"/></svg>\",\n      \"pagekit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"3,1 17,1 17,16 10,16 10,13 14,13 14,4 6,4 6,16 10,16 10,19 3,19\\\"/></svg>\",\n      \"paint-bucket\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.21,1 L0,11.21 L8.1,19.31 L18.31,9.1 L10.21,1 L10.21,1 Z M16.89,9.1 L15,11 L1.7,11 L10.21,2.42 L16.89,9.1 Z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M6.42,2.33 L11.7,7.61\\\"/><path d=\\\"M18.49,12 C18.49,12 20,14.06 20,15.36 C20,16.28 19.24,17 18.49,17 L18.49,17 C17.74,17 17,16.28 17,15.36 C17,14.06 18.49,12 18.49,12 L18.49,12 Z\\\"/></svg>\",\n      \"pencil\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17.25,6.01 L7.12,16.1 L3.82,17.2 L5.02,13.9 L15.12,3.88 C15.71,3.29 16.66,3.29 17.25,3.88 C17.83,4.47 17.83,5.42 17.25,6.01 L17.25,6.01 Z\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M15.98,7.268 L13.851,5.148\\\"/></svg>\",\n      \"phone-landscape\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M17,5.5 C17.8,5.5 18.5,6.2 18.5,7 L18.5,14 C18.5,14.8 17.8,15.5 17,15.5 L3,15.5 C2.2,15.5 1.5,14.8 1.5,14 L1.5,7 C1.5,6.2 2.2,5.5 3,5.5 L17,5.5 L17,5.5 L17,5.5 Z\\\"/><circle cx=\\\"3.8\\\" cy=\\\"10.5\\\" r=\\\".8\\\"/></svg>\",\n      \"phone\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M15.5,17 C15.5,17.8 14.8,18.5 14,18.5 L7,18.5 C6.2,18.5 5.5,17.8 5.5,17 L5.5,3 C5.5,2.2 6.2,1.5 7,1.5 L14,1.5 C14.8,1.5 15.5,2.2 15.5,3 L15.5,17 L15.5,17 L15.5,17 Z\\\"/><circle cx=\\\"10.5\\\" cy=\\\"16.5\\\" r=\\\".8\\\"/></svg>\",\n      \"pinterest\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.21,1 C5.5,1 3,4.16 3,7.61 C3,9.21 3.85,11.2 5.22,11.84 C5.43,11.94 5.54,11.89 5.58,11.69 C5.62,11.54 5.8,10.8 5.88,10.45 C5.91,10.34 5.89,10.24 5.8,10.14 C5.36,9.59 5,8.58 5,7.65 C5,5.24 6.82,2.91 9.93,2.91 C12.61,2.91 14.49,4.74 14.49,7.35 C14.49,10.3 13,12.35 11.06,12.35 C9.99,12.35 9.19,11.47 9.44,10.38 C9.75,9.08 10.35,7.68 10.35,6.75 C10.35,5.91 9.9,5.21 8.97,5.21 C7.87,5.21 6.99,6.34 6.99,7.86 C6.99,8.83 7.32,9.48 7.32,9.48 C7.32,9.48 6.24,14.06 6.04,14.91 C5.7,16.35 6.08,18.7 6.12,18.9 C6.14,19.01 6.26,19.05 6.33,18.95 C6.44,18.81 7.74,16.85 8.11,15.44 C8.24,14.93 8.79,12.84 8.79,12.84 C9.15,13.52 10.19,14.09 11.29,14.09 C14.58,14.09 16.96,11.06 16.96,7.3 C16.94,3.7 14,1 10.21,1\\\"/></svg>\",\n      \"play-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" points=\\\"8.5 7 13.5 10 8.5 13\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/></svg>\",\n      \"play\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6.5,5 14.5,10 6.5,15\\\"/></svg>\",\n      \"plus-circle\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.5\\\" cy=\\\"9.5\\\" r=\\\"9\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"5\\\" x2=\\\"9.5\\\" y2=\\\"14\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"5\\\" y1=\\\"9.5\\\" x2=\\\"14\\\" y2=\\\"9.5\\\"/></svg>\",\n      \"plus\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"9\\\" y=\\\"1\\\" width=\\\"1\\\" height=\\\"17\\\"/><rect x=\\\"1\\\" y=\\\"9\\\" width=\\\"17\\\" height=\\\"1\\\"/></svg>\",\n      \"print\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"4.5 13.5 1.5 13.5 1.5 6.5 18.5 6.5 18.5 13.5 15.5 13.5\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"15.5 6.5 15.5 2.5 4.5 2.5 4.5 6.5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" width=\\\"11\\\" height=\\\"6\\\" x=\\\"4.5\\\" y=\\\"11.5\\\"/><rect width=\\\"8\\\" height=\\\"1\\\" x=\\\"6\\\" y=\\\"13\\\"/><rect width=\\\"8\\\" height=\\\"1\\\" x=\\\"6\\\" y=\\\"15\\\"/></svg>\",\n      \"pull\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"6.85,8 9.5,10.6 12.15,8 12.85,8.7 9.5,12 6.15,8.7\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"11\\\" x2=\\\"9.5\\\" y2=\\\"2\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6,5.5 3.5,5.5 3.5,18.5 15.5,18.5 15.5,5.5 13,5.5\\\"/></svg>\",\n      \"push\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"12.15,4 9.5,1.4 6.85,4 6.15,3.3 9.5,0 12.85,3.3\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"10\\\" x2=\\\"9.5\\\" y2=\\\"1\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6 5.5 3.5 5.5 3.5 18.5 15.5 18.5 15.5 5.5 13 5.5\\\"/></svg>\",\n      \"question\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><circle cx=\\\"10.44\\\" cy=\\\"14.42\\\" r=\\\"1.05\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" d=\\\"M8.17,7.79 C8.17,4.75 12.72,4.73 12.72,7.72 C12.72,8.67 11.81,9.15 11.23,9.75 C10.75,10.24 10.51,10.73 10.45,11.4 C10.44,11.53 10.43,11.64 10.43,11.75\\\"/></svg>\",\n      \"quote-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.27,7.79 C17.27,9.45 16.97,10.43 15.99,12.02 C14.98,13.64 13,15.23 11.56,15.97 L11.1,15.08 C12.34,14.2 13.14,13.51 14.02,11.82 C14.27,11.34 14.41,10.92 14.49,10.54 C14.3,10.58 14.09,10.6 13.88,10.6 C12.06,10.6 10.59,9.12 10.59,7.3 C10.59,5.48 12.06,4 13.88,4 C15.39,4 16.67,5.02 17.05,6.42 C17.19,6.82 17.27,7.27 17.27,7.79 L17.27,7.79 Z\\\"/><path d=\\\"M8.68,7.79 C8.68,9.45 8.38,10.43 7.4,12.02 C6.39,13.64 4.41,15.23 2.97,15.97 L2.51,15.08 C3.75,14.2 4.55,13.51 5.43,11.82 C5.68,11.34 5.82,10.92 5.9,10.54 C5.71,10.58 5.5,10.6 5.29,10.6 C3.47,10.6 2,9.12 2,7.3 C2,5.48 3.47,4 5.29,4 C6.8,4 8.08,5.02 8.46,6.42 C8.6,6.82 8.68,7.27 8.68,7.79 L8.68,7.79 Z\\\"/></svg>\",\n      \"receiver\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" d=\\\"M6.189,13.611C8.134,15.525 11.097,18.239 13.867,18.257C16.47,18.275 18.2,16.241 18.2,16.241L14.509,12.551L11.539,13.639L6.189,8.29L7.313,5.355L3.76,1.8C3.76,1.8 1.732,3.537 1.7,6.092C1.667,8.809 4.347,11.738 6.189,13.611\\\"/></svg>\",\n      \"reddit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M19 9.05a2.56 2.56 0 0 0-2.56-2.56 2.59 2.59 0 0 0-1.88.82 10.63 10.63 0 0 0-4.14-1v-.08c.58-1.62 1.58-3.89 2.7-4.1.38-.08.77.12 1.19.57a1.15 1.15 0 0 0-.06.37 1.48 1.48 0 1 0 1.51-1.45 1.43 1.43 0 0 0-.76.19A2.29 2.29 0 0 0 12.91 1c-2.11.43-3.39 4.38-3.63 5.19 0 0 0 .11-.06.11a10.65 10.65 0 0 0-3.75 1A2.56 2.56 0 0 0 1 9.05a2.42 2.42 0 0 0 .72 1.76A5.18 5.18 0 0 0 1.24 13c0 3.66 3.92 6.64 8.73 6.64s8.74-3 8.74-6.64a5.23 5.23 0 0 0-.46-2.13A2.58 2.58 0 0 0 19 9.05zm-16.88 0a1.44 1.44 0 0 1 2.27-1.19 7.68 7.68 0 0 0-2.07 1.91 1.33 1.33 0 0 1-.2-.72zM10 18.4c-4.17 0-7.55-2.4-7.55-5.4S5.83 7.53 10 7.53 17.5 10 17.5 13s-3.38 5.4-7.5 5.4zm7.69-8.61a7.62 7.62 0 0 0-2.09-1.91 1.41 1.41 0 0 1 .84-.28 1.47 1.47 0 0 1 1.44 1.45 1.34 1.34 0 0 1-.21.72z\\\"/><path d=\\\"M6.69 12.58a1.39 1.39 0 1 1 1.39-1.39 1.38 1.38 0 0 1-1.38 1.39z\\\"/><path d=\\\"M14.26 11.2a1.39 1.39 0 1 1-1.39-1.39 1.39 1.39 0 0 1 1.39 1.39z\\\"/><path d=\\\"M13.09 14.88a.54.54 0 0 1-.09.77 5.3 5.3 0 0 1-3.26 1.19 5.61 5.61 0 0 1-3.4-1.22.55.55 0 1 1 .73-.83 4.09 4.09 0 0 0 5.25 0 .56.56 0 0 1 .77.09z\\\"/></svg>\",\n      \"refresh\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17.08,11.15 C17.09,11.31 17.1,11.47 17.1,11.64 C17.1,15.53 13.94,18.69 10.05,18.69 C6.16,18.68 3,15.53 3,11.63 C3,7.74 6.16,4.58 10.05,4.58 C10.9,4.58 11.71,4.73 12.46,5\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"9.9 2 12.79 4.89 9.79 7.9\\\"/></svg>\",\n      \"reply\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.7,13.11 C16.12,10.02 13.84,7.85 11.02,6.61 C10.57,6.41 9.75,6.13 9,5.91 L9,2 L1,9 L9,16 L9,12.13 C10.78,12.47 12.5,13.19 14.09,14.25 C17.13,16.28 18.56,18.54 18.56,18.54 C18.56,18.54 18.81,15.28 17.7,13.11 L17.7,13.11 Z M14.82,13.53 C13.17,12.4 11.01,11.4 8,10.92 L8,13.63 L2.55,9 L8,4.25 L8,6.8 C8.3,6.86 9.16,7.02 10.37,7.49 C13.3,8.65 15.54,10.96 16.65,13.08 C16.97,13.7 17.48,14.86 17.68,16 C16.87,15.05 15.73,14.15 14.82,13.53 L14.82,13.53 Z\\\"/></svg>\",\n      \"rss\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"3.12\\\" cy=\\\"16.8\\\" r=\\\"1.85\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,8.2 C1.78,8.18 2.06,8.16 2.35,8.16 C7.57,8.16 11.81,12.37 11.81,17.57 C11.81,17.89 11.79,18.19 11.76,18.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,2.52 C1.78,2.51 2.06,2.5 2.35,2.5 C10.72,2.5 17.5,9.24 17.5,17.57 C17.5,17.89 17.49,18.19 17.47,18.5\\\"/></svg>\",\n      \"search\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"/></svg>\",\n      \"server\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"3\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"5\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"7\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"16\\\" y=\\\"3\\\" width=\\\"1\\\" height=\\\"1\\\"/><rect x=\\\"16\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"1\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"9.9\\\" cy=\\\"17.4\\\" r=\\\"1.4\\\"/><rect x=\\\"3\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"5\\\" y=\\\"10\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"9.5\\\" y=\\\"14\\\" width=\\\"1\\\" height=\\\"2\\\"/><rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"6\\\" height=\\\"1\\\"/><rect x=\\\"11\\\" y=\\\"17\\\" width=\\\"6\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"1.5\\\" width=\\\"17\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"1.5\\\" y=\\\"8.5\\\" width=\\\"17\\\" height=\\\"5\\\"/></svg>\",\n      \"settings\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"6.11\\\" cy=\\\"3.55\\\" rx=\\\"2.11\\\" ry=\\\"2.15\\\"/><ellipse fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"6.11\\\" cy=\\\"15.55\\\" rx=\\\"2.11\\\" ry=\\\"2.15\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"13.15\\\" cy=\\\"9.55\\\" r=\\\"2.15\\\"/><rect x=\\\"1\\\" y=\\\"3\\\" width=\\\"3\\\" height=\\\"1\\\"/><rect x=\\\"10\\\" y=\\\"3\\\" width=\\\"8\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"9\\\" width=\\\"8\\\" height=\\\"1\\\"/><rect x=\\\"15\\\" y=\\\"9\\\" width=\\\"3\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"15\\\" width=\\\"3\\\" height=\\\"1\\\"/><rect x=\\\"10\\\" y=\\\"15\\\" width=\\\"8\\\" height=\\\"1\\\"/></svg>\",\n      \"shrink\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"11 4 12 4 12 8 16 8 16 9 11 9\\\"/><polygon points=\\\"4 11 9 11 9 16 8 16 8 12 4 12\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M12,8 L18,2\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M2,18 L8,12\\\"/></svg>\",\n      \"sign-in\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"7 2 17 2 17 17 7 17 7 16 16 16 16 3 7 3\\\"/><polygon points=\\\"9.1 13.4 8.5 12.8 11.28 10 4 10 4 9 11.28 9 8.5 6.2 9.1 5.62 13 9.5\\\"/></svg>\",\n      \"sign-out\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"13.1 13.4 12.5 12.8 15.28 10 8 10 8 9 15.28 9 12.5 6.2 13.1 5.62 17 9.5\\\"/><polygon points=\\\"13 2 3 2 3 17 13 17 13 16 4 16 4 3 13 3\\\"/></svg>\",\n      \"social\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13.4\\\" y1=\\\"14\\\" x2=\\\"6.3\\\" y2=\\\"10.7\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13.5\\\" y1=\\\"5.5\\\" x2=\\\"6.5\\\" y2=\\\"8.8\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"15.5\\\" cy=\\\"4.6\\\" r=\\\"2.3\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"15.5\\\" cy=\\\"14.8\\\" r=\\\"2.3\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"4.5\\\" cy=\\\"9.8\\\" r=\\\"2.3\\\"/></svg>\",\n      \"soundcloud\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.2,9.4c-0.4,0-0.8,0.1-1.101,0.2c-0.199-2.5-2.399-4.5-5-4.5c-0.6,0-1.2,0.1-1.7,0.3C9.2,5.5,9.1,5.6,9.1,5.6V15h8 c1.601,0,2.801-1.2,2.801-2.8C20,10.7,18.7,9.4,17.2,9.4L17.2,9.4z\\\"/><rect x=\\\"6\\\" y=\\\"6.5\\\" width=\\\"1.5\\\" height=\\\"8.5\\\"/><rect x=\\\"3\\\" y=\\\"8\\\" width=\\\"1.5\\\" height=\\\"7\\\"/><rect y=\\\"10\\\" width=\\\"1.5\\\" height=\\\"5\\\"/></svg>\",\n      \"star\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.01\\\" points=\\\"10 2 12.63 7.27 18.5 8.12 14.25 12.22 15.25 18 10 15.27 4.75 18 5.75 12.22 1.5 8.12 7.37 7.27\\\"/></svg>\",\n      \"strikethrough\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6,13.02 L6.65,13.02 C7.64,15.16 8.86,16.12 10.41,16.12 C12.22,16.12 12.92,14.93 12.92,13.89 C12.92,12.55 11.99,12.03 9.74,11.23 C8.05,10.64 6.23,10.11 6.23,7.83 C6.23,5.5 8.09,4.09 10.4,4.09 C11.44,4.09 12.13,4.31 12.72,4.54 L13.33,4 L13.81,4 L13.81,7.59 L13.16,7.59 C12.55,5.88 11.52,4.89 10.07,4.89 C8.84,4.89 7.89,5.69 7.89,7.03 C7.89,8.29 8.89,8.78 10.88,9.45 C12.57,10.03 14.38,10.6 14.38,12.91 C14.38,14.75 13.27,16.93 10.18,16.93 C9.18,16.93 8.17,16.69 7.46,16.39 L6.52,17 L6,17 L6,13.02 L6,13.02 Z\\\"/><rect x=\\\"3\\\" y=\\\"10\\\" width=\\\"15\\\" height=\\\"1\\\"/></svg>\",\n      \"table\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"1\\\" y=\\\"3\\\" width=\\\"18\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"7\\\" width=\\\"18\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"11\\\" width=\\\"18\\\" height=\\\"1\\\"/><rect x=\\\"1\\\" y=\\\"15\\\" width=\\\"18\\\" height=\\\"1\\\"/></svg>\",\n      \"tablet-landscape\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1.5,5 C1.5,4.2 2.2,3.5 3,3.5 L17,3.5 C17.8,3.5 18.5,4.2 18.5,5 L18.5,16 C18.5,16.8 17.8,17.5 17,17.5 L3,17.5 C2.2,17.5 1.5,16.8 1.5,16 L1.5,5 L1.5,5 L1.5,5 Z\\\"/><circle cx=\\\"3.7\\\" cy=\\\"10.5\\\" r=\\\".8\\\"/></svg>\",\n      \"tablet\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M5,18.5 C4.2,18.5 3.5,17.8 3.5,17 L3.5,3 C3.5,2.2 4.2,1.5 5,1.5 L16,1.5 C16.8,1.5 17.5,2.2 17.5,3 L17.5,17 C17.5,17.8 16.8,18.5 16,18.5 L5,18.5 L5,18.5 L5,18.5 Z\\\"/><circle cx=\\\"10.5\\\" cy=\\\"16.3\\\" r=\\\".8\\\"/></svg>\",\n      \"tag\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M17.5,3.71 L17.5,7.72 C17.5,7.96 17.4,8.2 17.21,8.39 L8.39,17.2 C7.99,17.6 7.33,17.6 6.93,17.2 L2.8,13.07 C2.4,12.67 2.4,12.01 2.8,11.61 L11.61,2.8 C11.81,2.6 12.08,2.5 12.34,2.5 L16.19,2.5 C16.52,2.5 16.86,2.63 17.11,2.88 C17.35,3.11 17.48,3.4 17.5,3.71 L17.5,3.71 Z\\\"/><circle cx=\\\"14\\\" cy=\\\"6\\\" r=\\\"1\\\"/></svg>\",\n      \"thumbnails\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"3.5\\\" width=\\\"5\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"11.5\\\" y=\\\"3.5\\\" width=\\\"5\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"11.5\\\" y=\\\"11.5\\\" width=\\\"5\\\" height=\\\"5\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"11.5\\\" width=\\\"5\\\" height=\\\"5\\\"/></svg>\",\n      \"trash\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"6.5 3 6.5 1.5 13.5 1.5 13.5 3\\\"/><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"4.5 4 4.5 18.5 15.5 18.5 15.5 4\\\"/><rect x=\\\"8\\\" y=\\\"7\\\" width=\\\"1\\\" height=\\\"9\\\"/><rect x=\\\"11\\\" y=\\\"7\\\" width=\\\"1\\\" height=\\\"9\\\"/><rect x=\\\"2\\\" y=\\\"3\\\" width=\\\"16\\\" height=\\\"1\\\"/></svg>\",\n      \"triangle-down\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"5 7 15 7 10 12\\\"/></svg>\",\n      \"triangle-left\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"12 5 7 10 12 15\\\"/></svg>\",\n      \"triangle-right\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"8 5 13 10 8 15\\\"/></svg>\",\n      \"triangle-up\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"5 13 10 8 15 13\\\"/></svg>\",\n      \"tripadvisor\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M19.021,7.866C19.256,6.862,20,5.854,20,5.854h-3.346C14.781,4.641,12.504,4,9.98,4C7.363,4,4.999,4.651,3.135,5.876H0\\tc0,0,0.738,0.987,0.976,1.988c-0.611,0.837-0.973,1.852-0.973,2.964c0,2.763,2.249,5.009,5.011,5.009\\tc1.576,0,2.976-0.737,3.901-1.879l1.063,1.599l1.075-1.615c0.475,0.611,1.1,1.111,1.838,1.451c1.213,0.547,2.574,0.612,3.825,0.15\\tc2.589-0.963,3.913-3.852,2.964-6.439c-0.175-0.463-0.4-0.876-0.675-1.238H19.021z M16.38,14.594\\tc-1.002,0.371-2.088,0.328-3.06-0.119c-0.688-0.317-1.252-0.817-1.657-1.438c-0.164-0.25-0.313-0.52-0.417-0.811\\tc-0.124-0.328-0.186-0.668-0.217-1.014c-0.063-0.689,0.037-1.396,0.339-2.043c0.448-0.971,1.251-1.71,2.25-2.079\\tc2.075-0.765,4.375,0.3,5.14,2.366c0.762,2.066-0.301,4.37-2.363,5.134L16.38,14.594L16.38,14.594z M8.322,13.066\\tc-0.72,1.059-1.935,1.76-3.309,1.76c-2.207,0-4.001-1.797-4.001-3.996c0-2.203,1.795-4.002,4.001-4.002\\tc2.204,0,3.999,1.8,3.999,4.002c0,0.137-0.024,0.261-0.04,0.396c-0.067,0.678-0.284,1.313-0.648,1.853v-0.013H8.322z M2.472,10.775\\tc0,1.367,1.112,2.479,2.476,2.479c1.363,0,2.472-1.11,2.472-2.479c0-1.359-1.11-2.468-2.472-2.468\\tC3.584,8.306,2.473,9.416,2.472,10.775L2.472,10.775z M12.514,10.775c0,1.367,1.104,2.479,2.471,2.479\\tc1.363,0,2.474-1.108,2.474-2.479c0-1.359-1.11-2.468-2.474-2.468c-1.364,0-2.477,1.109-2.477,2.468H12.514z M3.324,10.775\\tc0-0.893,0.726-1.618,1.614-1.618c0.889,0,1.625,0.727,1.625,1.618c0,0.898-0.725,1.627-1.625,1.627\\tc-0.901,0-1.625-0.729-1.625-1.627H3.324z M13.354,10.775c0-0.893,0.726-1.618,1.627-1.618c0.886,0,1.61,0.727,1.61,1.618\\tc0,0.898-0.726,1.627-1.626,1.627s-1.625-0.729-1.625-1.627H13.354z M9.977,4.875c1.798,0,3.425,0.324,4.849,0.968\\tc-0.535,0.015-1.061,0.108-1.586,0.3c-1.264,0.463-2.264,1.388-2.815,2.604c-0.262,0.551-0.398,1.133-0.448,1.72\\tC9.79,7.905,7.677,5.873,5.076,5.82C6.501,5.208,8.153,4.875,9.94,4.875H9.977z\\\"/></svg>\",\n      \"tumblr\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6.885,8.598c0,0,0,3.393,0,4.996c0,0.282,0,0.66,0.094,0.942c0.377,1.509,1.131,2.545,2.545,3.11 c1.319,0.472,2.356,0.472,3.676,0c0.565-0.188,1.132-0.659,1.132-0.659l-0.849-2.263c0,0-1.036,0.378-1.603,0.283 c-0.565-0.094-1.226-0.66-1.226-1.508c0-1.603,0-4.902,0-4.902h2.828V5.771h-2.828V2H8.205c0,0-0.094,0.66-0.188,0.942 C7.828,3.791,7.262,4.733,6.603,5.394C5.848,6.147,5,6.43,5,6.43v2.168H6.885z\\\"/></svg>\",\n      \"tv\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"7\\\" y=\\\"16\\\" width=\\\"6\\\" height=\\\"1\\\"/><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\".5\\\" y=\\\"3.5\\\" width=\\\"19\\\" height=\\\"11\\\"/></svg>\",\n      \"twitter\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M19,4.74 C18.339,5.029 17.626,5.229 16.881,5.32 C17.644,4.86 18.227,4.139 18.503,3.28 C17.79,3.7 17.001,4.009 16.159,4.17 C15.485,3.45 14.526,3 13.464,3 C11.423,3 9.771,4.66 9.771,6.7 C9.771,6.99 9.804,7.269 9.868,7.539 C6.795,7.38 4.076,5.919 2.254,3.679 C1.936,4.219 1.754,4.86 1.754,5.539 C1.754,6.82 2.405,7.95 3.397,8.61 C2.79,8.589 2.22,8.429 1.723,8.149 L1.723,8.189 C1.723,9.978 2.997,11.478 4.686,11.82 C4.376,11.899 4.049,11.939 3.713,11.939 C3.475,11.939 3.245,11.919 3.018,11.88 C3.49,13.349 4.852,14.419 6.469,14.449 C5.205,15.429 3.612,16.019 1.882,16.019 C1.583,16.019 1.29,16.009 1,15.969 C2.635,17.019 4.576,17.629 6.662,17.629 C13.454,17.629 17.17,12 17.17,7.129 C17.17,6.969 17.166,6.809 17.157,6.649 C17.879,6.129 18.504,5.478 19,4.74\\\"/></svg>\",\n      \"uikit\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon points=\\\"14.4,3.1 11.3,5.1 15,7.3 15,12.9 10,15.7 5,12.9 5,8.5 2,6.8 2,14.8 9.9,19.5 18,14.8 18,5.3\\\"/><polygon points=\\\"9.8,4.2 6.7,2.4 9.8,0.4 12.9,2.3\\\"/></svg>\",\n      \"unlock\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect fill=\\\"none\\\" stroke=\\\"#000\\\" x=\\\"3.5\\\" y=\\\"8.5\\\" width=\\\"13\\\" height=\\\"10\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M6.5,8.5 L6.5,4.9 C6.5,3 8.1,1.5 10,1.5 C11.9,1.5 13.5,3 13.5,4.9\\\"/></svg>\",\n      \"upload\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"5 8 9.5 3.5 14 8\\\"/><rect x=\\\"3\\\" y=\\\"17\\\" width=\\\"13\\\" height=\\\"1\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" x1=\\\"9.5\\\" y1=\\\"15\\\" x2=\\\"9.5\\\" y2=\\\"4\\\"/></svg>\",\n      \"user\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9.9\\\" cy=\\\"6.4\\\" r=\\\"4.4\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1.5,19 C2.3,14.5 5.8,11.2 10,11.2 C14.2,11.2 17.7,14.6 18.5,19.2\\\"/></svg>\",\n      \"users\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"7.7\\\" cy=\\\"8.6\\\" r=\\\"3.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M1,18.1 C1.7,14.6 4.4,12.1 7.6,12.1 C10.9,12.1 13.7,14.8 14.3,18.3\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M11.4,4 C12.8,2.4 15.4,2.8 16.3,4.7 C17.2,6.6 15.7,8.9 13.6,8.9 C16.5,8.9 18.8,11.3 19.2,14.1\\\"/></svg>\",\n      \"video-camera\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polygon fill=\\\"none\\\" stroke=\\\"#000\\\" points=\\\"17.5 6.9 17.5 13.1 13.5 10.4 13.5 14.5 2.5 14.5 2.5 5.5 13.5 5.5 13.5 9.6 17.5 6.9\\\"/></svg>\",\n      \"vimeo\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.065,7.59C1.84,7.367,1.654,7.082,1.468,6.838c-0.332-0.42-0.137-0.411,0.274-0.772c1.026-0.91,2.004-1.896,3.127-2.688 c1.017-0.713,2.365-1.173,3.286-0.039c0.849,1.045,0.869,2.629,1.084,3.891c0.215,1.309,0.421,2.648,0.88,3.901 c0.127,0.352,0.37,1.018,0.81,1.074c0.567,0.078,1.145-0.917,1.408-1.289c0.684-0.987,1.611-2.317,1.494-3.587 c-0.115-1.349-1.572-1.095-2.482-0.773c0.146-1.514,1.555-3.216,2.912-3.792c1.439-0.597,3.579-0.587,4.302,1.036 c0.772,1.759,0.078,3.802-0.763,5.396c-0.918,1.731-2.1,3.333-3.363,4.829c-1.114,1.329-2.432,2.787-4.093,3.422 c-1.897,0.723-3.021-0.686-3.667-2.318c-0.705-1.777-1.056-3.771-1.565-5.621C4.898,8.726,4.644,7.836,4.136,7.191 C3.473,6.358,2.72,7.141,2.065,7.59C1.977,7.502,2.115,7.551,2.065,7.59L2.065,7.59z\\\"/></svg>\",\n      \"warning\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle cx=\\\"10\\\" cy=\\\"14\\\" r=\\\"1\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9\\\"/><path d=\\\"M10.97,7.72 C10.85,9.54 10.56,11.29 10.56,11.29 C10.51,11.87 10.27,12 9.99,12 C9.69,12 9.49,11.87 9.43,11.29 C9.43,11.29 9.16,9.54 9.03,7.72 C8.96,6.54 9.03,6 9.03,6 C9.03,5.45 9.46,5.02 9.99,5 C10.53,5.01 10.97,5.44 10.97,6 C10.97,6 11.04,6.54 10.97,7.72 L10.97,7.72 Z\\\"/></svg>\",\n      \"whatsapp\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M16.7,3.3c-1.8-1.8-4.1-2.8-6.7-2.8c-5.2,0-9.4,4.2-9.4,9.4c0,1.7,0.4,3.3,1.3,4.7l-1.3,4.9l5-1.3c1.4,0.8,2.9,1.2,4.5,1.2 l0,0l0,0c5.2,0,9.4-4.2,9.4-9.4C19.5,7.4,18.5,5,16.7,3.3 M10.1,17.7L10.1,17.7c-1.4,0-2.8-0.4-4-1.1l-0.3-0.2l-3,0.8l0.8-2.9 l-0.2-0.3c-0.8-1.2-1.2-2.7-1.2-4.2c0-4.3,3.5-7.8,7.8-7.8c2.1,0,4.1,0.8,5.5,2.3c1.5,1.5,2.3,3.4,2.3,5.5 C17.9,14.2,14.4,17.7,10.1,17.7 M14.4,11.9c-0.2-0.1-1.4-0.7-1.6-0.8c-0.2-0.1-0.4-0.1-0.5,0.1c-0.2,0.2-0.6,0.8-0.8,0.9 c-0.1,0.2-0.3,0.2-0.5,0.1c-0.2-0.1-1-0.4-1.9-1.2c-0.7-0.6-1.2-1.4-1.3-1.6c-0.1-0.2,0-0.4,0.1-0.5C8,8.8,8.1,8.7,8.2,8.5 c0.1-0.1,0.2-0.2,0.2-0.4c0.1-0.2,0-0.3,0-0.4C8.4,7.6,7.9,6.5,7.7,6C7.5,5.5,7.3,5.6,7.2,5.6c-0.1,0-0.3,0-0.4,0 c-0.2,0-0.4,0.1-0.6,0.3c-0.2,0.2-0.8,0.8-0.8,2c0,1.2,0.8,2.3,1,2.4c0.1,0.2,1.7,2.5,4,3.5c0.6,0.2,1,0.4,1.3,0.5 c0.6,0.2,1.1,0.2,1.5,0.1c0.5-0.1,1.4-0.6,1.6-1.1c0.2-0.5,0.2-1,0.1-1.1C14.8,12.1,14.6,12,14.4,11.9\\\"/></svg>\",\n      \"wordpress\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10,0.5c-5.2,0-9.5,4.3-9.5,9.5s4.3,9.5,9.5,9.5c5.2,0,9.5-4.3,9.5-9.5S15.2,0.5,10,0.5L10,0.5L10,0.5z M15.6,3.9h-0.1 c-0.8,0-1.4,0.7-1.4,1.5c0,0.7,0.4,1.3,0.8,1.9c0.3,0.6,0.7,1.3,0.7,2.3c0,0.7-0.3,1.5-0.6,2.7L14.1,15l-3-8.9 c0.5,0,0.9-0.1,0.9-0.1C12.5,6,12.5,5.3,12,5.4c0,0-1.3,0.1-2.2,0.1C9,5.5,7.7,5.4,7.7,5.4C7.2,5.3,7.2,6,7.6,6c0,0,0.4,0.1,0.9,0.1 l1.3,3.5L8,15L5,6.1C5.5,6.1,5.9,6,5.9,6C6.4,6,6.3,5.3,5.9,5.4c0,0-1.3,0.1-2.2,0.1c-0.2,0-0.3,0-0.5,0c1.5-2.2,4-3.7,6.9-3.7 C12.2,1.7,14.1,2.6,15.6,3.9L15.6,3.9L15.6,3.9z M2.5,6.6l3.9,10.8c-2.7-1.3-4.6-4.2-4.6-7.4C1.8,8.8,2,7.6,2.5,6.6L2.5,6.6L2.5,6.6 z M10.2,10.7l2.5,6.9c0,0,0,0.1,0.1,0.1C11.9,18,11,18.2,10,18.2c-0.8,0-1.6-0.1-2.3-0.3L10.2,10.7L10.2,10.7L10.2,10.7z M14.2,17.1 l2.5-7.3c0.5-1.2,0.6-2.1,0.6-2.9c0-0.3,0-0.6-0.1-0.8c0.6,1.2,1,2.5,1,4C18.3,13,16.6,15.7,14.2,17.1L14.2,17.1L14.2,17.1z\\\"/></svg>\",\n      \"world\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M1,10.5 L19,10.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M2.35,15.5 L17.65,15.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M2.35,5.5 L17.523,5.5\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" d=\\\"M10,19.46 L9.98,19.46 C7.31,17.33 5.61,14.141 5.61,10.58 C5.61,7.02 7.33,3.83 10,1.7 C10.01,1.7 9.99,1.7 10,1.7 L10,1.7 C12.67,3.83 14.4,7.02 14.4,10.58 C14.4,14.141 12.67,17.33 10,19.46 L10,19.46 L10,19.46 L10,19.46 Z\\\"/><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"10\\\" cy=\\\"10.5\\\" r=\\\"9\\\"/></svg>\",\n      \"xing\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M4.4,4.56 C4.24,4.56 4.11,4.61 4.05,4.72 C3.98,4.83 3.99,4.97 4.07,5.12 L5.82,8.16 L5.82,8.17 L3.06,13.04 C2.99,13.18 2.99,13.33 3.06,13.44 C3.12,13.55 3.24,13.62 3.4,13.62 L6,13.62 C6.39,13.62 6.57,13.36 6.71,13.12 C6.71,13.12 9.41,8.35 9.51,8.16 C9.49,8.14 7.72,5.04 7.72,5.04 C7.58,4.81 7.39,4.56 6.99,4.56 L4.4,4.56 L4.4,4.56 Z\\\"/><path d=\\\"M15.3,1 C14.91,1 14.74,1.25 14.6,1.5 C14.6,1.5 9.01,11.42 8.82,11.74 C8.83,11.76 12.51,18.51 12.51,18.51 C12.64,18.74 12.84,19 13.23,19 L15.82,19 C15.98,19 16.1,18.94 16.16,18.83 C16.23,18.72 16.23,18.57 16.16,18.43 L12.5,11.74 L12.5,11.72 L18.25,1.56 C18.32,1.42 18.32,1.27 18.25,1.16 C18.21,1.06 18.08,1 17.93,1 L15.3,1 L15.3,1 Z\\\"/></svg>\",\n      \"yelp\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M17.175,14.971c-0.112,0.77-1.686,2.767-2.406,3.054c-0.246,0.1-0.487,0.076-0.675-0.069\\tc-0.122-0.096-2.446-3.859-2.446-3.859c-0.194-0.293-0.157-0.682,0.083-0.978c0.234-0.284,0.581-0.393,0.881-0.276\\tc0.016,0.01,4.21,1.394,4.332,1.482c0.178,0.148,0.263,0.379,0.225,0.646L17.175,14.971L17.175,14.971z M11.464,10.789\\tc-0.203-0.307-0.199-0.666,0.009-0.916c0,0,2.625-3.574,2.745-3.657c0.203-0.135,0.452-0.141,0.69-0.025\\tc0.691,0.335,2.085,2.405,2.167,3.199v0.027c0.024,0.271-0.082,0.491-0.273,0.623c-0.132,0.083-4.43,1.155-4.43,1.155\\tc-0.322,0.096-0.68-0.06-0.882-0.381L11.464,10.789z M9.475,9.563C9.32,9.609,8.848,9.757,8.269,8.817c0,0-3.916-6.16-4.007-6.351\\tc-0.057-0.212,0.011-0.455,0.202-0.65C5.047,1.211,8.21,0.327,9.037,0.529c0.27,0.069,0.457,0.238,0.522,0.479\\tc0.047,0.266,0.433,5.982,0.488,7.264C10.098,9.368,9.629,9.517,9.475,9.563z M9.927,19.066c-0.083,0.225-0.273,0.373-0.54,0.421\\tc-0.762,0.13-3.15-0.751-3.647-1.342c-0.096-0.131-0.155-0.262-0.167-0.394c-0.011-0.095,0-0.189,0.036-0.272\\tc0.061-0.155,2.917-3.538,2.917-3.538c0.214-0.272,0.595-0.355,0.952-0.213c0.345,0.13,0.56,0.428,0.536,0.749\\tC10.014,14.479,9.977,18.923,9.927,19.066z M3.495,13.912c-0.235-0.009-0.444-0.148-0.568-0.382c-0.089-0.17-0.151-0.453-0.19-0.794\\tC2.63,11.701,2.761,10.144,3.07,9.648c0.145-0.226,0.357-0.345,0.592-0.336c0.154,0,4.255,1.667,4.255,1.667\\tc0.321,0.118,0.521,0.453,0.5,0.833c-0.023,0.37-0.236,0.655-0.551,0.738L3.495,13.912z\\\"/></svg>\",\n      \"youtube\": \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M15,4.1c1,0.1,2.3,0,3,0.8c0.8,0.8,0.9,2.1,0.9,3.1C19,9.2,19,10.9,19,12c-0.1,1.1,0,2.4-0.5,3.4c-0.5,1.1-1.4,1.5-2.5,1.6 c-1.2,0.1-8.6,0.1-11,0c-1.1-0.1-2.4-0.1-3.2-1c-0.7-0.8-0.7-2-0.8-3C1,11.8,1,10.1,1,8.9c0-1.1,0-2.4,0.5-3.4C2,4.5,3,4.3,4.1,4.2 C5.3,4.1,12.6,4,15,4.1z M8,7.5v6l5.5-3L8,7.5z\\\"/></svg>\"\n    });\n  }\n\n  if (typeof window !== 'undefined' && window.UIkit) {\n    window.UIkit.use(plugin);\n  }\n\n  return plugin;\n});\n\n},{\"@babel/runtime/helpers/interopRequireDefault\":1,\"@babel/runtime/helpers/typeof\":2}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\n/*! UIkit 3.6.8 | https://www.getuikit.com | (c) 2014 - 2021 YOOtheme | MIT License */\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : (0, _typeof2[\"default\"])(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define('uikit', factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.UIkit = factory());\n})(void 0, function () {\n  'use strict';\n\n  var objPrototype = Object.prototype;\n  var hasOwnProperty = objPrototype.hasOwnProperty;\n\n  function hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }\n\n  var hyphenateCache = {};\n  var hyphenateRe = /([a-z\\d])([A-Z])/g;\n\n  function hyphenate(str) {\n    if (!(str in hyphenateCache)) {\n      hyphenateCache[str] = str.replace(hyphenateRe, '$1-$2').toLowerCase();\n    }\n\n    return hyphenateCache[str];\n  }\n\n  var camelizeCache = {};\n  var camelizeRe = /-(\\w)/g;\n\n  function camelize(str) {\n    if (!(str in camelizeCache)) {\n      camelizeCache[str] = str.replace(camelizeRe, toUpper);\n    }\n\n    return camelizeCache[str];\n  }\n\n  function toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n  }\n\n  function ucfirst(str) {\n    return str.length ? toUpper(null, str.charAt(0)) + str.slice(1) : '';\n  }\n\n  var strPrototype = String.prototype;\n\n  var startsWithFn = strPrototype.startsWith || function (search) {\n    return this.lastIndexOf(search, 0) === 0;\n  };\n\n  function startsWith(str, search) {\n    return startsWithFn.call(str, search);\n  }\n\n  var endsWithFn = strPrototype.endsWith || function (search) {\n    return this.substr(-search.length) === search;\n  };\n\n  function endsWith(str, search) {\n    return endsWithFn.call(str, search);\n  }\n\n  var arrPrototype = Array.prototype;\n\n  var includesFn = function includesFn(search, i) {\n    return !!~this.indexOf(search, i);\n  };\n\n  var includesStr = strPrototype.includes || includesFn;\n  var includesArray = arrPrototype.includes || includesFn;\n\n  function includes(obj, search) {\n    return obj && (isString(obj) ? includesStr : includesArray).call(obj, search);\n  }\n\n  var findIndexFn = arrPrototype.findIndex || function (predicate) {\n    var arguments$1 = arguments;\n\n    for (var i = 0; i < this.length; i++) {\n      if (predicate.call(arguments$1[1], this[i], i, this)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  function findIndex(array, predicate) {\n    return findIndexFn.call(array, predicate);\n  }\n\n  var isArray = Array.isArray;\n\n  function isFunction(obj) {\n    return typeof obj === 'function';\n  }\n\n  function isObject(obj) {\n    return obj !== null && (0, _typeof2[\"default\"])(obj) === 'object';\n  }\n\n  var toString = objPrototype.toString;\n\n  function isPlainObject(obj) {\n    return toString.call(obj) === '[object Object]';\n  }\n\n  function isWindow(obj) {\n    return isObject(obj) && obj === obj.window;\n  }\n\n  function isDocument(obj) {\n    return nodeType(obj) === 9;\n  }\n\n  function isNode(obj) {\n    return nodeType(obj) >= 1;\n  }\n\n  function isElement(obj) {\n    return nodeType(obj) === 1;\n  }\n\n  function nodeType(obj) {\n    return !isWindow(obj) && isObject(obj) && obj.nodeType;\n  }\n\n  function isBoolean(value) {\n    return typeof value === 'boolean';\n  }\n\n  function isString(value) {\n    return typeof value === 'string';\n  }\n\n  function isNumber(value) {\n    return typeof value === 'number';\n  }\n\n  function isNumeric(value) {\n    return isNumber(value) || isString(value) && !isNaN(value - parseFloat(value));\n  }\n\n  function isEmpty(obj) {\n    return !(isArray(obj) ? obj.length : isObject(obj) ? Object.keys(obj).length : false);\n  }\n\n  function isUndefined(value) {\n    return value === void 0;\n  }\n\n  function toBoolean(value) {\n    return isBoolean(value) ? value : value === 'true' || value === '1' || value === '' ? true : value === 'false' || value === '0' ? false : value;\n  }\n\n  function toNumber(value) {\n    var number = Number(value);\n    return !isNaN(number) ? number : false;\n  }\n\n  function toFloat(value) {\n    return parseFloat(value) || 0;\n  }\n\n  var toArray = Array.from || function (value) {\n    return arrPrototype.slice.call(value);\n  };\n\n  function toNode(element) {\n    return toNodes(element)[0];\n  }\n\n  function toNodes(element) {\n    return element && (isNode(element) ? [element] : toArray(element).filter(isNode)) || [];\n  }\n\n  function toWindow(element) {\n    if (isWindow(element)) {\n      return element;\n    }\n\n    element = toNode(element);\n    return element ? (isDocument(element) ? element : element.ownerDocument).defaultView : window;\n  }\n\n  function toMs(time) {\n    return !time ? 0 : endsWith(time, 'ms') ? toFloat(time) : toFloat(time) * 1000;\n  }\n\n  function isEqual(value, other) {\n    return value === other || isObject(value) && isObject(other) && Object.keys(value).length === Object.keys(other).length && each(value, function (val, key) {\n      return val === other[key];\n    });\n  }\n\n  function swap(value, a, b) {\n    return value.replace(new RegExp(a + \"|\" + b, 'g'), function (match) {\n      return match === a ? b : a;\n    });\n  }\n\n  var assign = Object.assign || function (target) {\n    var args = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) {\n      args[len] = arguments[len + 1];\n    }\n\n    target = Object(target);\n\n    for (var i = 0; i < args.length; i++) {\n      var source = args[i];\n\n      if (source !== null) {\n        for (var key in source) {\n          if (hasOwn(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function last(array) {\n    return array[array.length - 1];\n  }\n\n  function each(obj, cb) {\n    for (var key in obj) {\n      if (false === cb(obj[key], key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function sortBy(array, prop) {\n    return array.slice().sort(function (ref, ref$1) {\n      var propA = ref[prop];\n      if (propA === void 0) propA = 0;\n      var propB = ref$1[prop];\n      if (propB === void 0) propB = 0;\n      return propA > propB ? 1 : propB > propA ? -1 : 0;\n    });\n  }\n\n  function uniqueBy(array, prop) {\n    var seen = new Set();\n    return array.filter(function (ref) {\n      var check = ref[prop];\n      return seen.has(check) ? false : seen.add(check) || true;\n    } // IE 11 does not return the Set object\n    );\n  }\n\n  function clamp(number, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n    return Math.min(Math.max(toNumber(number) || 0, min), max);\n  }\n\n  function noop() {}\n\n  function intersectRect() {\n    var rects = [],\n        len = arguments.length;\n\n    while (len--) {\n      rects[len] = arguments[len];\n    }\n\n    return [['bottom', 'top'], ['right', 'left']].every(function (ref) {\n      var minProp = ref[0];\n      var maxProp = ref[1];\n      return Math.min.apply(Math, rects.map(function (ref) {\n        var min = ref[minProp];\n        return min;\n      })) - Math.max.apply(Math, rects.map(function (ref) {\n        var max = ref[maxProp];\n        return max;\n      })) > 0;\n    });\n  }\n\n  function pointInRect(point, rect) {\n    return point.x <= rect.right && point.x >= rect.left && point.y <= rect.bottom && point.y >= rect.top;\n  }\n\n  var Dimensions = {\n    ratio: function ratio(dimensions, prop, value) {\n      var obj;\n      var aProp = prop === 'width' ? 'height' : 'width';\n      return obj = {}, obj[aProp] = dimensions[prop] ? Math.round(value * dimensions[aProp] / dimensions[prop]) : dimensions[aProp], obj[prop] = value, obj;\n    },\n    contain: function contain(dimensions, maxDimensions) {\n      var this$1 = this;\n      dimensions = assign({}, dimensions);\n      each(dimensions, function (_, prop) {\n        return dimensions = dimensions[prop] > maxDimensions[prop] ? this$1.ratio(dimensions, prop, maxDimensions[prop]) : dimensions;\n      });\n      return dimensions;\n    },\n    cover: function cover(dimensions, maxDimensions) {\n      var this$1 = this;\n      dimensions = this.contain(dimensions, maxDimensions);\n      each(dimensions, function (_, prop) {\n        return dimensions = dimensions[prop] < maxDimensions[prop] ? this$1.ratio(dimensions, prop, maxDimensions[prop]) : dimensions;\n      });\n      return dimensions;\n    }\n  };\n\n  function _getIndex(i, elements, current, finite) {\n    if (current === void 0) current = 0;\n    if (finite === void 0) finite = false;\n    elements = toNodes(elements);\n    var length = elements.length;\n    i = isNumeric(i) ? toNumber(i) : i === 'next' ? current + 1 : i === 'previous' ? current - 1 : elements.indexOf(toNode(i));\n\n    if (finite) {\n      return clamp(i, 0, length - 1);\n    }\n\n    i %= length;\n    return i < 0 ? i + length : i;\n  }\n\n  function attr(element, name, value) {\n    if (isObject(name)) {\n      for (var key in name) {\n        attr(element, key, name[key]);\n      }\n\n      return;\n    }\n\n    if (isUndefined(value)) {\n      element = toNode(element);\n      return element && element.getAttribute(name);\n    } else {\n      toNodes(element).forEach(function (element) {\n        if (isFunction(value)) {\n          value = value.call(element, attr(element, name));\n        }\n\n        if (value === null) {\n          removeAttr(element, name);\n        } else {\n          element.setAttribute(name, value);\n        }\n      });\n    }\n  }\n\n  function hasAttr(element, name) {\n    return toNodes(element).some(function (element) {\n      return element.hasAttribute(name);\n    });\n  }\n\n  function removeAttr(element, name) {\n    element = toNodes(element);\n    name.split(' ').forEach(function (name) {\n      return element.forEach(function (element) {\n        return element.hasAttribute(name) && element.removeAttribute(name);\n      });\n    });\n  }\n\n  function data(element, attribute) {\n    for (var i = 0, attrs = [attribute, \"data-\" + attribute]; i < attrs.length; i++) {\n      if (hasAttr(element, attrs[i])) {\n        return attr(element, attrs[i]);\n      }\n    }\n  }\n  /* global DocumentTouch */\n\n\n  var inBrowser = typeof window !== 'undefined';\n  var isIE = inBrowser && /msie|trident/i.test(window.navigator.userAgent);\n  var isRtl = inBrowser && attr(document.documentElement, 'dir') === 'rtl';\n  var hasTouchEvents = inBrowser && 'ontouchstart' in window;\n  var hasPointerEvents = inBrowser && window.PointerEvent;\n  var hasTouch = inBrowser && (hasTouchEvents || window.DocumentTouch && document instanceof DocumentTouch || navigator.maxTouchPoints); // IE >=11\n\n  var pointerDown = hasPointerEvents ? 'pointerdown' : hasTouchEvents ? 'touchstart' : 'mousedown';\n  var pointerMove = hasPointerEvents ? 'pointermove' : hasTouchEvents ? 'touchmove' : 'mousemove';\n  var pointerUp = hasPointerEvents ? 'pointerup' : hasTouchEvents ? 'touchend' : 'mouseup';\n  var pointerEnter = hasPointerEvents ? 'pointerenter' : hasTouchEvents ? '' : 'mouseenter';\n  var pointerLeave = hasPointerEvents ? 'pointerleave' : hasTouchEvents ? '' : 'mouseleave';\n  var pointerCancel = hasPointerEvents ? 'pointercancel' : 'touchcancel';\n  var voidElements = {\n    area: true,\n    base: true,\n    br: true,\n    col: true,\n    embed: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    menuitem: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n  };\n\n  function isVoidElement(element) {\n    return toNodes(element).some(function (element) {\n      return voidElements[element.tagName.toLowerCase()];\n    });\n  }\n\n  function isVisible(element) {\n    return toNodes(element).some(function (element) {\n      return element.offsetWidth || element.offsetHeight || element.getClientRects().length;\n    });\n  }\n\n  var selInput = 'input,select,textarea,button';\n\n  function isInput(element) {\n    return toNodes(element).some(function (element) {\n      return matches(element, selInput);\n    });\n  }\n\n  function parent(element) {\n    element = toNode(element);\n    return element && isElement(element.parentNode) && element.parentNode;\n  }\n\n  function filter(element, selector) {\n    return toNodes(element).filter(function (element) {\n      return matches(element, selector);\n    });\n  }\n\n  var elProto = inBrowser ? Element.prototype : {};\n  var matchesFn = elProto.matches || elProto.webkitMatchesSelector || elProto.msMatchesSelector || noop;\n\n  function matches(element, selector) {\n    return toNodes(element).some(function (element) {\n      return matchesFn.call(element, selector);\n    });\n  }\n\n  var closestFn = elProto.closest || function (selector) {\n    var ancestor = this;\n\n    do {\n      if (matches(ancestor, selector)) {\n        return ancestor;\n      }\n    } while (ancestor = parent(ancestor));\n  };\n\n  function closest(element, selector) {\n    if (startsWith(selector, '>')) {\n      selector = selector.slice(1);\n    }\n\n    return isElement(element) ? closestFn.call(element, selector) : toNodes(element).map(function (element) {\n      return closest(element, selector);\n    }).filter(Boolean);\n  }\n\n  function within(element, selector) {\n    return !isString(selector) ? element === selector || (isDocument(selector) ? selector.documentElement : toNode(selector)).contains(toNode(element)) // IE 11 document does not implement contains\n    : matches(element, selector) || !!closest(element, selector);\n  }\n\n  function parents(element, selector) {\n    var elements = [];\n\n    while (element = parent(element)) {\n      if (!selector || matches(element, selector)) {\n        elements.push(element);\n      }\n    }\n\n    return elements;\n  }\n\n  function _children(element, selector) {\n    element = toNode(element);\n    var children = element ? toNodes(element.children) : [];\n    return selector ? filter(children, selector) : children;\n  }\n\n  function index(element, ref) {\n    return ref ? toNodes(element).indexOf(toNode(ref)) : _children(parent(element)).indexOf(element);\n  }\n\n  function query(selector, context) {\n    return toNode(selector) || find(selector, getContext(selector, context));\n  }\n\n  function queryAll(selector, context) {\n    var nodes = toNodes(selector);\n    return nodes.length && nodes || findAll(selector, getContext(selector, context));\n  }\n\n  function getContext(selector, context) {\n    if (context === void 0) context = document;\n    return isContextSelector(selector) || isDocument(context) ? context : context.ownerDocument;\n  }\n\n  function find(selector, context) {\n    return toNode(_query(selector, context, 'querySelector'));\n  }\n\n  function findAll(selector, context) {\n    return toNodes(_query(selector, context, 'querySelectorAll'));\n  }\n\n  function _query(selector, context, queryFn) {\n    if (context === void 0) context = document;\n\n    if (!selector || !isString(selector)) {\n      return null;\n    }\n\n    selector = selector.replace(contextSanitizeRe, '$1 *');\n\n    if (isContextSelector(selector)) {\n      selector = splitSelector(selector).map(function (selector, i) {\n        var ctx = context;\n\n        if (selector[0] === '!') {\n          var selectors = selector.substr(1).trim().split(' ');\n          ctx = closest(parent(context), selectors[0]);\n          selector = selectors.slice(1).join(' ').trim();\n        }\n\n        if (selector[0] === '-') {\n          var selectors$1 = selector.substr(1).trim().split(' ');\n          var prev = (ctx || context).previousElementSibling;\n          ctx = matches(prev, selector.substr(1)) ? prev : null;\n          selector = selectors$1.slice(1).join(' ');\n        }\n\n        if (!ctx) {\n          return null;\n        }\n\n        return domPath(ctx) + \" \" + selector;\n      }).filter(Boolean).join(',');\n      context = document;\n    }\n\n    try {\n      return context[queryFn](selector);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  var contextSelectorRe = /(^|[^\\\\],)\\s*[!>+~-]/;\n  var contextSanitizeRe = /([!>+~-])(?=\\s+[!>+~-]|\\s*$)/g;\n\n  function isContextSelector(selector) {\n    return isString(selector) && selector.match(contextSelectorRe);\n  }\n\n  var selectorRe = /.*?[^\\\\](?:,|$)/g;\n\n  function splitSelector(selector) {\n    return selector.match(selectorRe).map(function (selector) {\n      return selector.replace(/,$/, '').trim();\n    });\n  }\n\n  function domPath(element) {\n    var names = [];\n\n    while (element.parentNode) {\n      if (element.id) {\n        names.unshift(\"#\" + escape(element.id));\n        break;\n      } else {\n        var tagName = element.tagName;\n\n        if (tagName !== 'HTML') {\n          tagName += \":nth-child(\" + (index(element) + 1) + \")\";\n        }\n\n        names.unshift(tagName);\n        element = element.parentNode;\n      }\n    }\n\n    return names.join(' > ');\n  }\n\n  var escapeFn = inBrowser && window.CSS && CSS.escape || function (css) {\n    return css.replace(/([^\\x7f-\\uFFFF\\w-])/g, function (match) {\n      return \"\\\\\" + match;\n    });\n  };\n\n  function escape(css) {\n    return isString(css) ? escapeFn.call(null, css) : '';\n  }\n\n  function on() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = getArgs(args);\n    var targets = ref[0];\n    var type = ref[1];\n    var selector = ref[2];\n    var listener = ref[3];\n    var useCapture = ref[4];\n    targets = toEventTargets(targets);\n\n    if (listener.length > 1) {\n      listener = detail(listener);\n    }\n\n    if (useCapture && useCapture.self) {\n      listener = selfFilter(listener);\n    }\n\n    if (selector) {\n      listener = delegate(selector, listener);\n    }\n\n    useCapture = useCaptureFilter(useCapture);\n    type.split(' ').forEach(function (type) {\n      return targets.forEach(function (target) {\n        return target.addEventListener(type, listener, useCapture);\n      });\n    });\n    return function () {\n      return off(targets, type, listener, useCapture);\n    };\n  }\n\n  function off(targets, type, listener, useCapture) {\n    if (useCapture === void 0) useCapture = false;\n    useCapture = useCaptureFilter(useCapture);\n    targets = toEventTargets(targets);\n    type.split(' ').forEach(function (type) {\n      return targets.forEach(function (target) {\n        return target.removeEventListener(type, listener, useCapture);\n      });\n    });\n  }\n\n  function once() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    var ref = getArgs(args);\n    var element = ref[0];\n    var type = ref[1];\n    var selector = ref[2];\n    var listener = ref[3];\n    var useCapture = ref[4];\n    var condition = ref[5];\n    var off = on(element, type, selector, function (e) {\n      var result = !condition || condition(e);\n\n      if (result) {\n        off();\n        listener(e, result);\n      }\n    }, useCapture);\n    return off;\n  }\n\n  function trigger(targets, event, detail) {\n    return toEventTargets(targets).reduce(function (notCanceled, target) {\n      return notCanceled && target.dispatchEvent(createEvent(event, true, true, detail));\n    }, true);\n  }\n\n  function createEvent(e, bubbles, cancelable, detail) {\n    if (bubbles === void 0) bubbles = true;\n    if (cancelable === void 0) cancelable = false;\n\n    if (isString(e)) {\n      var event = document.createEvent('CustomEvent'); // IE 11\n\n      event.initCustomEvent(e, bubbles, cancelable, detail);\n      e = event;\n    }\n\n    return e;\n  }\n\n  function getArgs(args) {\n    if (isFunction(args[2])) {\n      args.splice(2, 0, false);\n    }\n\n    return args;\n  }\n\n  function delegate(selector, listener) {\n    var this$1 = this;\n    return function (e) {\n      var current = selector[0] === '>' ? findAll(selector, e.currentTarget).reverse().filter(function (element) {\n        return within(e.target, element);\n      })[0] : closest(e.target, selector);\n\n      if (current) {\n        e.current = current;\n        listener.call(this$1, e);\n      }\n    };\n  }\n\n  function detail(listener) {\n    return function (e) {\n      return isArray(e.detail) ? listener.apply(void 0, [e].concat(e.detail)) : listener(e);\n    };\n  }\n\n  function selfFilter(listener) {\n    return function (e) {\n      if (e.target === e.currentTarget || e.target === e.current) {\n        return listener.call(null, e);\n      }\n    };\n  }\n\n  function useCaptureFilter(options) {\n    return options && isIE && !isBoolean(options) ? !!options.capture : options;\n  }\n\n  function isEventTarget(target) {\n    return target && 'addEventListener' in target;\n  }\n\n  function toEventTarget(target) {\n    return isEventTarget(target) ? target : toNode(target);\n  }\n\n  function toEventTargets(target) {\n    return isArray(target) ? target.map(toEventTarget).filter(Boolean) : isString(target) ? findAll(target) : isEventTarget(target) ? [target] : toNodes(target);\n  }\n\n  function isTouch(e) {\n    return e.pointerType === 'touch' || !!e.touches;\n  }\n\n  function getEventPos(e) {\n    var touches = e.touches;\n    var changedTouches = e.changedTouches;\n    var ref = touches && touches[0] || changedTouches && changedTouches[0] || e;\n    var x = ref.clientX;\n    var y = ref.clientY;\n    return {\n      x: x,\n      y: y\n    };\n  }\n  /* global setImmediate */\n\n\n  var Promise = inBrowser && window.Promise || PromiseFn;\n\n  var Deferred = function Deferred() {\n    var this$1 = this;\n    this.promise = new Promise(function (resolve, reject) {\n      this$1.reject = reject;\n      this$1.resolve = resolve;\n    });\n  };\n  /**\n   * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n   */\n\n\n  var RESOLVED = 0;\n  var REJECTED = 1;\n  var PENDING = 2;\n  var async = inBrowser && window.setImmediate || setTimeout;\n\n  function PromiseFn(executor) {\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n    var promise = this;\n\n    try {\n      executor(function (x) {\n        promise.resolve(x);\n      }, function (r) {\n        promise.reject(r);\n      });\n    } catch (e) {\n      promise.reject(e);\n    }\n  }\n\n  PromiseFn.reject = function (r) {\n    return new PromiseFn(function (resolve, reject) {\n      reject(r);\n    });\n  };\n\n  PromiseFn.resolve = function (x) {\n    return new PromiseFn(function (resolve, reject) {\n      resolve(x);\n    });\n  };\n\n  PromiseFn.all = function all(iterable) {\n    return new PromiseFn(function (resolve, reject) {\n      var result = [];\n      var count = 0;\n\n      if (iterable.length === 0) {\n        resolve(result);\n      }\n\n      function resolver(i) {\n        return function (x) {\n          result[i] = x;\n          count += 1;\n\n          if (count === iterable.length) {\n            resolve(result);\n          }\n        };\n      }\n\n      for (var i = 0; i < iterable.length; i += 1) {\n        PromiseFn.resolve(iterable[i]).then(resolver(i), reject);\n      }\n    });\n  };\n\n  PromiseFn.race = function race(iterable) {\n    return new PromiseFn(function (resolve, reject) {\n      for (var i = 0; i < iterable.length; i += 1) {\n        PromiseFn.resolve(iterable[i]).then(resolve, reject);\n      }\n    });\n  };\n\n  var p = PromiseFn.prototype;\n\n  p.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n      if (x === promise) {\n        throw new TypeError('Promise settled with itself.');\n      }\n\n      var called = false;\n\n      try {\n        var then = x && x.then;\n\n        if (x !== null && isObject(x) && isFunction(then)) {\n          then.call(x, function (x) {\n            if (!called) {\n              promise.resolve(x);\n            }\n\n            called = true;\n          }, function (r) {\n            if (!called) {\n              promise.reject(r);\n            }\n\n            called = true;\n          });\n          return;\n        }\n      } catch (e) {\n        if (!called) {\n          promise.reject(e);\n        }\n\n        return;\n      }\n\n      promise.state = RESOLVED;\n      promise.value = x;\n      promise.notify();\n    }\n  };\n\n  p.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n      if (reason === promise) {\n        throw new TypeError('Promise settled with itself.');\n      }\n\n      promise.state = REJECTED;\n      promise.value = reason;\n      promise.notify();\n    }\n  };\n\n  p.notify = function notify() {\n    var this$1 = this;\n    async(function () {\n      if (this$1.state !== PENDING) {\n        while (this$1.deferred.length) {\n          var ref = this$1.deferred.shift();\n          var onResolved = ref[0];\n          var onRejected = ref[1];\n          var resolve = ref[2];\n          var reject = ref[3];\n\n          try {\n            if (this$1.state === RESOLVED) {\n              if (isFunction(onResolved)) {\n                resolve(onResolved.call(undefined, this$1.value));\n              } else {\n                resolve(this$1.value);\n              }\n            } else if (this$1.state === REJECTED) {\n              if (isFunction(onRejected)) {\n                resolve(onRejected.call(undefined, this$1.value));\n              } else {\n                reject(this$1.value);\n              }\n            }\n          } catch (e) {\n            reject(e);\n          }\n        }\n      }\n    });\n  };\n\n  p.then = function then(onResolved, onRejected) {\n    var this$1 = this;\n    return new PromiseFn(function (resolve, reject) {\n      this$1.deferred.push([onResolved, onRejected, resolve, reject]);\n      this$1.notify();\n    });\n  };\n\n  p[\"catch\"] = function (onRejected) {\n    return this.then(undefined, onRejected);\n  };\n\n  function ajax(url, options) {\n    return new Promise(function (resolve, reject) {\n      var env = assign({\n        data: null,\n        method: 'GET',\n        headers: {},\n        xhr: new XMLHttpRequest(),\n        beforeSend: noop,\n        responseType: ''\n      }, options);\n      env.beforeSend(env);\n      var xhr = env.xhr;\n\n      for (var prop in env) {\n        if (prop in xhr) {\n          try {\n            xhr[prop] = env[prop];\n          } catch (e) {}\n        }\n      }\n\n      xhr.open(env.method.toUpperCase(), url);\n\n      for (var header in env.headers) {\n        xhr.setRequestHeader(header, env.headers[header]);\n      }\n\n      on(xhr, 'load', function () {\n        if (xhr.status === 0 || xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) {\n          // IE 11 does not support responseType 'json'\n          if (env.responseType === 'json' && isString(xhr.response)) {\n            xhr = assign(copyXhr(xhr), {\n              response: JSON.parse(xhr.response)\n            });\n          }\n\n          resolve(xhr);\n        } else {\n          reject(assign(Error(xhr.statusText), {\n            xhr: xhr,\n            status: xhr.status\n          }));\n        }\n      });\n      on(xhr, 'error', function () {\n        return reject(assign(Error('Network Error'), {\n          xhr: xhr\n        }));\n      });\n      on(xhr, 'timeout', function () {\n        return reject(assign(Error('Network Timeout'), {\n          xhr: xhr\n        }));\n      });\n      xhr.send(env.data);\n    });\n  }\n\n  function getImage(src, srcset, sizes) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n\n      img.onerror = function (e) {\n        return reject(e);\n      };\n\n      img.onload = function () {\n        return resolve(img);\n      };\n\n      sizes && (img.sizes = sizes);\n      srcset && (img.srcset = srcset);\n      img.src = src;\n    });\n  }\n\n  function copyXhr(source) {\n    var target = {};\n\n    for (var key in source) {\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function ready(fn) {\n    if (document.readyState !== 'loading') {\n      fn();\n      return;\n    }\n\n    var unbind = on(document, 'DOMContentLoaded', function () {\n      unbind();\n      fn();\n    });\n  }\n\n  function empty(element) {\n    element = $(element);\n    element.innerHTML = '';\n    return element;\n  }\n\n  function html(parent, html) {\n    parent = $(parent);\n    return isUndefined(html) ? parent.innerHTML : append(parent.hasChildNodes() ? empty(parent) : parent, html);\n  }\n\n  function prepend(parent, element) {\n    parent = $(parent);\n\n    if (!parent.hasChildNodes()) {\n      return append(parent, element);\n    } else {\n      return insertNodes(element, function (element) {\n        return parent.insertBefore(element, parent.firstChild);\n      });\n    }\n  }\n\n  function append(parent, element) {\n    parent = $(parent);\n    return insertNodes(element, function (element) {\n      return parent.appendChild(element);\n    });\n  }\n\n  function before(ref, element) {\n    ref = $(ref);\n    return insertNodes(element, function (element) {\n      return ref.parentNode.insertBefore(element, ref);\n    });\n  }\n\n  function after(ref, element) {\n    ref = $(ref);\n    return insertNodes(element, function (element) {\n      return ref.nextSibling ? before(ref.nextSibling, element) : append(ref.parentNode, element);\n    });\n  }\n\n  function insertNodes(element, fn) {\n    element = isString(element) ? fragment(element) : element;\n    return element ? 'length' in element ? toNodes(element).map(fn) : fn(element) : null;\n  }\n\n  function _remove(element) {\n    toNodes(element).forEach(function (element) {\n      return element.parentNode && element.parentNode.removeChild(element);\n    });\n  }\n\n  function wrapAll(element, structure) {\n    structure = toNode(before(element, structure));\n\n    while (structure.firstChild) {\n      structure = structure.firstChild;\n    }\n\n    append(structure, element);\n    return structure;\n  }\n\n  function wrapInner(element, structure) {\n    return toNodes(toNodes(element).map(function (element) {\n      return element.hasChildNodes ? wrapAll(toNodes(element.childNodes), structure) : append(element, structure);\n    }));\n  }\n\n  function unwrap(element) {\n    toNodes(element).map(parent).filter(function (value, index, self) {\n      return self.indexOf(value) === index;\n    }).forEach(function (parent) {\n      before(parent, parent.childNodes);\n\n      _remove(parent);\n    });\n  }\n\n  var fragmentRe = /^\\s*<(\\w+|!)[^>]*>/;\n  var singleTagRe = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/;\n\n  function fragment(html) {\n    var matches = singleTagRe.exec(html);\n\n    if (matches) {\n      return document.createElement(matches[1]);\n    }\n\n    var container = document.createElement('div');\n\n    if (fragmentRe.test(html)) {\n      container.insertAdjacentHTML('beforeend', html.trim());\n    } else {\n      container.textContent = html;\n    }\n\n    return container.childNodes.length > 1 ? toNodes(container.childNodes) : container.firstChild;\n  }\n\n  function apply(node, fn) {\n    if (!isElement(node)) {\n      return;\n    }\n\n    fn(node);\n    node = node.firstElementChild;\n\n    while (node) {\n      var next = node.nextElementSibling;\n      apply(node, fn);\n      node = next;\n    }\n  }\n\n  function $(selector, context) {\n    return !isString(selector) ? toNode(selector) : isHtml(selector) ? toNode(fragment(selector)) : find(selector, context);\n  }\n\n  function $$(selector, context) {\n    return !isString(selector) ? toNodes(selector) : isHtml(selector) ? toNodes(fragment(selector)) : findAll(selector, context);\n  }\n\n  function isHtml(str) {\n    return str[0] === '<' || str.match(/^\\s*</);\n  }\n\n  function addClass(element) {\n    var args = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) {\n      args[len] = arguments[len + 1];\n    }\n\n    apply$1(element, args, 'add');\n  }\n\n  function removeClass(element) {\n    var args = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) {\n      args[len] = arguments[len + 1];\n    }\n\n    apply$1(element, args, 'remove');\n  }\n\n  function removeClasses(element, cls) {\n    attr(element, 'class', function (value) {\n      return (value || '').replace(new RegExp(\"\\\\b\" + cls + \"\\\\b\", 'g'), '');\n    });\n  }\n\n  function replaceClass(element) {\n    var args = [],\n        len = arguments.length - 1;\n\n    while (len-- > 0) {\n      args[len] = arguments[len + 1];\n    }\n\n    args[0] && removeClass(element, args[0]);\n    args[1] && addClass(element, args[1]);\n  }\n\n  function hasClass(element, cls) {\n    var assign;\n    assign = getClasses(cls), cls = assign[0];\n    var nodes = toNodes(element);\n\n    for (var n = 0; n < nodes.length; n++) {\n      if (cls && nodes[n].classList.contains(cls)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function toggleClass(element, cls, force) {\n    cls = getClasses(cls);\n    var nodes = toNodes(element);\n\n    for (var n = 0; n < nodes.length; n++) {\n      var list = nodes[n].classList;\n\n      for (var i = 0; i < cls.length; i++) {\n        if (isUndefined(force)) {\n          list.toggle(cls[i]);\n        } else if (supports.Force) {\n          list.toggle(cls[i], !!force);\n        } else {\n          list[force ? 'add' : 'remove'](cls[i]);\n        }\n      }\n    }\n  }\n\n  function apply$1(element, args, fn) {\n    var ref;\n    args = args.reduce(function (args, arg) {\n      return args.concat(getClasses(arg));\n    }, []);\n    var nodes = toNodes(element);\n\n    var loop = function loop(n) {\n      if (supports.Multiple) {\n        (ref = nodes[n].classList)[fn].apply(ref, args);\n      } else {\n        args.forEach(function (cls) {\n          return nodes[n].classList[fn](cls);\n        });\n      }\n    };\n\n    for (var n = 0; n < nodes.length; n++) {\n      loop(n);\n    }\n  }\n\n  function getClasses(str) {\n    str = String(str);\n    return (~str.indexOf(' ') ? str.split(' ') : [str]).filter(Boolean);\n  } // IE 11\n\n\n  var supports = {\n    get Multiple() {\n      return this.get('Multiple');\n    },\n\n    get Force() {\n      return this.get('Force');\n    },\n\n    get: function get(key) {\n      var ref = document.createElement('_');\n      var classList = ref.classList;\n      classList.add('a', 'b');\n      classList.toggle('c', false);\n      supports = {\n        Multiple: classList.contains('b'),\n        Force: !classList.contains('c')\n      };\n      return supports[key];\n    }\n  };\n  var cssNumber = {\n    'animation-iteration-count': true,\n    'column-count': true,\n    'fill-opacity': true,\n    'flex-grow': true,\n    'flex-shrink': true,\n    'font-weight': true,\n    'line-height': true,\n    'opacity': true,\n    'order': true,\n    'orphans': true,\n    'stroke-dasharray': true,\n    'stroke-dashoffset': true,\n    'widows': true,\n    'z-index': true,\n    'zoom': true\n  };\n\n  function css(element, property, value, priority) {\n    if (priority === void 0) priority = '';\n    return toNodes(element).map(function (element) {\n      if (isString(property)) {\n        property = propName(property);\n\n        if (isUndefined(value)) {\n          return getStyle(element, property);\n        } else if (!value && !isNumber(value)) {\n          element.style.removeProperty(property);\n        } else {\n          element.style.setProperty(property, isNumeric(value) && !cssNumber[property] ? value + \"px\" : value, priority);\n        }\n      } else if (isArray(property)) {\n        var styles = getStyles(element);\n        return property.reduce(function (props, property) {\n          props[property] = styles[propName(property)];\n          return props;\n        }, {});\n      } else if (isObject(property)) {\n        priority = value;\n        each(property, function (value, property) {\n          return css(element, property, value, priority);\n        });\n      }\n\n      return element;\n    })[0];\n  }\n\n  function getStyles(element, pseudoElt) {\n    element = toNode(element);\n    return element.ownerDocument.defaultView.getComputedStyle(element, pseudoElt);\n  }\n\n  function getStyle(element, property, pseudoElt) {\n    return getStyles(element, pseudoElt)[property];\n  }\n\n  var vars = {};\n\n  function getCssVar(name) {\n    var docEl = document.documentElement;\n\n    if (!isIE) {\n      return getStyles(docEl).getPropertyValue(\"--uk-\" + name);\n    }\n\n    if (!(name in vars)) {\n      /* usage in css: .uk-name:before { content:\"xyz\" } */\n      var element = append(docEl, document.createElement('div'));\n      addClass(element, \"uk-\" + name);\n      vars[name] = getStyle(element, 'content', ':before').replace(/^[\"'](.*)[\"']$/, '$1');\n\n      _remove(element);\n    }\n\n    return vars[name];\n  }\n\n  var cssProps = {}; // https://drafts.csswg.org/cssom/#dom-cssstyledeclaration-setproperty\n\n  function propName(name) {\n    if (!cssProps[name]) {\n      cssProps[name] = vendorPropName(name);\n    }\n\n    return cssProps[name];\n  }\n\n  var cssPrefixes = ['webkit', 'moz', 'ms'];\n\n  function vendorPropName(name) {\n    name = hyphenate(name);\n    var ref = document.documentElement;\n    var style = ref.style;\n\n    if (name in style) {\n      return name;\n    }\n\n    var i = cssPrefixes.length,\n        prefixedName;\n\n    while (i--) {\n      prefixedName = \"-\" + cssPrefixes[i] + \"-\" + name;\n\n      if (prefixedName in style) {\n        return prefixedName;\n      }\n    }\n  }\n\n  function transition(element, props, duration, timing) {\n    if (duration === void 0) duration = 400;\n    if (timing === void 0) timing = 'linear';\n    return Promise.all(toNodes(element).map(function (element) {\n      return new Promise(function (resolve, reject) {\n        for (var name in props) {\n          var value = css(element, name);\n\n          if (value === '') {\n            css(element, name, value);\n          }\n        }\n\n        var timer = setTimeout(function () {\n          return trigger(element, 'transitionend');\n        }, duration);\n        once(element, 'transitionend transitioncanceled', function (ref) {\n          var type = ref.type;\n          clearTimeout(timer);\n          removeClass(element, 'uk-transition');\n          css(element, {\n            transitionProperty: '',\n            transitionDuration: '',\n            transitionTimingFunction: ''\n          });\n          type === 'transitioncanceled' ? reject() : resolve(element);\n        }, {\n          self: true\n        });\n        addClass(element, 'uk-transition');\n        css(element, assign({\n          transitionProperty: Object.keys(props).map(propName).join(','),\n          transitionDuration: duration + \"ms\",\n          transitionTimingFunction: timing\n        }, props));\n      });\n    }));\n  }\n\n  var Transition = {\n    start: transition,\n    stop: function stop(element) {\n      trigger(element, 'transitionend');\n      return Promise.resolve();\n    },\n    cancel: function cancel(element) {\n      trigger(element, 'transitioncanceled');\n    },\n    inProgress: function inProgress(element) {\n      return hasClass(element, 'uk-transition');\n    }\n  };\n  var animationPrefix = 'uk-animation-';\n\n  function animate(element, animation, duration, origin, out) {\n    if (duration === void 0) duration = 200;\n    return Promise.all(toNodes(element).map(function (element) {\n      return new Promise(function (resolve, reject) {\n        trigger(element, 'animationcanceled');\n        var timer = setTimeout(function () {\n          return trigger(element, 'animationend');\n        }, duration);\n        once(element, 'animationend animationcanceled', function (ref) {\n          var type = ref.type;\n          clearTimeout(timer);\n          type === 'animationcanceled' ? reject() : resolve(element);\n          css(element, 'animationDuration', '');\n          removeClasses(element, animationPrefix + \"\\\\S*\");\n        }, {\n          self: true\n        });\n        css(element, 'animationDuration', duration + \"ms\");\n        addClass(element, animation, animationPrefix + (out ? 'leave' : 'enter'));\n\n        if (startsWith(animation, animationPrefix)) {\n          addClass(element, origin && \"uk-transform-origin-\" + origin, out && animationPrefix + \"reverse\");\n        }\n      });\n    }));\n  }\n\n  var _inProgress = new RegExp(animationPrefix + \"(enter|leave)\");\n\n  var Animation = {\n    \"in\": animate,\n    out: function out(element, animation, duration, origin) {\n      return animate(element, animation, duration, origin, true);\n    },\n    inProgress: function inProgress(element) {\n      return _inProgress.test(attr(element, 'class'));\n    },\n    cancel: function cancel(element) {\n      trigger(element, 'animationcanceled');\n    }\n  };\n  var dirs = {\n    width: ['left', 'right'],\n    height: ['top', 'bottom']\n  };\n\n  function dimensions(element) {\n    var rect = isWindow(element) || !toNode(element) ? {\n      height: height(element),\n      width: width(element),\n      top: 0,\n      left: 0\n    } : toNode(element).getBoundingClientRect();\n    return {\n      height: rect.height,\n      width: rect.width,\n      top: rect.top,\n      left: rect.left,\n      bottom: rect.top + rect.height,\n      right: rect.left + rect.width\n    };\n  }\n\n  function offset(element, coordinates) {\n    var currentOffset = dimensions(element);\n    var ref = toWindow(element);\n    var pageYOffset = ref.pageYOffset;\n    var pageXOffset = ref.pageXOffset;\n    var offsetBy = {\n      height: pageYOffset,\n      width: pageXOffset\n    };\n\n    for (var dir in dirs) {\n      for (var i in dirs[dir]) {\n        currentOffset[dirs[dir][i]] += offsetBy[dir];\n      }\n    }\n\n    if (!coordinates) {\n      return currentOffset;\n    }\n\n    var pos = css(element, 'position');\n    each(css(element, ['left', 'top']), function (value, prop) {\n      return css(element, prop, coordinates[prop] - currentOffset[prop] + toFloat(pos === 'absolute' && value === 'auto' ? position(element)[prop] : value));\n    });\n  }\n\n  function position(element, parent) {\n    element = toNode(element);\n    parent = parent || element.offsetParent || element.documentElement;\n    var elementOffset = offset(element);\n    var parentOffset = offset(parent);\n    return {\n      top: elementOffset.top - parentOffset.top - toFloat(css(parent, 'borderTopWidth')),\n      left: elementOffset.left - parentOffset.left - toFloat(css(parent, 'borderLeftWidth'))\n    };\n  }\n\n  function offsetPosition(element) {\n    var offset = [0, 0];\n    element = toNode(element);\n\n    do {\n      offset[0] += element.offsetTop;\n      offset[1] += element.offsetLeft;\n\n      if (css(element, 'position') === 'fixed') {\n        var win = toWindow(element);\n        offset[0] += win.pageYOffset;\n        offset[1] += win.pageXOffset;\n        return offset;\n      }\n    } while (element = element.offsetParent);\n\n    return offset;\n  }\n\n  var height = dimension('height');\n  var width = dimension('width');\n\n  function dimension(prop) {\n    var propName = ucfirst(prop);\n    return function (element, value) {\n      if (isUndefined(value)) {\n        if (isWindow(element)) {\n          return element[\"inner\" + propName];\n        }\n\n        if (isDocument(element)) {\n          var doc = element.documentElement;\n          return Math.max(doc[\"offset\" + propName], doc[\"scroll\" + propName]);\n        }\n\n        element = toNode(element);\n        value = css(element, prop);\n        value = value === 'auto' ? element[\"offset\" + propName] : toFloat(value) || 0;\n        return value - boxModelAdjust(element, prop);\n      } else {\n        return css(element, prop, !value && value !== 0 ? '' : +value + boxModelAdjust(element, prop) + 'px');\n      }\n    };\n  }\n\n  function boxModelAdjust(element, prop, sizing) {\n    if (sizing === void 0) sizing = 'border-box';\n    return css(element, 'boxSizing') === sizing ? dirs[prop].map(ucfirst).reduce(function (value, prop) {\n      return value + toFloat(css(element, \"padding\" + prop)) + toFloat(css(element, \"border\" + prop + \"Width\"));\n    }, 0) : 0;\n  }\n\n  function flipPosition(pos) {\n    for (var dir in dirs) {\n      for (var i in dirs[dir]) {\n        if (dirs[dir][i] === pos) {\n          return dirs[dir][1 - i];\n        }\n      }\n    }\n\n    return pos;\n  }\n\n  function toPx(value, property, element) {\n    if (property === void 0) property = 'width';\n    if (element === void 0) element = window;\n    return isNumeric(value) ? +value : endsWith(value, 'vh') ? percent(height(toWindow(element)), value) : endsWith(value, 'vw') ? percent(width(toWindow(element)), value) : endsWith(value, '%') ? percent(dimensions(element)[property], value) : toFloat(value);\n  }\n\n  function percent(base, value) {\n    return base * toFloat(value) / 100;\n  }\n  /*\n      Based on:\n      Copyright (c) 2016 Wilson Page wilsonpage@me.com\n      https://github.com/wilsonpage/fastdom\n  */\n\n\n  var fastdom = {\n    reads: [],\n    writes: [],\n    read: function read(task) {\n      this.reads.push(task);\n      scheduleFlush();\n      return task;\n    },\n    write: function write(task) {\n      this.writes.push(task);\n      scheduleFlush();\n      return task;\n    },\n    clear: function clear(task) {\n      remove$1(this.reads, task);\n      remove$1(this.writes, task);\n    },\n    flush: flush\n  };\n\n  function flush(recursion) {\n    if (recursion === void 0) recursion = 1;\n    runTasks(fastdom.reads);\n    runTasks(fastdom.writes.splice(0, fastdom.writes.length));\n    fastdom.scheduled = false;\n\n    if (fastdom.reads.length || fastdom.writes.length) {\n      scheduleFlush(recursion + 1);\n    }\n  }\n\n  var RECURSION_LIMIT = 4;\n\n  function scheduleFlush(recursion) {\n    if (fastdom.scheduled) {\n      return;\n    }\n\n    fastdom.scheduled = true;\n\n    if (recursion && recursion < RECURSION_LIMIT) {\n      Promise.resolve().then(function () {\n        return flush(recursion);\n      });\n    } else {\n      requestAnimationFrame(function () {\n        return flush();\n      });\n    }\n  }\n\n  function runTasks(tasks) {\n    var task;\n\n    while (task = tasks.shift()) {\n      task();\n    }\n  }\n\n  function remove$1(array, item) {\n    var index = array.indexOf(item);\n    return ~index && array.splice(index, 1);\n  }\n\n  function MouseTracker() {}\n\n  MouseTracker.prototype = {\n    positions: [],\n    init: function init() {\n      var this$1 = this;\n      this.positions = [];\n      var position;\n      this.unbind = on(document, 'mousemove', function (e) {\n        return position = getEventPos(e);\n      });\n      this.interval = setInterval(function () {\n        if (!position) {\n          return;\n        }\n\n        this$1.positions.push(position);\n\n        if (this$1.positions.length > 5) {\n          this$1.positions.shift();\n        }\n      }, 50);\n    },\n    cancel: function cancel() {\n      this.unbind && this.unbind();\n      this.interval && clearInterval(this.interval);\n    },\n    movesTo: function movesTo(target) {\n      if (this.positions.length < 2) {\n        return false;\n      }\n\n      var p = target.getBoundingClientRect();\n      var left = p.left;\n      var right = p.right;\n      var top = p.top;\n      var bottom = p.bottom;\n      var ref = this.positions;\n      var prevPosition = ref[0];\n      var position = last(this.positions);\n      var path = [prevPosition, position];\n\n      if (pointInRect(position, p)) {\n        return false;\n      }\n\n      var diagonals = [[{\n        x: left,\n        y: top\n      }, {\n        x: right,\n        y: bottom\n      }], [{\n        x: left,\n        y: bottom\n      }, {\n        x: right,\n        y: top\n      }]];\n      return diagonals.some(function (diagonal) {\n        var intersection = intersect(path, diagonal);\n        return intersection && pointInRect(intersection, p);\n      });\n    }\n  }; // Inspired by http://paulbourke.net/geometry/pointlineplane/\n\n  function intersect(ref, ref$1) {\n    var ref_0 = ref[0];\n    var x1 = ref_0.x;\n    var y1 = ref_0.y;\n    var ref_1 = ref[1];\n    var x2 = ref_1.x;\n    var y2 = ref_1.y;\n    var ref$1_0 = ref$1[0];\n    var x3 = ref$1_0.x;\n    var y3 = ref$1_0.y;\n    var ref$1_1 = ref$1[1];\n    var x4 = ref$1_1.x;\n    var y4 = ref$1_1.y;\n    var denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1); // Lines are parallel\n\n    if (denominator === 0) {\n      return false;\n    }\n\n    var ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator;\n\n    if (ua < 0) {\n      return false;\n    } // Return an object with the x and y coordinates of the intersection\n\n\n    return {\n      x: x1 + ua * (x2 - x1),\n      y: y1 + ua * (y2 - y1)\n    };\n  }\n\n  var strats = {};\n  strats.events = strats.created = strats.beforeConnect = strats.connected = strats.beforeDisconnect = strats.disconnected = strats.destroy = concatStrat; // args strategy\n\n  strats.args = function (parentVal, childVal) {\n    return childVal !== false && concatStrat(childVal || parentVal);\n  }; // update strategy\n\n\n  strats.update = function (parentVal, childVal) {\n    return sortBy(concatStrat(parentVal, isFunction(childVal) ? {\n      read: childVal\n    } : childVal), 'order');\n  }; // property strategy\n\n\n  strats.props = function (parentVal, childVal) {\n    if (isArray(childVal)) {\n      childVal = childVal.reduce(function (value, key) {\n        value[key] = String;\n        return value;\n      }, {});\n    }\n\n    return strats.methods(parentVal, childVal);\n  }; // extend strategy\n\n\n  strats.computed = strats.methods = function (parentVal, childVal) {\n    return childVal ? parentVal ? assign({}, parentVal, childVal) : childVal : parentVal;\n  }; // data strategy\n\n\n  strats.data = function (parentVal, childVal, vm) {\n    if (!vm) {\n      if (!childVal) {\n        return parentVal;\n      }\n\n      if (!parentVal) {\n        return childVal;\n      }\n\n      return function (vm) {\n        return mergeFnData(parentVal, childVal, vm);\n      };\n    }\n\n    return mergeFnData(parentVal, childVal, vm);\n  };\n\n  function mergeFnData(parentVal, childVal, vm) {\n    return strats.computed(isFunction(parentVal) ? parentVal.call(vm, vm) : parentVal, isFunction(childVal) ? childVal.call(vm, vm) : childVal);\n  } // concat strategy\n\n\n  function concatStrat(parentVal, childVal) {\n    parentVal = parentVal && !isArray(parentVal) ? [parentVal] : parentVal;\n    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n  } // default strategy\n\n\n  function defaultStrat(parentVal, childVal) {\n    return isUndefined(childVal) ? parentVal : childVal;\n  }\n\n  function mergeOptions(parent, child, vm) {\n    var options = {};\n\n    if (isFunction(child)) {\n      child = child.options;\n    }\n\n    if (child[\"extends\"]) {\n      parent = mergeOptions(parent, child[\"extends\"], vm);\n    }\n\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n\n    for (var key in parent) {\n      mergeKey(key);\n    }\n\n    for (var key$1 in child) {\n      if (!hasOwn(parent, key$1)) {\n        mergeKey(key$1);\n      }\n    }\n\n    function mergeKey(key) {\n      options[key] = (strats[key] || defaultStrat)(parent[key], child[key], vm);\n    }\n\n    return options;\n  }\n\n  function parseOptions(options, args) {\n    var obj;\n    if (args === void 0) args = [];\n\n    try {\n      return !options ? {} : startsWith(options, '{') ? JSON.parse(options) : args.length && !includes(options, ':') ? (obj = {}, obj[args[0]] = options, obj) : options.split(';').reduce(function (options, option) {\n        var ref = option.split(/:(.*)/);\n        var key = ref[0];\n        var value = ref[1];\n\n        if (key && !isUndefined(value)) {\n          options[key.trim()] = value.trim();\n        }\n\n        return options;\n      }, {});\n    } catch (e) {\n      return {};\n    }\n  }\n\n  function play(el) {\n    if (isIFrame(el)) {\n      call(el, {\n        func: 'playVideo',\n        method: 'play'\n      });\n    }\n\n    if (isHTML5(el)) {\n      try {\n        el.play()[\"catch\"](noop);\n      } catch (e) {}\n    }\n  }\n\n  function pause(el) {\n    if (isIFrame(el)) {\n      call(el, {\n        func: 'pauseVideo',\n        method: 'pause'\n      });\n    }\n\n    if (isHTML5(el)) {\n      el.pause();\n    }\n  }\n\n  function mute(el) {\n    if (isIFrame(el)) {\n      call(el, {\n        func: 'mute',\n        method: 'setVolume',\n        value: 0\n      });\n    }\n\n    if (isHTML5(el)) {\n      el.muted = true;\n    }\n  }\n\n  function isHTML5(el) {\n    return el && el.tagName === 'VIDEO';\n  }\n\n  function isIFrame(el) {\n    return el && el.tagName === 'IFRAME' && (isYoutube(el) || isVimeo(el));\n  }\n\n  function isYoutube(el) {\n    return !!el.src.match(/\\/\\/.*?youtube(-nocookie)?\\.[a-z]+\\/(watch\\?v=[^&\\s]+|embed)|youtu\\.be\\/.*/);\n  }\n\n  function isVimeo(el) {\n    return !!el.src.match(/vimeo\\.com\\/video\\/.*/);\n  }\n\n  function call(el, cmd) {\n    enableApi(el).then(function () {\n      return post(el, cmd);\n    });\n  }\n\n  function post(el, cmd) {\n    try {\n      el.contentWindow.postMessage(JSON.stringify(assign({\n        event: 'command'\n      }, cmd)), '*');\n    } catch (e) {}\n  }\n\n  var stateKey = '_ukPlayer';\n  var counter = 0;\n\n  function enableApi(el) {\n    if (el[stateKey]) {\n      return el[stateKey];\n    }\n\n    var youtube = isYoutube(el);\n    var vimeo = isVimeo(el);\n    var id = ++counter;\n    var poller;\n    return el[stateKey] = new Promise(function (resolve) {\n      youtube && once(el, 'load', function () {\n        var listener = function listener() {\n          return post(el, {\n            event: 'listening',\n            id: id\n          });\n        };\n\n        poller = setInterval(listener, 100);\n        listener();\n      });\n      once(window, 'message', resolve, false, function (ref) {\n        var data = ref.data;\n\n        try {\n          data = JSON.parse(data);\n          return data && (youtube && data.id === id && data.event === 'onReady' || vimeo && Number(data.player_id) === id);\n        } catch (e) {}\n      });\n      el.src = \"\" + el.src + (includes(el.src, '?') ? '&' : '?') + (youtube ? 'enablejsapi=1' : \"api=1&player_id=\" + id);\n    }).then(function () {\n      return clearInterval(poller);\n    });\n  }\n\n  function isInView(element, offsetTop, offsetLeft) {\n    if (offsetTop === void 0) offsetTop = 0;\n    if (offsetLeft === void 0) offsetLeft = 0;\n\n    if (!isVisible(element)) {\n      return false;\n    }\n\n    return intersectRect.apply(void 0, scrollParents(element).map(function (parent) {\n      var ref = offset(getViewport(parent));\n      var top = ref.top;\n      var left = ref.left;\n      var bottom = ref.bottom;\n      var right = ref.right;\n      return {\n        top: top - offsetTop,\n        left: left - offsetLeft,\n        bottom: bottom + offsetTop,\n        right: right + offsetLeft\n      };\n    }).concat(offset(element)));\n  }\n\n  function scrollTop(element, top) {\n    if (isWindow(element) || isDocument(element)) {\n      element = getScrollingElement(element);\n    } else {\n      element = toNode(element);\n    }\n\n    element.scrollTop = top;\n  }\n\n  function scrollIntoView(element, ref) {\n    if (ref === void 0) ref = {};\n    var offsetBy = ref.offset;\n    if (offsetBy === void 0) offsetBy = 0;\n\n    if (!isVisible(element)) {\n      return;\n    }\n\n    var parents = scrollParents(element);\n    var diff = 0;\n    return parents.reduce(function (fn, scrollElement, i) {\n      var scrollTop = scrollElement.scrollTop;\n      var scrollHeight = scrollElement.scrollHeight;\n      var viewport = getViewport(scrollElement);\n      var maxScroll = scrollHeight - height(viewport);\n      var top = Math.ceil(position(parents[i - 1] || element, viewport).top - offsetBy) + diff + scrollTop;\n\n      if (top > maxScroll) {\n        diff = top - maxScroll;\n        top = maxScroll;\n      } else {\n        diff = 0;\n      }\n\n      return function () {\n        return scrollTo(scrollElement, top - scrollTop).then(fn);\n      };\n    }, function () {\n      return Promise.resolve();\n    })();\n\n    function scrollTo(element, top) {\n      return new Promise(function (resolve) {\n        var scroll = element.scrollTop;\n        var duration = getDuration(Math.abs(top));\n        var start = Date.now();\n\n        (function step() {\n          var percent = ease(clamp((Date.now() - start) / duration));\n          scrollTop(element, scroll + top * percent); // scroll more if we have not reached our destination\n\n          if (percent !== 1) {\n            requestAnimationFrame(step);\n          } else {\n            resolve();\n          }\n        })();\n      });\n    }\n\n    function getDuration(dist) {\n      return 40 * Math.pow(dist, .375);\n    }\n\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n  }\n\n  function scrolledOver(element, heightOffset) {\n    if (heightOffset === void 0) heightOffset = 0;\n\n    if (!isVisible(element)) {\n      return 0;\n    }\n\n    var ref = scrollParents(element, /auto|scroll/);\n    var scrollElement = ref[0];\n    var scrollHeight = scrollElement.scrollHeight;\n    var scrollTop = scrollElement.scrollTop;\n    var viewport = getViewport(scrollElement);\n    var viewportHeight = height(viewport);\n    var viewportTop = offsetPosition(element)[0] - scrollTop - offsetPosition(scrollElement)[0];\n    var viewportDist = Math.min(viewportHeight, viewportTop + scrollTop);\n    var top = viewportTop - viewportDist;\n    var dist = Math.min(height(element) + heightOffset + viewportDist, scrollHeight - (viewportTop + scrollTop), scrollHeight - viewportHeight);\n    return clamp(-1 * top / dist);\n  }\n\n  function scrollParents(element, overflowRe, scrollable) {\n    if (overflowRe === void 0) overflowRe = /auto|scroll|hidden/;\n    if (scrollable === void 0) scrollable = false;\n    var scrollEl = getScrollingElement(element);\n    var ancestors = parents(element).reverse();\n    ancestors = ancestors.slice(ancestors.indexOf(scrollEl) + 1);\n    var fixedIndex = findIndex(ancestors, function (el) {\n      return css(el, 'position') === 'fixed';\n    });\n\n    if (~fixedIndex) {\n      ancestors = ancestors.slice(fixedIndex);\n    }\n\n    return [scrollEl].concat(ancestors.filter(function (parent) {\n      return overflowRe.test(css(parent, 'overflow')) && (!scrollable || parent.scrollHeight > height(parent));\n    })).reverse();\n  }\n\n  function getViewport(scrollElement) {\n    return scrollElement === getScrollingElement(scrollElement) ? window : scrollElement;\n  }\n\n  function getScrollingElement(element) {\n    var ref = toWindow(element);\n    var document = ref.document;\n    return document.scrollingElement || document.documentElement;\n  }\n\n  var dirs$1 = {\n    width: ['x', 'left', 'right'],\n    height: ['y', 'top', 'bottom']\n  };\n\n  function _positionAt(element, target, elAttach, targetAttach, elOffset, targetOffset, flip, boundary) {\n    elAttach = getPos(elAttach);\n    targetAttach = getPos(targetAttach);\n    var flipped = {\n      element: elAttach,\n      target: targetAttach\n    };\n\n    if (!element || !target) {\n      return flipped;\n    }\n\n    var dim = offset(element);\n    var targetDim = offset(target);\n    var position = targetDim;\n    moveTo(position, elAttach, dim, -1);\n    moveTo(position, targetAttach, targetDim, 1);\n    elOffset = getOffsets(elOffset, dim.width, dim.height);\n    targetOffset = getOffsets(targetOffset, targetDim.width, targetDim.height);\n    elOffset['x'] += targetOffset['x'];\n    elOffset['y'] += targetOffset['y'];\n    position.left += elOffset['x'];\n    position.top += elOffset['y'];\n\n    if (flip) {\n      var boundaries = scrollParents(target).map(getViewport);\n\n      if (boundary && includes(boundaries, boundary)) {\n        boundaries.unshift(boundary);\n      }\n\n      boundaries = boundaries.map(function (el) {\n        return offset(el);\n      });\n      each(dirs$1, function (ref, prop) {\n        var dir = ref[0];\n        var align = ref[1];\n        var alignFlip = ref[2];\n\n        if (!(flip === true || includes(flip, dir))) {\n          return;\n        }\n\n        boundaries.some(function (boundary) {\n          var elemOffset = elAttach[dir] === align ? -dim[prop] : elAttach[dir] === alignFlip ? dim[prop] : 0;\n          var targetOffset = targetAttach[dir] === align ? targetDim[prop] : targetAttach[dir] === alignFlip ? -targetDim[prop] : 0;\n\n          if (position[align] < boundary[align] || position[align] + dim[prop] > boundary[alignFlip]) {\n            var centerOffset = dim[prop] / 2;\n            var centerTargetOffset = targetAttach[dir] === 'center' ? -targetDim[prop] / 2 : 0;\n            return elAttach[dir] === 'center' && (apply(centerOffset, centerTargetOffset) || apply(-centerOffset, -centerTargetOffset)) || apply(elemOffset, targetOffset);\n          }\n\n          function apply(elemOffset, targetOffset) {\n            var newVal = toFloat((position[align] + elemOffset + targetOffset - elOffset[dir] * 2).toFixed(4));\n\n            if (newVal >= boundary[align] && newVal + dim[prop] <= boundary[alignFlip]) {\n              position[align] = newVal;\n              ['element', 'target'].forEach(function (el) {\n                flipped[el][dir] = !elemOffset ? flipped[el][dir] : flipped[el][dir] === dirs$1[prop][1] ? dirs$1[prop][2] : dirs$1[prop][1];\n              });\n              return true;\n            }\n          }\n        });\n      });\n    }\n\n    offset(element, position);\n    return flipped;\n  }\n\n  function moveTo(position, attach, dim, factor) {\n    each(dirs$1, function (ref, prop) {\n      var dir = ref[0];\n      var align = ref[1];\n      var alignFlip = ref[2];\n\n      if (attach[dir] === alignFlip) {\n        position[align] += dim[prop] * factor;\n      } else if (attach[dir] === 'center') {\n        position[align] += dim[prop] * factor / 2;\n      }\n    });\n  }\n\n  function getPos(pos) {\n    var x = /left|center|right/;\n    var y = /top|center|bottom/;\n    pos = (pos || '').split(' ');\n\n    if (pos.length === 1) {\n      pos = x.test(pos[0]) ? pos.concat('center') : y.test(pos[0]) ? ['center'].concat(pos) : ['center', 'center'];\n    }\n\n    return {\n      x: x.test(pos[0]) ? pos[0] : 'center',\n      y: y.test(pos[1]) ? pos[1] : 'center'\n    };\n  }\n\n  function getOffsets(offsets, width, height) {\n    var ref = (offsets || '').split(' ');\n    var x = ref[0];\n    var y = ref[1];\n    return {\n      x: x ? toFloat(x) * (endsWith(x, '%') ? width / 100 : 1) : 0,\n      y: y ? toFloat(y) * (endsWith(y, '%') ? height / 100 : 1) : 0\n    };\n  }\n\n  var util = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ajax: ajax,\n    getImage: getImage,\n    transition: transition,\n    Transition: Transition,\n    animate: animate,\n    Animation: Animation,\n    attr: attr,\n    hasAttr: hasAttr,\n    removeAttr: removeAttr,\n    data: data,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeClasses: removeClasses,\n    replaceClass: replaceClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    dimensions: dimensions,\n    offset: offset,\n    position: position,\n    offsetPosition: offsetPosition,\n    height: height,\n    width: width,\n    boxModelAdjust: boxModelAdjust,\n    flipPosition: flipPosition,\n    toPx: toPx,\n    ready: ready,\n    empty: empty,\n    html: html,\n    prepend: prepend,\n    append: append,\n    before: before,\n    after: after,\n    remove: _remove,\n    wrapAll: wrapAll,\n    wrapInner: wrapInner,\n    unwrap: unwrap,\n    fragment: fragment,\n    apply: apply,\n    $: $,\n    $$: $$,\n    inBrowser: inBrowser,\n    isIE: isIE,\n    isRtl: isRtl,\n    hasTouch: hasTouch,\n    pointerDown: pointerDown,\n    pointerMove: pointerMove,\n    pointerUp: pointerUp,\n    pointerEnter: pointerEnter,\n    pointerLeave: pointerLeave,\n    pointerCancel: pointerCancel,\n    on: on,\n    off: off,\n    once: once,\n    trigger: trigger,\n    createEvent: createEvent,\n    toEventTargets: toEventTargets,\n    isTouch: isTouch,\n    getEventPos: getEventPos,\n    fastdom: fastdom,\n    isVoidElement: isVoidElement,\n    isVisible: isVisible,\n    selInput: selInput,\n    isInput: isInput,\n    parent: parent,\n    filter: filter,\n    matches: matches,\n    closest: closest,\n    within: within,\n    parents: parents,\n    children: _children,\n    index: index,\n    hasOwn: hasOwn,\n    hyphenate: hyphenate,\n    camelize: camelize,\n    ucfirst: ucfirst,\n    startsWith: startsWith,\n    endsWith: endsWith,\n    includes: includes,\n    findIndex: findIndex,\n    isArray: isArray,\n    isFunction: isFunction,\n    isObject: isObject,\n    isPlainObject: isPlainObject,\n    isWindow: isWindow,\n    isDocument: isDocument,\n    isNode: isNode,\n    isElement: isElement,\n    isBoolean: isBoolean,\n    isString: isString,\n    isNumber: isNumber,\n    isNumeric: isNumeric,\n    isEmpty: isEmpty,\n    isUndefined: isUndefined,\n    toBoolean: toBoolean,\n    toNumber: toNumber,\n    toFloat: toFloat,\n    toArray: toArray,\n    toNode: toNode,\n    toNodes: toNodes,\n    toWindow: toWindow,\n    toMs: toMs,\n    isEqual: isEqual,\n    swap: swap,\n    assign: assign,\n    last: last,\n    each: each,\n    sortBy: sortBy,\n    uniqueBy: uniqueBy,\n    clamp: clamp,\n    noop: noop,\n    intersectRect: intersectRect,\n    pointInRect: pointInRect,\n    Dimensions: Dimensions,\n    getIndex: _getIndex,\n    MouseTracker: MouseTracker,\n    mergeOptions: mergeOptions,\n    parseOptions: parseOptions,\n    play: play,\n    pause: pause,\n    mute: mute,\n    positionAt: _positionAt,\n    Promise: Promise,\n    Deferred: Deferred,\n    query: query,\n    queryAll: queryAll,\n    find: find,\n    findAll: findAll,\n    escape: escape,\n    css: css,\n    getStyles: getStyles,\n    getStyle: getStyle,\n    getCssVar: getCssVar,\n    propName: propName,\n    isInView: isInView,\n    scrollTop: scrollTop,\n    scrollIntoView: scrollIntoView,\n    scrolledOver: scrolledOver,\n    scrollParents: scrollParents,\n    getViewport: getViewport\n  });\n\n  function globalAPI(UIkit) {\n    var DATA = UIkit.data;\n\n    UIkit.use = function (plugin) {\n      if (plugin.installed) {\n        return;\n      }\n\n      plugin.call(null, this);\n      plugin.installed = true;\n      return this;\n    };\n\n    UIkit.mixin = function (mixin, component) {\n      component = (isString(component) ? UIkit.component(component) : component) || this;\n      component.options = mergeOptions(component.options, mixin);\n    };\n\n    UIkit.extend = function (options) {\n      options = options || {};\n      var Super = this;\n\n      var Sub = function UIkitComponent(options) {\n        this._init(options);\n      };\n\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.options = mergeOptions(Super.options, options);\n      Sub[\"super\"] = Super;\n      Sub.extend = Super.extend;\n      return Sub;\n    };\n\n    UIkit.update = function (element, e) {\n      element = element ? toNode(element) : document.body;\n      parents(element).reverse().forEach(function (element) {\n        return update(element[DATA], e);\n      });\n      apply(element, function (element) {\n        return update(element[DATA], e);\n      });\n    };\n\n    var container;\n    Object.defineProperty(UIkit, 'container', {\n      get: function get() {\n        return container || document.body;\n      },\n      set: function set(element) {\n        container = $(element);\n      }\n    });\n\n    function update(data, e) {\n      if (!data) {\n        return;\n      }\n\n      for (var name in data) {\n        if (data[name]._connected) {\n          data[name]._callUpdate(e);\n        }\n      }\n    }\n  }\n\n  function hooksAPI(UIkit) {\n    UIkit.prototype._callHook = function (hook) {\n      var this$1 = this;\n      var handlers = this.$options[hook];\n\n      if (handlers) {\n        handlers.forEach(function (handler) {\n          return handler.call(this$1);\n        });\n      }\n    };\n\n    UIkit.prototype._callConnected = function () {\n      if (this._connected) {\n        return;\n      }\n\n      this._data = {};\n      this._computeds = {};\n      this._frame = 0;\n\n      this._initProps();\n\n      this._callHook('beforeConnect');\n\n      this._connected = true;\n\n      this._initEvents();\n\n      this._initObservers();\n\n      this._callHook('connected');\n\n      this._callUpdate();\n    };\n\n    UIkit.prototype._callDisconnected = function () {\n      if (!this._connected) {\n        return;\n      }\n\n      this._callHook('beforeDisconnect');\n\n      this._disconnectObservers();\n\n      this._unbindEvents();\n\n      this._callHook('disconnected');\n\n      this._connected = false;\n    };\n\n    UIkit.prototype._callUpdate = function (e) {\n      var this$1 = this;\n      if (e === void 0) e = 'update';\n      var type = e.type || e;\n\n      if (~['update', 'resize'].indexOf(type)) {\n        this._callWatches();\n      }\n\n      var updates = this.$options.update;\n\n      if (!updates) {\n        return;\n      }\n\n      var frame = this._frame = ++this._frame % 64;\n\n      var loop = function loop(i) {\n        var ref = updates[i];\n        var read = ref.read;\n        var write = ref.write;\n        var events = ref.events;\n\n        if (type !== 'update' && (!events || !~events.indexOf(type))) {\n          return;\n        }\n\n        var cancel = void 0;\n\n        if (read) {\n          fastdom.read(function () {\n            if (!this$1._connected || frame !== this$1._frame) {\n              return;\n            }\n\n            var result = read.call(this$1, this$1._data, type);\n\n            if (result === false) {\n              cancel = true;\n            } else if (isPlainObject(result)) {\n              assign(this$1._data, result);\n            }\n          });\n        }\n\n        if (write) {\n          fastdom.write(function () {\n            if (cancel || !this$1._connected || frame !== this$1._frame) {\n              return;\n            }\n\n            write.call(this$1, this$1._data, type);\n          });\n        }\n      };\n\n      for (var i = 0; i < updates.length; i++) {\n        loop(i);\n      }\n    };\n\n    UIkit.prototype._callWatches = function () {\n      var this$1 = this;\n      var ref = this;\n      var _watch = ref._watch;\n\n      if (_watch) {\n        return;\n      }\n\n      var initital = !hasOwn(this, '_watch');\n      this._watch = fastdom.read(function () {\n        if (!this$1._connected) {\n          return;\n        }\n\n        var ref = this$1;\n        var computed = ref.$options.computed;\n        var _computeds = ref._computeds;\n\n        for (var key in computed) {\n          var hasPrev = hasOwn(_computeds, key);\n          var prev = _computeds[key];\n          delete _computeds[key];\n          var ref$1 = computed[key];\n          var watch = ref$1.watch;\n          var immediate = ref$1.immediate;\n\n          if (watch && (initital && immediate || hasPrev && !isEqual(prev, this$1[key]))) {\n            watch.call(this$1, this$1[key], prev);\n          }\n        }\n\n        this$1._watch = null;\n      });\n    };\n  }\n\n  function stateAPI(UIkit) {\n    var uid = 0;\n\n    UIkit.prototype._init = function (options) {\n      options = options || {};\n      options.data = normalizeData(options, this.constructor.options);\n      this.$options = mergeOptions(this.constructor.options, options, this);\n      this.$el = null;\n      this.$props = {};\n      this._uid = uid++;\n\n      this._initData();\n\n      this._initMethods();\n\n      this._initComputeds();\n\n      this._callHook('created');\n\n      if (options.el) {\n        this.$mount(options.el);\n      }\n    };\n\n    UIkit.prototype._initData = function () {\n      var ref = this.$options;\n      var data = ref.data;\n      if (data === void 0) data = {};\n\n      for (var key in data) {\n        this.$props[key] = this[key] = data[key];\n      }\n    };\n\n    UIkit.prototype._initMethods = function () {\n      var ref = this.$options;\n      var methods = ref.methods;\n\n      if (methods) {\n        for (var key in methods) {\n          this[key] = methods[key].bind(this);\n        }\n      }\n    };\n\n    UIkit.prototype._initComputeds = function () {\n      var ref = this.$options;\n      var computed = ref.computed;\n      this._computeds = {};\n\n      if (computed) {\n        for (var key in computed) {\n          registerComputed(this, key, computed[key]);\n        }\n      }\n    };\n\n    UIkit.prototype._initProps = function (props) {\n      var key;\n      props = props || getProps(this.$options, this.$name);\n\n      for (key in props) {\n        if (!isUndefined(props[key])) {\n          this.$props[key] = props[key];\n        }\n      }\n\n      var exclude = [this.$options.computed, this.$options.methods];\n\n      for (key in this.$props) {\n        if (key in props && notIn(exclude, key)) {\n          this[key] = this.$props[key];\n        }\n      }\n    };\n\n    UIkit.prototype._initEvents = function () {\n      var this$1 = this;\n      this._events = [];\n      var ref = this.$options;\n      var events = ref.events;\n\n      if (events) {\n        events.forEach(function (event) {\n          if (!hasOwn(event, 'handler')) {\n            for (var key in event) {\n              registerEvent(this$1, event[key], key);\n            }\n          } else {\n            registerEvent(this$1, event);\n          }\n        });\n      }\n    };\n\n    UIkit.prototype._unbindEvents = function () {\n      this._events.forEach(function (unbind) {\n        return unbind();\n      });\n\n      delete this._events;\n    };\n\n    UIkit.prototype._initObservers = function () {\n      this._observers = [initChildListObserver(this), initPropsObserver(this)];\n    };\n\n    UIkit.prototype._disconnectObservers = function () {\n      this._observers.forEach(function (observer) {\n        return observer && observer.disconnect();\n      });\n    };\n\n    function getProps(opts, name) {\n      var data$1 = {};\n      var args = opts.args;\n      if (args === void 0) args = [];\n      var props = opts.props;\n      if (props === void 0) props = {};\n      var el = opts.el;\n\n      if (!props) {\n        return data$1;\n      }\n\n      for (var key in props) {\n        var prop = hyphenate(key);\n        var value = data(el, prop);\n\n        if (isUndefined(value)) {\n          continue;\n        }\n\n        value = props[key] === Boolean && value === '' ? true : coerce(props[key], value);\n\n        if (prop === 'target' && (!value || startsWith(value, '_'))) {\n          continue;\n        }\n\n        data$1[key] = value;\n      }\n\n      var options = parseOptions(data(el, name), args);\n\n      for (var key$1 in options) {\n        var prop$1 = camelize(key$1);\n\n        if (props[prop$1] !== undefined) {\n          data$1[prop$1] = coerce(props[prop$1], options[key$1]);\n        }\n      }\n\n      return data$1;\n    }\n\n    function registerComputed(component, key, cb) {\n      Object.defineProperty(component, key, {\n        enumerable: true,\n        get: function get() {\n          var _computeds = component._computeds;\n          var $props = component.$props;\n          var $el = component.$el;\n\n          if (!hasOwn(_computeds, key)) {\n            _computeds[key] = (cb.get || cb).call(component, $props, $el);\n          }\n\n          return _computeds[key];\n        },\n        set: function set(value) {\n          var _computeds = component._computeds;\n          _computeds[key] = cb.set ? cb.set.call(component, value) : value;\n\n          if (isUndefined(_computeds[key])) {\n            delete _computeds[key];\n          }\n        }\n      });\n    }\n\n    function registerEvent(component, event, key) {\n      if (!isPlainObject(event)) {\n        event = {\n          name: key,\n          handler: event\n        };\n      }\n\n      var name = event.name;\n      var el = event.el;\n      var handler = event.handler;\n      var capture = event.capture;\n      var passive = event.passive;\n      var delegate = event.delegate;\n      var filter = event.filter;\n      var self = event.self;\n      el = isFunction(el) ? el.call(component) : el || component.$el;\n\n      if (isArray(el)) {\n        el.forEach(function (el) {\n          return registerEvent(component, assign({}, event, {\n            el: el\n          }), key);\n        });\n        return;\n      }\n\n      if (!el || filter && !filter.call(component)) {\n        return;\n      }\n\n      component._events.push(on(el, name, !delegate ? null : isString(delegate) ? delegate : delegate.call(component), isString(handler) ? component[handler] : handler.bind(component), {\n        passive: passive,\n        capture: capture,\n        self: self\n      }));\n    }\n\n    function notIn(options, key) {\n      return options.every(function (arr) {\n        return !arr || !hasOwn(arr, key);\n      });\n    }\n\n    function coerce(type, value) {\n      if (type === Boolean) {\n        return toBoolean(value);\n      } else if (type === Number) {\n        return toNumber(value);\n      } else if (type === 'list') {\n        return toList(value);\n      }\n\n      return type ? type(value) : value;\n    }\n\n    function toList(value) {\n      return isArray(value) ? value : isString(value) ? value.split(/,(?![^(]*\\))/).map(function (value) {\n        return isNumeric(value) ? toNumber(value) : toBoolean(value.trim());\n      }) : [value];\n    }\n\n    function normalizeData(ref, ref$1) {\n      var data = ref.data;\n      var el = ref.el;\n      var args = ref$1.args;\n      var props = ref$1.props;\n      if (props === void 0) props = {};\n      data = isArray(data) ? !isEmpty(args) ? data.slice(0, args.length).reduce(function (data, value, index) {\n        if (isPlainObject(value)) {\n          assign(data, value);\n        } else {\n          data[args[index]] = value;\n        }\n\n        return data;\n      }, {}) : undefined : data;\n\n      if (data) {\n        for (var key in data) {\n          if (isUndefined(data[key])) {\n            delete data[key];\n          } else {\n            data[key] = props[key] ? coerce(props[key], data[key]) : data[key];\n          }\n        }\n      }\n\n      return data;\n    }\n\n    function initChildListObserver(component) {\n      var ref = component.$options;\n      var el = ref.el;\n      var observer = new MutationObserver(function () {\n        return component.$emit();\n      });\n      observer.observe(el, {\n        childList: true,\n        subtree: true\n      });\n      return observer;\n    }\n\n    function initPropsObserver(component) {\n      var $name = component.$name;\n      var $options = component.$options;\n      var $props = component.$props;\n      var attrs = $options.attrs;\n      var props = $options.props;\n      var el = $options.el;\n\n      if (!props || attrs === false) {\n        return;\n      }\n\n      var attributes = isArray(attrs) ? attrs : Object.keys(props);\n      var filter = attributes.map(function (key) {\n        return hyphenate(key);\n      }).concat($name);\n      var observer = new MutationObserver(function (records) {\n        var data = getProps($options, $name);\n\n        if (records.some(function (ref) {\n          var attributeName = ref.attributeName;\n          var prop = attributeName.replace('data-', '');\n          return (prop === $name ? attributes : [camelize(prop), camelize(attributeName)]).some(function (prop) {\n            return !isUndefined(data[prop]) && data[prop] !== $props[prop];\n          });\n        })) {\n          component.$reset();\n        }\n      });\n      observer.observe(el, {\n        attributes: true,\n        attributeFilter: filter.concat(filter.map(function (key) {\n          return \"data-\" + key;\n        }))\n      });\n      return observer;\n    }\n  }\n\n  function instanceAPI(UIkit) {\n    var DATA = UIkit.data;\n\n    UIkit.prototype.$create = function (component, element, data) {\n      return UIkit[component](element, data);\n    };\n\n    UIkit.prototype.$mount = function (el) {\n      var ref = this.$options;\n      var name = ref.name;\n\n      if (!el[DATA]) {\n        el[DATA] = {};\n      }\n\n      if (el[DATA][name]) {\n        return;\n      }\n\n      el[DATA][name] = this;\n      this.$el = this.$options.el = this.$options.el || el;\n\n      if (within(el, document)) {\n        this._callConnected();\n      }\n    };\n\n    UIkit.prototype.$reset = function () {\n      this._callDisconnected();\n\n      this._callConnected();\n    };\n\n    UIkit.prototype.$destroy = function (removeEl) {\n      if (removeEl === void 0) removeEl = false;\n      var ref = this.$options;\n      var el = ref.el;\n      var name = ref.name;\n\n      if (el) {\n        this._callDisconnected();\n      }\n\n      this._callHook('destroy');\n\n      if (!el || !el[DATA]) {\n        return;\n      }\n\n      delete el[DATA][name];\n\n      if (!isEmpty(el[DATA])) {\n        delete el[DATA];\n      }\n\n      if (removeEl) {\n        _remove(this.$el);\n      }\n    };\n\n    UIkit.prototype.$emit = function (e) {\n      this._callUpdate(e);\n    };\n\n    UIkit.prototype.$update = function (element, e) {\n      if (element === void 0) element = this.$el;\n      UIkit.update(element, e);\n    };\n\n    UIkit.prototype.$getComponent = UIkit.getComponent;\n    var names = {};\n    Object.defineProperties(UIkit.prototype, {\n      $container: Object.getOwnPropertyDescriptor(UIkit, 'container'),\n      $name: {\n        get: function get() {\n          var ref = this.$options;\n          var name = ref.name;\n\n          if (!names[name]) {\n            names[name] = UIkit.prefix + hyphenate(name);\n          }\n\n          return names[name];\n        }\n      }\n    });\n  }\n\n  function componentAPI(UIkit) {\n    var DATA = UIkit.data;\n    var components = {};\n\n    UIkit.component = function (name, options) {\n      var id = hyphenate(name);\n      name = camelize(id);\n\n      if (!options) {\n        if (isPlainObject(components[name])) {\n          components[name] = UIkit.extend(components[name]);\n        }\n\n        return components[name];\n      }\n\n      UIkit[name] = function (element, data) {\n        var i = arguments.length,\n            argsArray = Array(i);\n\n        while (i--) {\n          argsArray[i] = arguments[i];\n        }\n\n        var component = UIkit.component(name);\n        return component.options.functional ? new component({\n          data: isPlainObject(element) ? element : [].concat(argsArray)\n        }) : !element ? init(element) : $$(element).map(init)[0];\n\n        function init(element) {\n          var instance = UIkit.getComponent(element, name);\n\n          if (instance) {\n            if (!data) {\n              return instance;\n            } else {\n              instance.$destroy();\n            }\n          }\n\n          return new component({\n            el: element,\n            data: data\n          });\n        }\n      };\n\n      var opt = isPlainObject(options) ? assign({}, options) : options.options;\n      opt.name = name;\n\n      if (opt.install) {\n        opt.install(UIkit, opt, name);\n      }\n\n      if (UIkit._initialized && !opt.functional) {\n        fastdom.read(function () {\n          return UIkit[name](\"[uk-\" + id + \"],[data-uk-\" + id + \"]\");\n        });\n      }\n\n      return components[name] = isPlainObject(options) ? opt : options;\n    };\n\n    UIkit.getComponents = function (element) {\n      return element && element[DATA] || {};\n    };\n\n    UIkit.getComponent = function (element, name) {\n      return UIkit.getComponents(element)[name];\n    };\n\n    UIkit.connect = function (node) {\n      if (node[DATA]) {\n        for (var name in node[DATA]) {\n          node[DATA][name]._callConnected();\n        }\n      }\n\n      for (var i = 0; i < node.attributes.length; i++) {\n        var name$1 = getComponentName(node.attributes[i].name);\n\n        if (name$1 && name$1 in components) {\n          UIkit[name$1](node);\n        }\n      }\n    };\n\n    UIkit.disconnect = function (node) {\n      for (var name in node[DATA]) {\n        node[DATA][name]._callDisconnected();\n      }\n    };\n  }\n\n  function getComponentName(attribute) {\n    return startsWith(attribute, 'uk-') || startsWith(attribute, 'data-uk-') ? camelize(attribute.replace('data-uk-', '').replace('uk-', '')) : false;\n  }\n\n  var UIkit = function UIkit(options) {\n    this._init(options);\n  };\n\n  UIkit.util = util;\n  UIkit.data = '__uikit__';\n  UIkit.prefix = 'uk-';\n  UIkit.options = {};\n  UIkit.version = '3.6.8';\n  globalAPI(UIkit);\n  hooksAPI(UIkit);\n  stateAPI(UIkit);\n  componentAPI(UIkit);\n  instanceAPI(UIkit);\n\n  function Core(UIkit) {\n    if (!inBrowser) {\n      return;\n    } // throttle 'resize'\n\n\n    var pendingResize;\n\n    var handleResize = function handleResize() {\n      if (pendingResize) {\n        return;\n      }\n\n      pendingResize = true;\n      fastdom.write(function () {\n        return pendingResize = false;\n      });\n      UIkit.update(null, 'resize');\n    };\n\n    on(window, 'load resize', handleResize);\n    on(document, 'loadedmetadata load', handleResize, true);\n\n    if ('ResizeObserver' in window) {\n      new ResizeObserver(handleResize).observe(document.documentElement);\n    } // throttle `scroll` event (Safari triggers multiple `scroll` events per frame)\n\n\n    var pending;\n    on(window, 'scroll', function (e) {\n      if (pending) {\n        return;\n      }\n\n      pending = true;\n      fastdom.write(function () {\n        return pending = false;\n      });\n      UIkit.update(null, e.type);\n    }, {\n      passive: true,\n      capture: true\n    });\n    var started = 0;\n    on(document, 'animationstart', function (ref) {\n      var target = ref.target;\n\n      if ((css(target, 'animationName') || '').match(/^uk-.*(left|right)/)) {\n        started++;\n        css(document.documentElement, 'overflowX', 'hidden');\n        setTimeout(function () {\n          if (! --started) {\n            css(document.documentElement, 'overflowX', '');\n          }\n        }, toMs(css(target, 'animationDuration')) + 100);\n      }\n    }, true);\n    on(document, pointerDown, function (e) {\n      if (!isTouch(e)) {\n        return;\n      } // Handle Swipe Gesture\n\n\n      var pos = getEventPos(e);\n      var target = 'tagName' in e.target ? e.target : parent(e.target);\n      once(document, pointerUp + \" \" + pointerCancel + \" scroll\", function (e) {\n        var ref = getEventPos(e);\n        var x = ref.x;\n        var y = ref.y; // swipe\n\n        if (e.type !== 'scroll' && target && x && Math.abs(pos.x - x) > 100 || y && Math.abs(pos.y - y) > 100) {\n          setTimeout(function () {\n            trigger(target, 'swipe');\n            trigger(target, \"swipe\" + swipeDirection(pos.x, pos.y, x, y));\n          });\n        }\n      });\n    }, {\n      passive: true\n    });\n  }\n\n  function swipeDirection(x1, y1, x2, y2) {\n    return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? x1 - x2 > 0 ? 'Left' : 'Right' : y1 - y2 > 0 ? 'Up' : 'Down';\n  }\n\n  function boot(UIkit) {\n    var connect = UIkit.connect;\n    var disconnect = UIkit.disconnect;\n\n    if (!inBrowser || !window.MutationObserver) {\n      return;\n    }\n\n    fastdom.read(function () {\n      if (document.body) {\n        apply(document.body, connect);\n      }\n\n      new MutationObserver(function (records) {\n        return records.forEach(applyChildListMutation);\n      }).observe(document, {\n        childList: true,\n        subtree: true\n      });\n      new MutationObserver(function (records) {\n        return records.forEach(applyAttributeMutation);\n      }).observe(document, {\n        attributes: true,\n        subtree: true\n      });\n      UIkit._initialized = true;\n    });\n\n    function applyChildListMutation(ref) {\n      var addedNodes = ref.addedNodes;\n      var removedNodes = ref.removedNodes;\n\n      for (var i = 0; i < addedNodes.length; i++) {\n        apply(addedNodes[i], connect);\n      }\n\n      for (var i$1 = 0; i$1 < removedNodes.length; i$1++) {\n        apply(removedNodes[i$1], disconnect);\n      }\n    }\n\n    function applyAttributeMutation(ref) {\n      var target = ref.target;\n      var attributeName = ref.attributeName;\n      var name = getComponentName(attributeName);\n\n      if (!name || !(name in UIkit)) {\n        return;\n      }\n\n      if (hasAttr(target, attributeName)) {\n        UIkit[name](target);\n        return;\n      }\n\n      var component = UIkit.getComponent(target, name);\n\n      if (component) {\n        component.$destroy();\n      }\n    }\n  }\n\n  var Class = {\n    connected: function connected() {\n      !hasClass(this.$el, this.$name) && addClass(this.$el, this.$name);\n    }\n  };\n  var Togglable = {\n    props: {\n      cls: Boolean,\n      animation: 'list',\n      duration: Number,\n      origin: String,\n      transition: String\n    },\n    data: {\n      cls: false,\n      animation: [false],\n      duration: 200,\n      origin: false,\n      transition: 'linear',\n      clsEnter: 'uk-togglabe-enter',\n      clsLeave: 'uk-togglabe-leave',\n      initProps: {\n        overflow: '',\n        height: '',\n        paddingTop: '',\n        paddingBottom: '',\n        marginTop: '',\n        marginBottom: ''\n      },\n      hideProps: {\n        overflow: 'hidden',\n        height: 0,\n        paddingTop: 0,\n        paddingBottom: 0,\n        marginTop: 0,\n        marginBottom: 0\n      }\n    },\n    computed: {\n      hasAnimation: function hasAnimation(ref) {\n        var animation = ref.animation;\n        return !!animation[0];\n      },\n      hasTransition: function hasTransition(ref) {\n        var animation = ref.animation;\n        return this.hasAnimation && animation[0] === true;\n      }\n    },\n    methods: {\n      toggleElement: function toggleElement(targets, toggle, animate) {\n        var this$1 = this;\n        return new Promise(function (resolve) {\n          return Promise.all(toNodes(targets).map(function (el) {\n            var show = isBoolean(toggle) ? toggle : !this$1.isToggled(el);\n\n            if (!trigger(el, \"before\" + (show ? 'show' : 'hide'), [this$1])) {\n              return Promise.reject();\n            }\n\n            var promise = (isFunction(animate) ? animate : animate === false || !this$1.hasAnimation ? this$1._toggle : this$1.hasTransition ? toggleHeight(this$1) : toggleAnimation(this$1))(el, show) || Promise.resolve();\n            addClass(el, show ? this$1.clsEnter : this$1.clsLeave);\n            trigger(el, show ? 'show' : 'hide', [this$1]);\n            promise[\"catch\"](noop).then(function () {\n              return removeClass(el, show ? this$1.clsEnter : this$1.clsLeave);\n            });\n            return promise.then(function () {\n              removeClass(el, show ? this$1.clsEnter : this$1.clsLeave);\n              trigger(el, show ? 'shown' : 'hidden', [this$1]);\n              this$1.$update(el);\n            });\n          })).then(resolve, noop);\n        });\n      },\n      isToggled: function isToggled(el) {\n        if (el === void 0) el = this.$el;\n        return hasClass(this.clsEnter) ? true : hasClass(this.clsLeave) ? false : this.cls ? hasClass(el, this.cls.split(' ')[0]) : !hasAttr(el, 'hidden');\n      },\n      _toggle: function _toggle(el, toggled) {\n        if (!el) {\n          return;\n        }\n\n        toggled = Boolean(toggled);\n        var changed;\n\n        if (this.cls) {\n          changed = includes(this.cls, ' ') || toggled !== hasClass(el, this.cls);\n          changed && toggleClass(el, this.cls, includes(this.cls, ' ') ? undefined : toggled);\n        } else {\n          changed = toggled === el.hidden;\n          changed && (el.hidden = !toggled);\n        }\n\n        $$('[autofocus]', el).some(function (el) {\n          return isVisible(el) ? el.focus() || true : el.blur();\n        });\n\n        if (changed) {\n          trigger(el, 'toggled', [toggled, this]);\n          this.$update(el);\n        }\n      }\n    }\n  };\n\n  function toggleHeight(ref) {\n    var isToggled = ref.isToggled;\n    var duration = ref.duration;\n    var initProps = ref.initProps;\n    var hideProps = ref.hideProps;\n    var transition = ref.transition;\n    var _toggle = ref._toggle;\n    return function (el, show) {\n      var inProgress = Transition.inProgress(el);\n      var inner = el.hasChildNodes ? toFloat(css(el.firstElementChild, 'marginTop')) + toFloat(css(el.lastElementChild, 'marginBottom')) : 0;\n      var currentHeight = isVisible(el) ? height(el) + (inProgress ? 0 : inner) : 0;\n      Transition.cancel(el);\n\n      if (!isToggled(el)) {\n        _toggle(el, true);\n      }\n\n      height(el, ''); // Update child components first\n\n      fastdom.flush();\n      var endHeight = height(el) + (inProgress ? 0 : inner);\n      height(el, currentHeight);\n      return (show ? Transition.start(el, assign({}, initProps, {\n        overflow: 'hidden',\n        height: endHeight\n      }), Math.round(duration * (1 - currentHeight / endHeight)), transition) : Transition.start(el, hideProps, Math.round(duration * (currentHeight / endHeight)), transition).then(function () {\n        return _toggle(el, false);\n      })).then(function () {\n        return css(el, initProps);\n      });\n    };\n  }\n\n  function toggleAnimation(cmp) {\n    return function (el, show) {\n      Animation.cancel(el);\n      var animation = cmp.animation;\n      var duration = cmp.duration;\n      var _toggle = cmp._toggle;\n\n      if (show) {\n        _toggle(el, true);\n\n        return Animation[\"in\"](el, animation[0], duration, cmp.origin);\n      }\n\n      return Animation.out(el, animation[1] || animation[0], duration, cmp.origin).then(function () {\n        return _toggle(el, false);\n      });\n    };\n  }\n\n  var Accordion = {\n    mixins: [Class, Togglable],\n    props: {\n      targets: String,\n      active: null,\n      collapsible: Boolean,\n      multiple: Boolean,\n      toggle: String,\n      content: String,\n      transition: String,\n      offset: Number\n    },\n    data: {\n      targets: '> *',\n      active: false,\n      animation: [true],\n      collapsible: true,\n      multiple: false,\n      clsOpen: 'uk-open',\n      toggle: '> .uk-accordion-title',\n      content: '> .uk-accordion-content',\n      transition: 'ease',\n      offset: 0\n    },\n    computed: {\n      items: {\n        get: function get(ref, $el) {\n          var targets = ref.targets;\n          return $$(targets, $el);\n        },\n        watch: function watch(items, prev) {\n          var this$1 = this;\n          items.forEach(function (el) {\n            return hide($(this$1.content, el), !hasClass(el, this$1.clsOpen));\n          });\n\n          if (prev || hasClass(items, this.clsOpen)) {\n            return;\n          }\n\n          var active = this.active !== false && items[Number(this.active)] || !this.collapsible && items[0];\n\n          if (active) {\n            this.toggle(active, false);\n          }\n        },\n        immediate: true\n      },\n      toggles: function toggles(ref) {\n        var toggle = ref.toggle;\n        return this.items.map(function (item) {\n          return $(toggle, item);\n        });\n      }\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return this.targets + \" \" + this.$props.toggle;\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.toggle(index(this.toggles, e.current));\n      }\n    }],\n    methods: {\n      toggle: function toggle(item, animate) {\n        var this$1 = this;\n        var items = [this.items[_getIndex(item, this.items)]];\n        var activeItems = filter(this.items, \".\" + this.clsOpen);\n\n        if (!this.multiple && !includes(activeItems, items[0])) {\n          items = items.concat(activeItems);\n        }\n\n        if (!this.collapsible && activeItems.length < 2 && !filter(items, \":not(.\" + this.clsOpen + \")\").length) {\n          return;\n        }\n\n        items.forEach(function (el) {\n          return this$1.toggleElement(el, !hasClass(el, this$1.clsOpen), function (el, show) {\n            toggleClass(el, this$1.clsOpen, show);\n            attr($(this$1.$props.toggle, el), 'aria-expanded', show);\n            var content = $(\"\" + (el._wrapper ? '> * ' : '') + this$1.content, el);\n\n            if (animate === false || !this$1.hasTransition) {\n              hide(content, !show);\n              return;\n            }\n\n            if (!el._wrapper) {\n              el._wrapper = wrapAll(content, \"<div\" + (show ? ' hidden' : '') + \">\");\n            }\n\n            hide(content, false);\n            return toggleHeight(this$1)(el._wrapper, show).then(function () {\n              hide(content, !show);\n              delete el._wrapper;\n              unwrap(content);\n\n              if (show) {\n                var toggle = $(this$1.$props.toggle, el);\n\n                if (!isInView(toggle)) {\n                  scrollIntoView(toggle, {\n                    offset: this$1.offset\n                  });\n                }\n              }\n            });\n          });\n        });\n      }\n    }\n  };\n\n  function hide(el, hide) {\n    el && (el.hidden = hide);\n  }\n\n  var alert = {\n    mixins: [Class, Togglable],\n    args: 'animation',\n    props: {\n      close: String\n    },\n    data: {\n      animation: [true],\n      selClose: '.uk-alert-close',\n      duration: 150,\n      hideProps: assign({\n        opacity: 0\n      }, Togglable.data.hideProps)\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return this.selClose;\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.close();\n      }\n    }],\n    methods: {\n      close: function close() {\n        var this$1 = this;\n        this.toggleElement(this.$el).then(function () {\n          return this$1.$destroy(true);\n        });\n      }\n    }\n  };\n  var Video = {\n    args: 'autoplay',\n    props: {\n      automute: Boolean,\n      autoplay: Boolean\n    },\n    data: {\n      automute: false,\n      autoplay: true\n    },\n    computed: {\n      inView: function inView(ref) {\n        var autoplay = ref.autoplay;\n        return autoplay === 'inview';\n      }\n    },\n    connected: function connected() {\n      if (this.inView && !hasAttr(this.$el, 'preload')) {\n        this.$el.preload = 'none';\n      }\n\n      if (this.automute) {\n        mute(this.$el);\n      }\n    },\n    update: {\n      read: function read() {\n        return {\n          visible: isVisible(this.$el) && css(this.$el, 'visibility') !== 'hidden',\n          inView: this.inView && isInView(this.$el)\n        };\n      },\n      write: function write(ref) {\n        var visible = ref.visible;\n        var inView = ref.inView;\n\n        if (!visible || this.inView && !inView) {\n          pause(this.$el);\n        } else if (this.autoplay === true || this.inView && inView) {\n          play(this.$el);\n        }\n      },\n      events: ['resize', 'scroll']\n    }\n  };\n  var cover = {\n    mixins: [Class, Video],\n    props: {\n      width: Number,\n      height: Number\n    },\n    data: {\n      automute: true\n    },\n    update: {\n      read: function read() {\n        var el = this.$el;\n        var ref = getPositionedParent(el) || parent(el);\n        var height = ref.offsetHeight;\n        var width = ref.offsetWidth;\n        var dim = Dimensions.cover({\n          width: this.width || el.naturalWidth || el.videoWidth || el.clientWidth,\n          height: this.height || el.naturalHeight || el.videoHeight || el.clientHeight\n        }, {\n          width: width + (width % 2 ? 1 : 0),\n          height: height + (height % 2 ? 1 : 0)\n        });\n\n        if (!dim.width || !dim.height) {\n          return false;\n        }\n\n        return dim;\n      },\n      write: function write(ref) {\n        var height = ref.height;\n        var width = ref.width;\n        css(this.$el, {\n          height: height,\n          width: width\n        });\n      },\n      events: ['resize']\n    }\n  };\n\n  function getPositionedParent(el) {\n    while (el = parent(el)) {\n      if (css(el, 'position') !== 'static') {\n        return el;\n      }\n    }\n  }\n\n  var Position = {\n    props: {\n      pos: String,\n      offset: null,\n      flip: Boolean,\n      clsPos: String\n    },\n    data: {\n      pos: \"bottom-\" + (!isRtl ? 'left' : 'right'),\n      flip: true,\n      offset: false,\n      clsPos: ''\n    },\n    computed: {\n      pos: function pos(ref) {\n        var pos = ref.pos;\n        return (pos + (!includes(pos, '-') ? '-center' : '')).split('-');\n      },\n      dir: function dir() {\n        return this.pos[0];\n      },\n      align: function align() {\n        return this.pos[1];\n      }\n    },\n    methods: {\n      positionAt: function positionAt(element, target, boundary) {\n        removeClasses(element, this.clsPos + \"-(top|bottom|left|right)(-[a-z]+)?\");\n        var ref = this;\n        var offset$1 = ref.offset;\n        var axis = this.getAxis();\n\n        if (!isNumeric(offset$1)) {\n          var node = $(offset$1);\n          offset$1 = node ? offset(node)[axis === 'x' ? 'left' : 'top'] - offset(target)[axis === 'x' ? 'right' : 'bottom'] : 0;\n        }\n\n        var ref$1 = _positionAt(element, target, axis === 'x' ? flipPosition(this.dir) + \" \" + this.align : this.align + \" \" + flipPosition(this.dir), axis === 'x' ? this.dir + \" \" + this.align : this.align + \" \" + this.dir, axis === 'x' ? \"\" + (this.dir === 'left' ? -offset$1 : offset$1) : \" \" + (this.dir === 'top' ? -offset$1 : offset$1), null, this.flip, boundary).target;\n\n        var x = ref$1.x;\n        var y = ref$1.y;\n        this.dir = axis === 'x' ? x : y;\n        this.align = axis === 'x' ? y : x;\n        toggleClass(element, this.clsPos + \"-\" + this.dir + \"-\" + this.align, this.offset === false);\n      },\n      getAxis: function getAxis() {\n        return this.dir === 'top' || this.dir === 'bottom' ? 'y' : 'x';\n      }\n    }\n  };\n  var active;\n  var drop = {\n    mixins: [Position, Togglable],\n    args: 'pos',\n    props: {\n      mode: 'list',\n      toggle: Boolean,\n      boundary: Boolean,\n      boundaryAlign: Boolean,\n      delayShow: Number,\n      delayHide: Number,\n      clsDrop: String\n    },\n    data: {\n      mode: ['click', 'hover'],\n      toggle: '- *',\n      boundary: inBrowser && window,\n      boundaryAlign: false,\n      delayShow: 0,\n      delayHide: 800,\n      clsDrop: false,\n      animation: ['uk-animation-fade'],\n      cls: 'uk-open'\n    },\n    computed: {\n      boundary: function boundary(ref, $el) {\n        var boundary = ref.boundary;\n        return query(boundary, $el);\n      },\n      clsDrop: function clsDrop(ref) {\n        var clsDrop = ref.clsDrop;\n        return clsDrop || \"uk-\" + this.$options.name;\n      },\n      clsPos: function clsPos() {\n        return this.clsDrop;\n      }\n    },\n    created: function created() {\n      this.tracker = new MouseTracker();\n    },\n    connected: function connected() {\n      addClass(this.$el, this.clsDrop);\n      var ref = this.$props;\n      var toggle = ref.toggle;\n      this.toggle = toggle && this.$create('toggle', query(toggle, this.$el), {\n        target: this.$el,\n        mode: this.mode\n      });\n    },\n    disconnected: function disconnected() {\n      if (this.isActive()) {\n        active = null;\n      }\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return \".\" + this.clsDrop + \"-close\";\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.hide(false);\n      }\n    }, {\n      name: 'click',\n      delegate: function delegate() {\n        return 'a[href^=\"#\"]';\n      },\n      handler: function handler(ref) {\n        var defaultPrevented = ref.defaultPrevented;\n        var hash = ref.current.hash;\n\n        if (!defaultPrevented && hash && !within(hash, this.$el)) {\n          this.hide(false);\n        }\n      }\n    }, {\n      name: 'beforescroll',\n      handler: function handler() {\n        this.hide(false);\n      }\n    }, {\n      name: 'toggle',\n      self: true,\n      handler: function handler(e, toggle) {\n        e.preventDefault();\n\n        if (this.isToggled()) {\n          this.hide(false);\n        } else {\n          this.show(toggle, false);\n        }\n      }\n    }, {\n      name: 'toggleshow',\n      self: true,\n      handler: function handler(e, toggle) {\n        e.preventDefault();\n        this.show(toggle);\n      }\n    }, {\n      name: 'togglehide',\n      self: true,\n      handler: function handler(e) {\n        e.preventDefault();\n        this.hide();\n      }\n    }, {\n      name: pointerEnter,\n      filter: function filter() {\n        return includes(this.mode, 'hover');\n      },\n      handler: function handler(e) {\n        if (!isTouch(e)) {\n          this.clearTimers();\n        }\n      }\n    }, {\n      name: pointerLeave,\n      filter: function filter() {\n        return includes(this.mode, 'hover');\n      },\n      handler: function handler(e) {\n        if (!isTouch(e) && e.relatedTarget) {\n          this.hide();\n        }\n      }\n    }, {\n      name: 'toggled',\n      self: true,\n      handler: function handler(e, toggled) {\n        if (!toggled) {\n          return;\n        }\n\n        this.clearTimers();\n        this.position();\n      }\n    }, {\n      name: 'show',\n      self: true,\n      handler: function handler() {\n        var this$1 = this;\n        active = this;\n        this.tracker.init();\n        once(this.$el, 'hide', on(document, pointerDown, function (ref) {\n          var target = ref.target;\n          return !within(target, this$1.$el) && once(document, pointerUp + \" \" + pointerCancel + \" scroll\", function (ref) {\n            var defaultPrevented = ref.defaultPrevented;\n            var type = ref.type;\n            var newTarget = ref.target;\n\n            if (!defaultPrevented && type === pointerUp && target === newTarget && !(this$1.toggle && within(target, this$1.toggle.$el))) {\n              this$1.hide(false);\n            }\n          }, true);\n        }), {\n          self: true\n        });\n        once(this.$el, 'hide', on(document, 'keydown', function (e) {\n          if (e.keyCode === 27) {\n            this$1.hide(false);\n          }\n        }), {\n          self: true\n        });\n      }\n    }, {\n      name: 'beforehide',\n      self: true,\n      handler: function handler() {\n        this.clearTimers();\n      }\n    }, {\n      name: 'hide',\n      handler: function handler(ref) {\n        var target = ref.target;\n\n        if (this.$el !== target) {\n          active = active === null && within(target, this.$el) && this.isToggled() ? this : active;\n          return;\n        }\n\n        active = this.isActive() ? null : active;\n        this.tracker.cancel();\n      }\n    }],\n    update: {\n      write: function write() {\n        if (this.isToggled() && !hasClass(this.$el, this.clsEnter)) {\n          this.position();\n        }\n      },\n      events: ['resize']\n    },\n    methods: {\n      show: function show(toggle, delay) {\n        var this$1 = this;\n        if (toggle === void 0) toggle = this.toggle;\n        if (delay === void 0) delay = true;\n\n        if (this.isToggled() && toggle && this.toggle && toggle.$el !== this.toggle.$el) {\n          this.hide(false);\n        }\n\n        this.toggle = toggle;\n        this.clearTimers();\n\n        if (this.isActive()) {\n          return;\n        }\n\n        if (active) {\n          if (delay && active.isDelaying) {\n            this.showTimer = setTimeout(this.show, 10);\n            return;\n          }\n\n          var prev;\n\n          while (active && prev !== active && !within(this.$el, active.$el)) {\n            prev = active;\n            active.hide(false);\n          }\n        }\n\n        this.showTimer = setTimeout(function () {\n          return !this$1.isToggled() && this$1.toggleElement(this$1.$el, true);\n        }, delay && this.delayShow || 0);\n      },\n      hide: function hide(delay) {\n        var this$1 = this;\n        if (delay === void 0) delay = true;\n\n        var hide = function hide() {\n          return this$1.toggleElement(this$1.$el, false, false);\n        };\n\n        this.clearTimers();\n        this.isDelaying = getPositionedElements(this.$el).some(function (el) {\n          return this$1.tracker.movesTo(el);\n        });\n\n        if (delay && this.isDelaying) {\n          this.hideTimer = setTimeout(this.hide, 50);\n        } else if (delay && this.delayHide) {\n          this.hideTimer = setTimeout(hide, this.delayHide);\n        } else {\n          hide();\n        }\n      },\n      clearTimers: function clearTimers() {\n        clearTimeout(this.showTimer);\n        clearTimeout(this.hideTimer);\n        this.showTimer = null;\n        this.hideTimer = null;\n        this.isDelaying = false;\n      },\n      isActive: function isActive() {\n        return active === this;\n      },\n      position: function position() {\n        removeClass(this.$el, this.clsDrop + \"-stack\");\n        toggleClass(this.$el, this.clsDrop + \"-boundary\", this.boundaryAlign);\n        var boundary = offset(this.boundary);\n        var alignTo = this.boundaryAlign ? boundary : offset(this.toggle.$el);\n\n        if (this.align === 'justify') {\n          var prop = this.getAxis() === 'y' ? 'width' : 'height';\n          css(this.$el, prop, alignTo[prop]);\n        } else if (this.$el.offsetWidth > Math.max(boundary.right - alignTo.left, alignTo.right - boundary.left)) {\n          addClass(this.$el, this.clsDrop + \"-stack\");\n        }\n\n        this.positionAt(this.$el, this.boundaryAlign ? this.boundary : this.toggle.$el, this.boundary);\n      }\n    }\n  };\n\n  function getPositionedElements(el) {\n    var result = [];\n    apply(el, function (el) {\n      return css(el, 'position') !== 'static' && result.push(el);\n    });\n    return result;\n  }\n\n  var formCustom = {\n    mixins: [Class],\n    args: 'target',\n    props: {\n      target: Boolean\n    },\n    data: {\n      target: false\n    },\n    computed: {\n      input: function input(_, $el) {\n        return $(selInput, $el);\n      },\n      state: function state() {\n        return this.input.nextElementSibling;\n      },\n      target: function target(ref, $el) {\n        var target = ref.target;\n        return target && (target === true && parent(this.input) === $el && this.input.nextElementSibling || query(target, $el));\n      }\n    },\n    update: function update() {\n      var ref = this;\n      var target = ref.target;\n      var input = ref.input;\n\n      if (!target) {\n        return;\n      }\n\n      var option;\n      var prop = isInput(target) ? 'value' : 'textContent';\n      var prev = target[prop];\n      var value = input.files && input.files[0] ? input.files[0].name : matches(input, 'select') && (option = $$('option', input).filter(function (el) {\n        return el.selected;\n      })[0]) // eslint-disable-line prefer-destructuring\n      ? option.textContent : input.value;\n\n      if (prev !== value) {\n        target[prop] = value;\n      }\n    },\n    events: [{\n      name: 'change',\n      handler: function handler() {\n        this.$update();\n      }\n    }, {\n      name: 'reset',\n      el: function el() {\n        return closest(this.$el, 'form');\n      },\n      handler: function handler() {\n        this.$update();\n      }\n    }]\n  }; // Deprecated\n\n  var gif = {\n    update: {\n      read: function read(data) {\n        var inview = isInView(this.$el);\n\n        if (!inview || data.isInView === inview) {\n          return false;\n        }\n\n        data.isInView = inview;\n      },\n      write: function write() {\n        this.$el.src = '' + this.$el.src; // force self-assign\n      },\n      events: ['scroll', 'resize']\n    }\n  };\n  var Margin = {\n    props: {\n      margin: String,\n      firstColumn: Boolean\n    },\n    data: {\n      margin: 'uk-margin-small-top',\n      firstColumn: 'uk-first-column'\n    },\n    update: {\n      read: function read() {\n        var rows = getRows(this.$el.children);\n        return {\n          rows: rows,\n          columns: getColumns(rows)\n        };\n      },\n      write: function write(ref) {\n        var columns = ref.columns;\n        var rows = ref.rows;\n\n        for (var i = 0; i < rows.length; i++) {\n          for (var j = 0; j < rows[i].length; j++) {\n            toggleClass(rows[i][j], this.margin, i !== 0);\n            toggleClass(rows[i][j], this.firstColumn, !!~columns[0].indexOf(rows[i][j]));\n          }\n        }\n      },\n      events: ['resize']\n    }\n  };\n\n  function getRows(items) {\n    return sortBy$1(items, 'top', 'bottom');\n  }\n\n  function getColumns(rows) {\n    var columns = [];\n\n    for (var i = 0; i < rows.length; i++) {\n      var sorted = sortBy$1(rows[i], 'left', 'right');\n\n      for (var j = 0; j < sorted.length; j++) {\n        columns[j] = !columns[j] ? sorted[j] : columns[j].concat(sorted[j]);\n      }\n    }\n\n    return isRtl ? columns.reverse() : columns;\n  }\n\n  function sortBy$1(items, startProp, endProp) {\n    var sorted = [[]];\n\n    for (var i = 0; i < items.length; i++) {\n      var el = items[i];\n\n      if (!isVisible(el)) {\n        continue;\n      }\n\n      var dim = getOffset(el);\n\n      for (var j = sorted.length - 1; j >= 0; j--) {\n        var current = sorted[j];\n\n        if (!current[0]) {\n          current.push(el);\n          break;\n        }\n\n        var startDim = void 0;\n\n        if (current[0].offsetParent === el.offsetParent) {\n          startDim = getOffset(current[0]);\n        } else {\n          dim = getOffset(el, true);\n          startDim = getOffset(current[0], true);\n        }\n\n        if (dim[startProp] >= startDim[endProp] - 1 && dim[startProp] !== startDim[startProp]) {\n          sorted.push([el]);\n          break;\n        }\n\n        if (dim[endProp] - 1 > startDim[startProp] || dim[startProp] === startDim[startProp]) {\n          current.push(el);\n          break;\n        }\n\n        if (j === 0) {\n          sorted.unshift([el]);\n          break;\n        }\n      }\n    }\n\n    return sorted;\n  }\n\n  function getOffset(element, offset) {\n    var assign;\n    if (offset === void 0) offset = false;\n    var offsetTop = element.offsetTop;\n    var offsetLeft = element.offsetLeft;\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth;\n\n    if (offset) {\n      assign = offsetPosition(element), offsetTop = assign[0], offsetLeft = assign[1];\n    }\n\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      bottom: offsetTop + offsetHeight,\n      right: offsetLeft + offsetWidth\n    };\n  }\n\n  var grid = {\n    \"extends\": Margin,\n    mixins: [Class],\n    name: 'grid',\n    props: {\n      masonry: Boolean,\n      parallax: Number\n    },\n    data: {\n      margin: 'uk-grid-margin',\n      clsStack: 'uk-grid-stack',\n      masonry: false,\n      parallax: 0\n    },\n    connected: function connected() {\n      this.masonry && addClass(this.$el, 'uk-flex-top uk-flex-wrap-top');\n    },\n    update: [{\n      write: function write(ref) {\n        var columns = ref.columns;\n        toggleClass(this.$el, this.clsStack, columns.length < 2);\n      },\n      events: ['resize']\n    }, {\n      read: function read(data) {\n        var columns = data.columns;\n        var rows = data.rows; // Filter component makes elements positioned absolute\n\n        if (!columns.length || !this.masonry && !this.parallax || positionedAbsolute(this.$el)) {\n          data.translates = false;\n          return false;\n        }\n\n        var translates = false;\n\n        var nodes = _children(this.$el);\n\n        var columnHeights = getColumnHeights(columns);\n        var margin = getMarginTop(nodes, this.margin) * (rows.length - 1);\n        var elHeight = Math.max.apply(Math, columnHeights) + margin;\n\n        if (this.masonry) {\n          columns = columns.map(function (column) {\n            return sortBy(column, 'offsetTop');\n          });\n          translates = getTranslates(rows, columns);\n        }\n\n        var padding = Math.abs(this.parallax);\n\n        if (padding) {\n          padding = columnHeights.reduce(function (newPadding, hgt, i) {\n            return Math.max(newPadding, hgt + margin + (i % 2 ? padding : padding / 8) - elHeight);\n          }, 0);\n        }\n\n        return {\n          padding: padding,\n          columns: columns,\n          translates: translates,\n          height: translates ? elHeight : ''\n        };\n      },\n      write: function write(ref) {\n        var height = ref.height;\n        var padding = ref.padding;\n        css(this.$el, 'paddingBottom', padding || '');\n        height !== false && css(this.$el, 'height', height);\n      },\n      events: ['resize']\n    }, {\n      read: function read(ref) {\n        var height$1 = ref.height;\n        return {\n          scrolled: this.parallax ? scrolledOver(this.$el, height$1 ? height$1 - height(this.$el) : 0) * Math.abs(this.parallax) : false\n        };\n      },\n      write: function write(ref) {\n        var columns = ref.columns;\n        var scrolled = ref.scrolled;\n        var translates = ref.translates;\n\n        if (scrolled === false && !translates) {\n          return;\n        }\n\n        columns.forEach(function (column, i) {\n          return column.forEach(function (el, j) {\n            return css(el, 'transform', !scrolled && !translates ? '' : \"translateY(\" + ((translates && -translates[i][j]) + (scrolled ? i % 2 ? scrolled : scrolled / 8 : 0)) + \"px)\");\n          });\n        });\n      },\n      events: ['scroll', 'resize']\n    }]\n  };\n\n  function positionedAbsolute(el) {\n    return _children(el).some(function (el) {\n      return css(el, 'position') === 'absolute';\n    });\n  }\n\n  function getTranslates(rows, columns) {\n    var rowHeights = rows.map(function (row) {\n      return Math.max.apply(Math, row.map(function (el) {\n        return el.offsetHeight;\n      }));\n    });\n    return columns.map(function (elements) {\n      var prev = 0;\n      return elements.map(function (element, row) {\n        return prev += row ? rowHeights[row - 1] - elements[row - 1].offsetHeight : 0;\n      });\n    });\n  }\n\n  function getMarginTop(nodes, cls) {\n    var ref = nodes.filter(function (el) {\n      return hasClass(el, cls);\n    });\n    var node = ref[0];\n    return toFloat(node ? css(node, 'marginTop') : css(nodes[0], 'paddingLeft'));\n  }\n\n  function getColumnHeights(columns) {\n    return columns.map(function (column) {\n      return column.reduce(function (sum, el) {\n        return sum + el.offsetHeight;\n      }, 0);\n    });\n  } // IE 11 fix (min-height on a flex container won't apply to its flex items)\n\n\n  var FlexBug = isIE ? {\n    props: {\n      selMinHeight: String\n    },\n    data: {\n      selMinHeight: false,\n      forceHeight: false\n    },\n    computed: {\n      elements: function elements(ref, $el) {\n        var selMinHeight = ref.selMinHeight;\n        return selMinHeight ? $$(selMinHeight, $el) : [$el];\n      }\n    },\n    update: [{\n      read: function read() {\n        css(this.elements, 'height', '');\n      },\n      order: -5,\n      events: ['resize']\n    }, {\n      write: function write() {\n        var this$1 = this;\n        this.elements.forEach(function (el) {\n          var height = toFloat(css(el, 'minHeight'));\n\n          if (height && (this$1.forceHeight || Math.round(height + boxModelAdjust(el, 'height', 'content-box')) >= el.offsetHeight)) {\n            css(el, 'height', height);\n          }\n        });\n      },\n      order: 5,\n      events: ['resize']\n    }]\n  } : {};\n  var heightMatch = {\n    mixins: [FlexBug],\n    args: 'target',\n    props: {\n      target: String,\n      row: Boolean\n    },\n    data: {\n      target: '> *',\n      row: true,\n      forceHeight: true\n    },\n    computed: {\n      elements: function elements(ref, $el) {\n        var target = ref.target;\n        return $$(target, $el);\n      }\n    },\n    update: {\n      read: function read() {\n        return {\n          rows: (this.row ? getRows(this.elements) : [this.elements]).map(match)\n        };\n      },\n      write: function write(ref) {\n        var rows = ref.rows;\n        rows.forEach(function (ref) {\n          var heights = ref.heights;\n          var elements = ref.elements;\n          return elements.forEach(function (el, i) {\n            return css(el, 'minHeight', heights[i]);\n          });\n        });\n      },\n      events: ['resize']\n    }\n  };\n\n  function match(elements) {\n    if (elements.length < 2) {\n      return {\n        heights: [''],\n        elements: elements\n      };\n    }\n\n    var heights = elements.map(getHeight);\n    var max = Math.max.apply(Math, heights);\n    var hasMinHeight = elements.some(function (el) {\n      return el.style.minHeight;\n    });\n    var hasShrunk = elements.some(function (el, i) {\n      return !el.style.minHeight && heights[i] < max;\n    });\n\n    if (hasMinHeight && hasShrunk) {\n      css(elements, 'minHeight', '');\n      heights = elements.map(getHeight);\n      max = Math.max.apply(Math, heights);\n    }\n\n    heights = elements.map(function (el, i) {\n      return heights[i] === max && toFloat(el.style.minHeight).toFixed(2) !== max.toFixed(2) ? '' : max;\n    });\n    return {\n      heights: heights,\n      elements: elements\n    };\n  }\n\n  var clsBlock = 'uk-display-block';\n\n  function getHeight(element) {\n    if (!isVisible(element)) {\n      addClass(element, clsBlock);\n    }\n\n    var height = dimensions(element).height - boxModelAdjust(element, 'height', 'content-box');\n    removeClass(element, clsBlock);\n    return height;\n  }\n\n  var heightViewport = {\n    mixins: [FlexBug],\n    props: {\n      expand: Boolean,\n      offsetTop: Boolean,\n      offsetBottom: Boolean,\n      minHeight: Number\n    },\n    data: {\n      expand: false,\n      offsetTop: false,\n      offsetBottom: false,\n      minHeight: 0\n    },\n    update: {\n      read: function read(ref) {\n        var prev = ref.minHeight;\n\n        if (!isVisible(this.$el)) {\n          return false;\n        }\n\n        var minHeight = '';\n        var box = boxModelAdjust(this.$el, 'height', 'content-box');\n\n        if (this.expand) {\n          this.$el.dataset.heightExpand = '';\n\n          if ($('[data-height-expand]') !== this.$el) {\n            return false;\n          }\n\n          minHeight = height(window) - (dimensions(document.documentElement).height - dimensions(this.$el).height) - box || '';\n        } else {\n          // on mobile devices (iOS and Android) window.innerHeight !== 100vh\n          minHeight = 'calc(100vh';\n\n          if (this.offsetTop) {\n            var ref$1 = offset(this.$el);\n            var top = ref$1.top;\n            minHeight += top > 0 && top < height(window) / 2 ? \" - \" + top + \"px\" : '';\n          }\n\n          if (this.offsetBottom === true) {\n            minHeight += \" - \" + dimensions(this.$el.nextElementSibling).height + \"px\";\n          } else if (isNumeric(this.offsetBottom)) {\n            minHeight += \" - \" + this.offsetBottom + \"vh\";\n          } else if (this.offsetBottom && endsWith(this.offsetBottom, 'px')) {\n            minHeight += \" - \" + toFloat(this.offsetBottom) + \"px\";\n          } else if (isString(this.offsetBottom)) {\n            minHeight += \" - \" + dimensions(query(this.offsetBottom, this.$el)).height + \"px\";\n          }\n\n          minHeight += (box ? \" - \" + box + \"px\" : '') + \")\";\n        }\n\n        return {\n          minHeight: minHeight,\n          prev: prev\n        };\n      },\n      write: function write(ref) {\n        var minHeight = ref.minHeight;\n        var prev = ref.prev;\n        css(this.$el, {\n          minHeight: minHeight\n        });\n\n        if (minHeight !== prev) {\n          this.$update(this.$el, 'resize');\n        }\n\n        if (this.minHeight && toFloat(css(this.$el, 'minHeight')) < this.minHeight) {\n          css(this.$el, 'minHeight', this.minHeight);\n        }\n      },\n      events: ['resize']\n    }\n  };\n  var SVG = {\n    args: 'src',\n    props: {\n      id: Boolean,\n      icon: String,\n      src: String,\n      style: String,\n      width: Number,\n      height: Number,\n      ratio: Number,\n      \"class\": String,\n      strokeAnimation: Boolean,\n      focusable: Boolean,\n      // IE 11\n      attributes: 'list'\n    },\n    data: {\n      ratio: 1,\n      include: ['style', 'class', 'focusable'],\n      \"class\": '',\n      strokeAnimation: false\n    },\n    beforeConnect: function beforeConnect() {\n      this[\"class\"] += ' uk-svg';\n    },\n    connected: function connected() {\n      var this$1 = this;\n      var assign;\n\n      if (!this.icon && includes(this.src, '#')) {\n        assign = this.src.split('#'), this.src = assign[0], this.icon = assign[1];\n      }\n\n      this.svg = this.getSvg().then(function (el) {\n        this$1.applyAttributes(el);\n        return this$1.svgEl = insertSVG(el, this$1.$el);\n      }, noop);\n    },\n    disconnected: function disconnected() {\n      var this$1 = this;\n\n      if (isVoidElement(this.$el)) {\n        this.$el.hidden = false;\n      }\n\n      if (this.svg) {\n        this.svg.then(function (svg) {\n          return (!this$1._connected || svg !== this$1.svgEl) && _remove(svg);\n        }, noop);\n      }\n\n      this.svg = this.svgEl = null;\n    },\n    update: {\n      read: function read() {\n        return !!(this.strokeAnimation && this.svgEl && isVisible(this.svgEl));\n      },\n      write: function write() {\n        applyAnimation(this.svgEl);\n      },\n      type: ['resize']\n    },\n    methods: {\n      getSvg: function getSvg() {\n        var this$1 = this;\n        return loadSVG(this.src).then(function (svg) {\n          return parseSVG(svg, this$1.icon) || Promise.reject('SVG not found.');\n        });\n      },\n      applyAttributes: function applyAttributes(el) {\n        var this$1 = this;\n\n        for (var prop in this.$options.props) {\n          if (this[prop] && includes(this.include, prop)) {\n            attr(el, prop, this[prop]);\n          }\n        }\n\n        for (var attribute in this.attributes) {\n          var ref = this.attributes[attribute].split(':', 2);\n          var prop$1 = ref[0];\n          var value = ref[1];\n          attr(el, prop$1, value);\n        }\n\n        if (!this.id) {\n          removeAttr(el, 'id');\n        }\n\n        var props = ['width', 'height'];\n        var dimensions = [this.width, this.height];\n\n        if (!dimensions.some(function (val) {\n          return val;\n        })) {\n          dimensions = props.map(function (prop) {\n            return attr(el, prop);\n          });\n        }\n\n        var viewBox = attr(el, 'viewBox');\n\n        if (viewBox && !dimensions.some(function (val) {\n          return val;\n        })) {\n          dimensions = viewBox.split(' ').slice(2);\n        }\n\n        dimensions.forEach(function (val, i) {\n          val = (val | 0) * this$1.ratio;\n          val && attr(el, props[i], val);\n\n          if (val && !dimensions[i ^ 1]) {\n            removeAttr(el, props[i ^ 1]);\n          }\n        });\n        attr(el, 'data-svg', this.icon || this.src);\n      }\n    }\n  };\n  var svgs = {};\n\n  function loadSVG(src) {\n    if (svgs[src]) {\n      return svgs[src];\n    }\n\n    return svgs[src] = new Promise(function (resolve, reject) {\n      if (!src) {\n        reject();\n        return;\n      }\n\n      if (startsWith(src, 'data:')) {\n        resolve(decodeURIComponent(src.split(',')[1]));\n      } else {\n        ajax(src).then(function (xhr) {\n          return resolve(xhr.response);\n        }, function () {\n          return reject('SVG not found.');\n        });\n      }\n    });\n  }\n\n  function parseSVG(svg, icon) {\n    if (icon && includes(svg, '<symbol')) {\n      svg = parseSymbols(svg, icon) || svg;\n    }\n\n    svg = $(svg.substr(svg.indexOf('<svg')));\n    return svg && svg.hasChildNodes() && svg;\n  }\n\n  var symbolRe = /<symbol([^]*?id=(['\"])(.+?)\\2[^]*?<\\/)symbol>/g;\n  var symbols = {};\n\n  function parseSymbols(svg, icon) {\n    if (!symbols[svg]) {\n      symbols[svg] = {};\n      symbolRe.lastIndex = 0;\n      var match;\n\n      while (match = symbolRe.exec(svg)) {\n        symbols[svg][match[3]] = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + match[1] + \"svg>\";\n      }\n    }\n\n    return symbols[svg][icon];\n  }\n\n  function applyAnimation(el) {\n    var length = getMaxPathLength(el);\n\n    if (length) {\n      el.style.setProperty('--uk-animation-stroke', length);\n    }\n  }\n\n  function getMaxPathLength(el) {\n    return Math.ceil(Math.max.apply(Math, [0].concat($$('[stroke]', el).map(function (stroke) {\n      try {\n        return stroke.getTotalLength();\n      } catch (e) {\n        return 0;\n      }\n    }))));\n  }\n\n  function insertSVG(el, root) {\n    if (isVoidElement(root) || root.tagName === 'CANVAS') {\n      root.hidden = true;\n      var next = root.nextElementSibling;\n      return equals(el, next) ? next : after(root, el);\n    }\n\n    var last = root.lastElementChild;\n    return equals(el, last) ? last : append(root, el);\n  }\n\n  function equals(el, other) {\n    return attr(el, 'data-svg') === attr(other, 'data-svg');\n  }\n\n  var closeIcon = \"<svg width=\\\"14\\\" height=\\\"14\\\" viewBox=\\\"0 0 14 14\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"13\\\" y2=\\\"13\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"13\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"13\\\"/></svg>\";\n  var closeLarge = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"19\\\" y2=\\\"19\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" x1=\\\"19\\\" y1=\\\"1\\\" x2=\\\"1\\\" y2=\\\"19\\\"/></svg>\";\n  var marker = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"9\\\" y=\\\"4\\\" width=\\\"1\\\" height=\\\"11\\\"/><rect x=\\\"4\\\" y=\\\"9\\\" width=\\\"11\\\" height=\\\"1\\\"/></svg>\";\n  var navbarToggleIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect y=\\\"9\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"3\\\" width=\\\"20\\\" height=\\\"2\\\"/><rect y=\\\"15\\\" width=\\\"20\\\" height=\\\"2\\\"/></svg>\";\n  var overlayIcon = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><rect x=\\\"19\\\" y=\\\"0\\\" width=\\\"1\\\" height=\\\"40\\\"/><rect x=\\\"0\\\" y=\\\"19\\\" width=\\\"40\\\" height=\\\"1\\\"/></svg>\";\n  var paginationNext = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 1 6 6 1 11\\\"/></svg>\";\n  var paginationPrevious = \"<svg width=\\\"7\\\" height=\\\"12\\\" viewBox=\\\"0 0 7 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"6 1 1 6 6 11\\\"/></svg>\";\n  var searchIcon = \"<svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"9\\\" cy=\\\"9\\\" r=\\\"7\\\"/><path fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" d=\\\"M14,14 L18,18 L14,14 Z\\\"/></svg>\";\n  var searchLarge = \"<svg width=\\\"40\\\" height=\\\"40\\\" viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" cx=\\\"17.5\\\" cy=\\\"17.5\\\" r=\\\"16.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.8\\\" x1=\\\"38\\\" y1=\\\"39\\\" x2=\\\"29\\\" y2=\\\"30\\\"/></svg>\";\n  var searchNavbar = \"<svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"9.5\\\"/><line fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.1\\\" x1=\\\"23\\\" y1=\\\"23\\\" x2=\\\"17\\\" y2=\\\"17\\\"/></svg>\";\n  var slidenavNext = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"1.225,23 12.775,12 1.225,1 \\\"/></svg>\";\n  var slidenavNextLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"4.002,38.547 22.527,20.024 4,1.5 \\\"/></svg>\";\n  var slidenavPrevious = \"<svg width=\\\"14px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 14 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.4\\\" points=\\\"12.775,1 1.225,12 12.775,23 \\\"/></svg>\";\n  var slidenavPreviousLarge = \"<svg width=\\\"25px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 25 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"2\\\" points=\\\"20.527,1.5 2,20.024 20.525,38.547 \\\"/></svg>\";\n  var spinner = \"<svg width=\\\"30\\\" height=\\\"30\\\" viewBox=\\\"0 0 30 30\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><circle fill=\\\"none\\\" stroke=\\\"#000\\\" cx=\\\"15\\\" cy=\\\"15\\\" r=\\\"14\\\"/></svg>\";\n  var totop = \"<svg width=\\\"18\\\" height=\\\"10\\\" viewBox=\\\"0 0 18 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><polyline fill=\\\"none\\\" stroke=\\\"#000\\\" stroke-width=\\\"1.2\\\" points=\\\"1 9 9 1 17 9 \\\"/></svg>\";\n  var icons = {\n    spinner: spinner,\n    totop: totop,\n    marker: marker,\n    'close-icon': closeIcon,\n    'close-large': closeLarge,\n    'navbar-toggle-icon': navbarToggleIcon,\n    'overlay-icon': overlayIcon,\n    'pagination-next': paginationNext,\n    'pagination-previous': paginationPrevious,\n    'search-icon': searchIcon,\n    'search-large': searchLarge,\n    'search-navbar': searchNavbar,\n    'slidenav-next': slidenavNext,\n    'slidenav-next-large': slidenavNextLarge,\n    'slidenav-previous': slidenavPrevious,\n    'slidenav-previous-large': slidenavPreviousLarge\n  };\n  var Icon = {\n    install: install,\n    \"extends\": SVG,\n    args: 'icon',\n    props: ['icon'],\n    data: {\n      include: ['focusable']\n    },\n    isIcon: true,\n    beforeConnect: function beforeConnect() {\n      addClass(this.$el, 'uk-icon');\n    },\n    methods: {\n      getSvg: function getSvg() {\n        var icon = getIcon(this.icon);\n\n        if (!icon) {\n          return Promise.reject('Icon not found.');\n        }\n\n        return Promise.resolve(icon);\n      }\n    }\n  };\n  var IconComponent = {\n    args: false,\n    \"extends\": Icon,\n    data: function data(vm) {\n      return {\n        icon: hyphenate(vm.constructor.options.name)\n      };\n    },\n    beforeConnect: function beforeConnect() {\n      addClass(this.$el, this.$name);\n    }\n  };\n  var Slidenav = {\n    \"extends\": IconComponent,\n    beforeConnect: function beforeConnect() {\n      addClass(this.$el, 'uk-slidenav');\n    },\n    computed: {\n      icon: function icon(ref, $el) {\n        var icon = ref.icon;\n        return hasClass($el, 'uk-slidenav-large') ? icon + \"-large\" : icon;\n      }\n    }\n  };\n  var Search = {\n    \"extends\": IconComponent,\n    computed: {\n      icon: function icon(ref, $el) {\n        var icon = ref.icon;\n        return hasClass($el, 'uk-search-icon') && parents($el, '.uk-search-large').length ? 'search-large' : parents($el, '.uk-search-navbar').length ? 'search-navbar' : icon;\n      }\n    }\n  };\n  var Close = {\n    \"extends\": IconComponent,\n    computed: {\n      icon: function icon() {\n        return \"close-\" + (hasClass(this.$el, 'uk-close-large') ? 'large' : 'icon');\n      }\n    }\n  };\n  var Spinner = {\n    \"extends\": IconComponent,\n    connected: function connected() {\n      var this$1 = this;\n      this.svg.then(function (svg) {\n        return this$1.ratio !== 1 && css($('circle', svg), 'strokeWidth', 1 / this$1.ratio);\n      }, noop);\n    }\n  };\n  var parsed = {};\n\n  function install(UIkit) {\n    UIkit.icon.add = function (name, svg) {\n      var obj;\n      var added = isString(name) ? (obj = {}, obj[name] = svg, obj) : name;\n      each(added, function (svg, name) {\n        icons[name] = svg;\n        delete parsed[name];\n      });\n\n      if (UIkit._initialized) {\n        apply(document.body, function (el) {\n          return each(UIkit.getComponents(el), function (cmp) {\n            cmp.$options.isIcon && cmp.icon in added && cmp.$reset();\n          });\n        });\n      }\n    };\n  }\n\n  function getIcon(icon) {\n    if (!icons[icon]) {\n      return null;\n    }\n\n    if (!parsed[icon]) {\n      parsed[icon] = $((icons[applyRtl(icon)] || icons[icon]).trim());\n    }\n\n    return parsed[icon].cloneNode(true);\n  }\n\n  function applyRtl(icon) {\n    return isRtl ? swap(swap(icon, 'left', 'right'), 'previous', 'next') : icon;\n  }\n\n  var img = {\n    args: 'dataSrc',\n    props: {\n      dataSrc: String,\n      dataSrcset: Boolean,\n      sizes: String,\n      width: Number,\n      height: Number,\n      offsetTop: String,\n      offsetLeft: String,\n      target: String\n    },\n    data: {\n      dataSrc: '',\n      dataSrcset: false,\n      sizes: false,\n      width: false,\n      height: false,\n      offsetTop: '50vh',\n      offsetLeft: '50vw',\n      target: false\n    },\n    computed: {\n      cacheKey: function cacheKey(ref) {\n        var dataSrc = ref.dataSrc;\n        return this.$name + \".\" + dataSrc;\n      },\n      width: function width(ref) {\n        var width = ref.width;\n        var dataWidth = ref.dataWidth;\n        return width || dataWidth;\n      },\n      height: function height(ref) {\n        var height = ref.height;\n        var dataHeight = ref.dataHeight;\n        return height || dataHeight;\n      },\n      sizes: function sizes(ref) {\n        var sizes = ref.sizes;\n        var dataSizes = ref.dataSizes;\n        return sizes || dataSizes;\n      },\n      isImg: function isImg(_, $el) {\n        return _isImg($el);\n      },\n      target: {\n        get: function get(ref) {\n          var target = ref.target;\n          return [this.$el].concat(queryAll(target, this.$el));\n        },\n        watch: function watch() {\n          this.observe();\n        }\n      },\n      offsetTop: function offsetTop(ref) {\n        var offsetTop = ref.offsetTop;\n        return toPx(offsetTop, 'height');\n      },\n      offsetLeft: function offsetLeft(ref) {\n        var offsetLeft = ref.offsetLeft;\n        return toPx(offsetLeft, 'width');\n      }\n    },\n    connected: function connected() {\n      if (!window.IntersectionObserver) {\n        setSrcAttrs(this.$el, this.dataSrc, this.dataSrcset, this.sizes);\n        return;\n      }\n\n      if (storage[this.cacheKey]) {\n        setSrcAttrs(this.$el, storage[this.cacheKey], this.dataSrcset, this.sizes);\n      } else if (this.isImg && this.width && this.height) {\n        setSrcAttrs(this.$el, getPlaceholderImage(this.width, this.height, this.sizes));\n      }\n\n      this.observer = new IntersectionObserver(this.load, {\n        rootMargin: this.offsetTop + \"px \" + this.offsetLeft + \"px\"\n      });\n      requestAnimationFrame(this.observe);\n    },\n    disconnected: function disconnected() {\n      this.observer && this.observer.disconnect();\n    },\n    update: {\n      read: function read(ref) {\n        var this$1 = this;\n        var image = ref.image;\n\n        if (!this.observer) {\n          return false;\n        }\n\n        if (!image && document.readyState === 'complete') {\n          this.load(this.observer.takeRecords());\n        }\n\n        if (this.isImg) {\n          return false;\n        }\n\n        image && image.then(function (img) {\n          return img && img.currentSrc !== '' && setSrcAttrs(this$1.$el, currentSrc(img));\n        });\n      },\n      write: function write(data) {\n        if (this.dataSrcset && window.devicePixelRatio !== 1) {\n          var bgSize = css(this.$el, 'backgroundSize');\n\n          if (bgSize.match(/^(auto\\s?)+$/) || toFloat(bgSize) === data.bgSize) {\n            data.bgSize = getSourceSize(this.dataSrcset, this.sizes);\n            css(this.$el, 'backgroundSize', data.bgSize + \"px\");\n          }\n        }\n      },\n      events: ['resize']\n    },\n    methods: {\n      load: function load(entries) {\n        var this$1 = this; // Old chromium based browsers (UC Browser) did not implement `isIntersecting`\n\n        if (!entries.some(function (entry) {\n          return isUndefined(entry.isIntersecting) || entry.isIntersecting;\n        })) {\n          return;\n        }\n\n        this._data.image = getImage(this.dataSrc, this.dataSrcset, this.sizes).then(function (img) {\n          setSrcAttrs(this$1.$el, currentSrc(img), img.srcset, img.sizes);\n          storage[this$1.cacheKey] = currentSrc(img);\n          return img;\n        }, function (e) {\n          return trigger(this$1.$el, new e.constructor(e.type, e));\n        });\n        this.observer.disconnect();\n      },\n      observe: function observe() {\n        var this$1 = this;\n\n        if (this._connected && !this._data.image) {\n          this.target.forEach(function (el) {\n            return this$1.observer.observe(el);\n          });\n        }\n      }\n    }\n  };\n\n  function setSrcAttrs(el, src, srcset, sizes) {\n    if (_isImg(el)) {\n      sizes && (el.sizes = sizes);\n      srcset && (el.srcset = srcset);\n      src && (el.src = src);\n    } else if (src) {\n      var change = !includes(el.style.backgroundImage, src);\n\n      if (change) {\n        css(el, 'backgroundImage', \"url(\" + escape(src) + \")\");\n        trigger(el, createEvent('load', false));\n      }\n    }\n  }\n\n  function getPlaceholderImage(width, height, sizes) {\n    var assign;\n\n    if (sizes) {\n      assign = Dimensions.ratio({\n        width: width,\n        height: height\n      }, 'width', toPx(sizesToPixel(sizes))), width = assign.width, height = assign.height;\n    }\n\n    return \"data:image/svg+xml;utf8,<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\" + width + \"\\\" height=\\\"\" + height + \"\\\"></svg>\";\n  }\n\n  var sizesRe = /\\s*(.*?)\\s*(\\w+|calc\\(.*?\\))\\s*(?:,|$)/g;\n\n  function sizesToPixel(sizes) {\n    var matches;\n    sizesRe.lastIndex = 0;\n\n    while (matches = sizesRe.exec(sizes)) {\n      if (!matches[1] || window.matchMedia(matches[1]).matches) {\n        matches = evaluateSize(matches[2]);\n        break;\n      }\n    }\n\n    return matches || '100vw';\n  }\n\n  var sizeRe = /\\d+(?:\\w+|%)/g;\n  var additionRe = /[+-]?(\\d+)/g;\n\n  function evaluateSize(size) {\n    return startsWith(size, 'calc') ? size.slice(5, -1).replace(sizeRe, function (size) {\n      return toPx(size);\n    }).replace(/ /g, '').match(additionRe).reduce(function (a, b) {\n      return a + +b;\n    }, 0) : size;\n  }\n\n  var srcSetRe = /\\s+\\d+w\\s*(?:,|$)/g;\n\n  function getSourceSize(srcset, sizes) {\n    var srcSize = toPx(sizesToPixel(sizes));\n    var descriptors = (srcset.match(srcSetRe) || []).map(toFloat).sort(function (a, b) {\n      return a - b;\n    });\n    return descriptors.filter(function (size) {\n      return size >= srcSize;\n    })[0] || descriptors.pop() || '';\n  }\n\n  function _isImg(el) {\n    return el.tagName === 'IMG';\n  }\n\n  function currentSrc(el) {\n    return el.currentSrc || el.src;\n  }\n\n  var key = '__test__';\n  var storage; // workaround for Safari's private browsing mode and accessing sessionStorage in Blink\n\n  try {\n    storage = window.sessionStorage || {};\n    storage[key] = 1;\n    delete storage[key];\n  } catch (e) {\n    storage = {};\n  }\n\n  var Media = {\n    props: {\n      media: Boolean\n    },\n    data: {\n      media: false\n    },\n    computed: {\n      matchMedia: function matchMedia() {\n        var media = toMedia(this.media);\n        return !media || window.matchMedia(media).matches;\n      }\n    }\n  };\n\n  function toMedia(value) {\n    if (isString(value)) {\n      if (value[0] === '@') {\n        var name = \"breakpoint-\" + value.substr(1);\n        value = toFloat(getCssVar(name));\n      } else if (isNaN(value)) {\n        return value;\n      }\n    }\n\n    return value && !isNaN(value) ? \"(min-width: \" + value + \"px)\" : false;\n  }\n\n  var leader = {\n    mixins: [Class, Media],\n    props: {\n      fill: String\n    },\n    data: {\n      fill: '',\n      clsWrapper: 'uk-leader-fill',\n      clsHide: 'uk-leader-hide',\n      attrFill: 'data-fill'\n    },\n    computed: {\n      fill: function fill(ref) {\n        var fill = ref.fill;\n        return fill || getCssVar('leader-fill-content');\n      }\n    },\n    connected: function connected() {\n      var assign;\n      assign = wrapInner(this.$el, \"<span class=\\\"\" + this.clsWrapper + \"\\\">\"), this.wrapper = assign[0];\n    },\n    disconnected: function disconnected() {\n      unwrap(this.wrapper.childNodes);\n    },\n    update: {\n      read: function read(ref) {\n        var changed = ref.changed;\n        var width = ref.width;\n        var prev = width;\n        width = Math.floor(this.$el.offsetWidth / 2);\n        return {\n          width: width,\n          fill: this.fill,\n          changed: changed || prev !== width,\n          hide: !this.matchMedia\n        };\n      },\n      write: function write(data) {\n        toggleClass(this.wrapper, this.clsHide, data.hide);\n\n        if (data.changed) {\n          data.changed = false;\n          attr(this.wrapper, this.attrFill, new Array(data.width).join(data.fill));\n        }\n      },\n      events: ['resize']\n    }\n  };\n  var Container = {\n    props: {\n      container: Boolean\n    },\n    data: {\n      container: true\n    },\n    computed: {\n      container: function container(ref) {\n        var container = ref.container;\n        return container === true && this.$container || container && $(container);\n      }\n    }\n  };\n  var active$1 = [];\n  var Modal = {\n    mixins: [Class, Container, Togglable],\n    props: {\n      selPanel: String,\n      selClose: String,\n      escClose: Boolean,\n      bgClose: Boolean,\n      stack: Boolean\n    },\n    data: {\n      cls: 'uk-open',\n      escClose: true,\n      bgClose: true,\n      overlay: true,\n      stack: false\n    },\n    computed: {\n      panel: function panel(ref, $el) {\n        var selPanel = ref.selPanel;\n        return $(selPanel, $el);\n      },\n      transitionElement: function transitionElement() {\n        return this.panel;\n      },\n      bgClose: function bgClose(ref) {\n        var bgClose = ref.bgClose;\n        return bgClose && this.panel;\n      }\n    },\n    beforeDisconnect: function beforeDisconnect() {\n      if (this.isToggled()) {\n        this.toggleElement(this.$el, false, false);\n      }\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return this.selClose;\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.hide();\n      }\n    }, {\n      name: 'toggle',\n      self: true,\n      handler: function handler(e) {\n        if (e.defaultPrevented) {\n          return;\n        }\n\n        e.preventDefault();\n\n        if (this.isToggled() === includes(active$1, this)) {\n          this.toggle();\n        }\n      }\n    }, {\n      name: 'beforeshow',\n      self: true,\n      handler: function handler(e) {\n        if (includes(active$1, this)) {\n          return false;\n        }\n\n        if (!this.stack && active$1.length) {\n          Promise.all(active$1.map(function (modal) {\n            return modal.hide();\n          })).then(this.show);\n          e.preventDefault();\n        } else {\n          active$1.push(this);\n        }\n      }\n    }, {\n      name: 'show',\n      self: true,\n      handler: function handler() {\n        var this$1 = this;\n\n        if (width(window) - width(document) && this.overlay) {\n          css(document.body, 'overflowY', 'scroll');\n        }\n\n        if (this.stack) {\n          css(this.$el, 'zIndex', toFloat(css(this.$el, 'zIndex')) + active$1.length);\n        }\n\n        addClass(document.documentElement, this.clsPage);\n\n        if (this.bgClose) {\n          once(this.$el, 'hide', on(document, pointerDown, function (ref) {\n            var target = ref.target;\n\n            if (last(active$1) !== this$1 || this$1.overlay && !within(target, this$1.$el) || within(target, this$1.panel)) {\n              return;\n            }\n\n            once(document, pointerUp + \" \" + pointerCancel + \" scroll\", function (ref) {\n              var defaultPrevented = ref.defaultPrevented;\n              var type = ref.type;\n              var newTarget = ref.target;\n\n              if (!defaultPrevented && type === pointerUp && target === newTarget) {\n                this$1.hide();\n              }\n            }, true);\n          }), {\n            self: true\n          });\n        }\n\n        if (this.escClose) {\n          once(this.$el, 'hide', on(document, 'keydown', function (e) {\n            if (e.keyCode === 27 && last(active$1) === this$1) {\n              this$1.hide();\n            }\n          }), {\n            self: true\n          });\n        }\n      }\n    }, {\n      name: 'hidden',\n      self: true,\n      handler: function handler() {\n        var this$1 = this;\n        active$1.splice(active$1.indexOf(this), 1);\n\n        if (!active$1.length) {\n          css(document.body, 'overflowY', '');\n        }\n\n        css(this.$el, 'zIndex', '');\n\n        if (!active$1.some(function (modal) {\n          return modal.clsPage === this$1.clsPage;\n        })) {\n          removeClass(document.documentElement, this.clsPage);\n        }\n      }\n    }],\n    methods: {\n      toggle: function toggle() {\n        return this.isToggled() ? this.hide() : this.show();\n      },\n      show: function show() {\n        var this$1 = this;\n\n        if (this.container && parent(this.$el) !== this.container) {\n          append(this.container, this.$el);\n          return new Promise(function (resolve) {\n            return requestAnimationFrame(function () {\n              return this$1.show().then(resolve);\n            });\n          });\n        }\n\n        return this.toggleElement(this.$el, true, animate$1(this));\n      },\n      hide: function hide() {\n        return this.toggleElement(this.$el, false, animate$1(this));\n      }\n    }\n  };\n\n  function animate$1(ref) {\n    var transitionElement = ref.transitionElement;\n    var _toggle = ref._toggle;\n    return function (el, show) {\n      return new Promise(function (resolve, reject) {\n        return once(el, 'show hide', function () {\n          el._reject && el._reject();\n          el._reject = reject;\n\n          _toggle(el, show);\n\n          var off = once(transitionElement, 'transitionstart', function () {\n            once(transitionElement, 'transitionend transitioncancel', resolve, {\n              self: true\n            });\n            clearTimeout(timer);\n          }, {\n            self: true\n          });\n          var timer = setTimeout(function () {\n            off();\n            resolve();\n          }, toMs(css(transitionElement, 'transitionDuration')));\n        });\n      }).then(function () {\n        return delete el._reject;\n      });\n    };\n  }\n\n  var modal = {\n    install: install$1,\n    mixins: [Modal],\n    data: {\n      clsPage: 'uk-modal-page',\n      selPanel: '.uk-modal-dialog',\n      selClose: '.uk-modal-close, .uk-modal-close-default, .uk-modal-close-outside, .uk-modal-close-full'\n    },\n    events: [{\n      name: 'show',\n      self: true,\n      handler: function handler() {\n        if (hasClass(this.panel, 'uk-margin-auto-vertical')) {\n          addClass(this.$el, 'uk-flex');\n        } else {\n          css(this.$el, 'display', 'block');\n        }\n\n        height(this.$el); // force reflow\n      }\n    }, {\n      name: 'hidden',\n      self: true,\n      handler: function handler() {\n        css(this.$el, 'display', '');\n        removeClass(this.$el, 'uk-flex');\n      }\n    }]\n  };\n\n  function install$1(ref) {\n    var modal = ref.modal;\n\n    modal.dialog = function (content, options) {\n      var dialog = modal(\"<div class=\\\"uk-modal\\\"> <div class=\\\"uk-modal-dialog\\\">\" + content + \"</div> </div>\", options);\n      dialog.show();\n      on(dialog.$el, 'hidden', function () {\n        return Promise.resolve().then(function () {\n          return dialog.$destroy(true);\n        });\n      }, {\n        self: true\n      });\n      return dialog;\n    };\n\n    modal.alert = function (message, options) {\n      return openDialog(function (ref) {\n        var labels = ref.labels;\n        return \"<div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-primary uk-modal-close\\\" autofocus>\" + labels.ok + \"</button> </div>\";\n      }, options, function (deferred) {\n        return deferred.resolve();\n      });\n    };\n\n    modal.confirm = function (message, options) {\n      return openDialog(function (ref) {\n        var labels = ref.labels;\n        return \"<form> <div class=\\\"uk-modal-body\\\">\" + (isString(message) ? message : html(message)) + \"</div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + labels.cancel + \"</button> <button class=\\\"uk-button uk-button-primary\\\" autofocus>\" + labels.ok + \"</button> </div> </form>\";\n      }, options, function (deferred) {\n        return deferred.reject();\n      });\n    };\n\n    modal.prompt = function (message, value, options) {\n      return openDialog(function (ref) {\n        var labels = ref.labels;\n        return \"<form class=\\\"uk-form-stacked\\\"> <div class=\\\"uk-modal-body\\\"> <label>\" + (isString(message) ? message : html(message)) + \"</label> <input class=\\\"uk-input\\\" value=\\\"\" + (value || '') + \"\\\" autofocus> </div> <div class=\\\"uk-modal-footer uk-text-right\\\"> <button class=\\\"uk-button uk-button-default uk-modal-close\\\" type=\\\"button\\\">\" + labels.cancel + \"</button> <button class=\\\"uk-button uk-button-primary\\\">\" + labels.ok + \"</button> </div> </form>\";\n      }, options, function (deferred) {\n        return deferred.resolve(null);\n      }, function (dialog) {\n        return $('input', dialog.$el).value;\n      });\n    };\n\n    modal.labels = {\n      ok: 'Ok',\n      cancel: 'Cancel'\n    };\n\n    function openDialog(tmpl, options, hideFn, submitFn) {\n      options = assign({\n        bgClose: false,\n        escClose: true,\n        labels: modal.labels\n      }, options);\n      var dialog = modal.dialog(tmpl(options), options);\n      var deferred = new Deferred();\n      var resolved = false;\n      on(dialog.$el, 'submit', 'form', function (e) {\n        e.preventDefault();\n        deferred.resolve(submitFn && submitFn(dialog));\n        resolved = true;\n        dialog.hide();\n      });\n      on(dialog.$el, 'hide', function () {\n        return !resolved && hideFn(deferred);\n      });\n      deferred.promise.dialog = dialog;\n      return deferred.promise;\n    }\n  }\n\n  var nav = {\n    \"extends\": Accordion,\n    data: {\n      targets: '> .uk-parent',\n      toggle: '> a',\n      content: '> ul'\n    }\n  };\n  var navbar = {\n    mixins: [Class, FlexBug],\n    props: {\n      dropdown: String,\n      mode: 'list',\n      align: String,\n      offset: Number,\n      boundary: Boolean,\n      boundaryAlign: Boolean,\n      clsDrop: String,\n      delayShow: Number,\n      delayHide: Number,\n      dropbar: Boolean,\n      dropbarMode: String,\n      dropbarAnchor: Boolean,\n      duration: Number\n    },\n    data: {\n      dropdown: '.uk-navbar-nav > li',\n      align: !isRtl ? 'left' : 'right',\n      clsDrop: 'uk-navbar-dropdown',\n      mode: undefined,\n      offset: undefined,\n      delayShow: undefined,\n      delayHide: undefined,\n      boundaryAlign: undefined,\n      flip: 'x',\n      boundary: true,\n      dropbar: false,\n      dropbarMode: 'slide',\n      dropbarAnchor: false,\n      duration: 200,\n      forceHeight: true,\n      selMinHeight: '.uk-navbar-nav > li > a, .uk-navbar-item, .uk-navbar-toggle'\n    },\n    computed: {\n      boundary: function boundary(ref, $el) {\n        var boundary = ref.boundary;\n        var boundaryAlign = ref.boundaryAlign;\n        return boundary === true || boundaryAlign ? $el : boundary;\n      },\n      dropbarAnchor: function dropbarAnchor(ref, $el) {\n        var dropbarAnchor = ref.dropbarAnchor;\n        return query(dropbarAnchor, $el);\n      },\n      pos: function pos(ref) {\n        var align = ref.align;\n        return \"bottom-\" + align;\n      },\n      dropbar: {\n        get: function get(ref) {\n          var dropbar = ref.dropbar;\n\n          if (!dropbar) {\n            return null;\n          }\n\n          dropbar = this._dropbar || query(dropbar, this.$el) || $('+ .uk-navbar-dropbar', this.$el);\n          return dropbar ? dropbar : this._dropbar = $('<div></div>');\n        },\n        watch: function watch(dropbar) {\n          addClass(dropbar, 'uk-navbar-dropbar');\n        },\n        immediate: true\n      },\n      dropdowns: {\n        get: function get(ref, $el) {\n          var dropdown = ref.dropdown;\n          var clsDrop = ref.clsDrop;\n          return $$(dropdown + \" .\" + clsDrop, $el);\n        },\n        watch: function watch(dropdowns) {\n          var this$1 = this;\n          this.$create('drop', dropdowns.filter(function (el) {\n            return !this$1.getDropdown(el);\n          }), assign({}, this.$props, {\n            boundary: this.boundary,\n            pos: this.pos,\n            offset: this.dropbar || this.offset\n          }));\n        },\n        immediate: true\n      }\n    },\n    disconnected: function disconnected() {\n      this.dropbar && _remove(this.dropbar);\n      delete this._dropbar;\n    },\n    events: [{\n      name: 'mouseover',\n      delegate: function delegate() {\n        return this.dropdown;\n      },\n      handler: function handler(ref) {\n        var current = ref.current;\n        var active = this.getActive();\n\n        if (active && active.toggle && !within(active.toggle.$el, current) && !active.tracker.movesTo(active.$el)) {\n          active.hide(false);\n        }\n      }\n    }, {\n      name: 'mouseleave',\n      el: function el() {\n        return this.dropbar;\n      },\n      handler: function handler() {\n        var active = this.getActive();\n\n        if (active && !this.dropdowns.some(function (el) {\n          return matches(el, ':hover');\n        })) {\n          active.hide();\n        }\n      }\n    }, {\n      name: 'beforeshow',\n      capture: true,\n      filter: function filter() {\n        return this.dropbar;\n      },\n      handler: function handler() {\n        if (!parent(this.dropbar)) {\n          after(this.dropbarAnchor || this.$el, this.dropbar);\n        }\n      }\n    }, {\n      name: 'show',\n      filter: function filter() {\n        return this.dropbar;\n      },\n      handler: function handler(_, ref) {\n        var $el = ref.$el;\n        var dir = ref.dir;\n\n        if (!hasClass($el, this.clsDrop)) {\n          return;\n        }\n\n        if (this.dropbarMode === 'slide') {\n          addClass(this.dropbar, 'uk-navbar-dropbar-slide');\n        }\n\n        this.clsDrop && addClass($el, this.clsDrop + \"-dropbar\");\n\n        if (dir === 'bottom') {\n          this.transitionTo($el.offsetHeight + toFloat(css($el, 'marginTop')) + toFloat(css($el, 'marginBottom')), $el);\n        }\n      }\n    }, {\n      name: 'beforehide',\n      filter: function filter() {\n        return this.dropbar;\n      },\n      handler: function handler(e, ref) {\n        var $el = ref.$el;\n        var active = this.getActive();\n\n        if (matches(this.dropbar, ':hover') && active && active.$el === $el) {\n          e.preventDefault();\n        }\n      }\n    }, {\n      name: 'hide',\n      filter: function filter() {\n        return this.dropbar;\n      },\n      handler: function handler(_, ref) {\n        var $el = ref.$el;\n\n        if (!hasClass($el, this.clsDrop)) {\n          return;\n        }\n\n        var active = this.getActive();\n\n        if (!active || active && active.$el === $el) {\n          this.transitionTo(0);\n        }\n      }\n    }],\n    methods: {\n      getActive: function getActive() {\n        var ref = this.dropdowns.map(this.getDropdown).filter(function (drop) {\n          return drop && drop.isActive();\n        });\n        var active = ref[0];\n        return active && includes(active.mode, 'hover') && within(active.toggle.$el, this.$el) && active;\n      },\n      transitionTo: function transitionTo(newHeight, el) {\n        var this$1 = this;\n        var ref = this;\n        var dropbar = ref.dropbar;\n        var oldHeight = isVisible(dropbar) ? height(dropbar) : 0;\n        el = oldHeight < newHeight && el;\n        css(el, 'clip', \"rect(0,\" + el.offsetWidth + \"px,\" + oldHeight + \"px,0)\");\n        height(dropbar, oldHeight);\n        Transition.cancel([el, dropbar]);\n        return Promise.all([Transition.start(dropbar, {\n          height: newHeight\n        }, this.duration), Transition.start(el, {\n          clip: \"rect(0,\" + el.offsetWidth + \"px,\" + newHeight + \"px,0)\"\n        }, this.duration)])[\"catch\"](noop).then(function () {\n          css(el, {\n            clip: ''\n          });\n          this$1.$update(dropbar);\n        });\n      },\n      getDropdown: function getDropdown(el) {\n        return this.$getComponent(el, 'drop') || this.$getComponent(el, 'dropdown');\n      }\n    }\n  };\n  var offcanvas = {\n    mixins: [Modal],\n    args: 'mode',\n    props: {\n      mode: String,\n      flip: Boolean,\n      overlay: Boolean\n    },\n    data: {\n      mode: 'slide',\n      flip: false,\n      overlay: false,\n      clsPage: 'uk-offcanvas-page',\n      clsContainer: 'uk-offcanvas-container',\n      selPanel: '.uk-offcanvas-bar',\n      clsFlip: 'uk-offcanvas-flip',\n      clsContainerAnimation: 'uk-offcanvas-container-animation',\n      clsSidebarAnimation: 'uk-offcanvas-bar-animation',\n      clsMode: 'uk-offcanvas',\n      clsOverlay: 'uk-offcanvas-overlay',\n      selClose: '.uk-offcanvas-close',\n      container: false\n    },\n    computed: {\n      clsFlip: function clsFlip(ref) {\n        var flip = ref.flip;\n        var clsFlip = ref.clsFlip;\n        return flip ? clsFlip : '';\n      },\n      clsOverlay: function clsOverlay(ref) {\n        var overlay = ref.overlay;\n        var clsOverlay = ref.clsOverlay;\n        return overlay ? clsOverlay : '';\n      },\n      clsMode: function clsMode(ref) {\n        var mode = ref.mode;\n        var clsMode = ref.clsMode;\n        return clsMode + \"-\" + mode;\n      },\n      clsSidebarAnimation: function clsSidebarAnimation(ref) {\n        var mode = ref.mode;\n        var clsSidebarAnimation = ref.clsSidebarAnimation;\n        return mode === 'none' || mode === 'reveal' ? '' : clsSidebarAnimation;\n      },\n      clsContainerAnimation: function clsContainerAnimation(ref) {\n        var mode = ref.mode;\n        var clsContainerAnimation = ref.clsContainerAnimation;\n        return mode !== 'push' && mode !== 'reveal' ? '' : clsContainerAnimation;\n      },\n      transitionElement: function transitionElement(ref) {\n        var mode = ref.mode;\n        return mode === 'reveal' ? parent(this.panel) : this.panel;\n      }\n    },\n    update: {\n      read: function read() {\n        if (this.isToggled() && !isVisible(this.$el)) {\n          this.hide();\n        }\n      },\n      events: ['resize']\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return 'a[href^=\"#\"]';\n      },\n      handler: function handler(ref) {\n        var hash = ref.current.hash;\n        var defaultPrevented = ref.defaultPrevented;\n\n        if (!defaultPrevented && hash && $(hash, document.body)) {\n          this.hide();\n        }\n      }\n    }, {\n      name: 'touchstart',\n      passive: true,\n      el: function el() {\n        return this.panel;\n      },\n      handler: function handler(ref) {\n        var targetTouches = ref.targetTouches;\n\n        if (targetTouches.length === 1) {\n          this.clientY = targetTouches[0].clientY;\n        }\n      }\n    }, {\n      name: 'touchmove',\n      self: true,\n      passive: false,\n      filter: function filter() {\n        return this.overlay;\n      },\n      handler: function handler(e) {\n        e.cancelable && e.preventDefault();\n      }\n    }, {\n      name: 'touchmove',\n      passive: false,\n      el: function el() {\n        return this.panel;\n      },\n      handler: function handler(e) {\n        if (e.targetTouches.length !== 1) {\n          return;\n        }\n\n        var clientY = event.targetTouches[0].clientY - this.clientY;\n        var ref = this.panel;\n        var scrollTop = ref.scrollTop;\n        var scrollHeight = ref.scrollHeight;\n        var clientHeight = ref.clientHeight;\n\n        if (clientHeight >= scrollHeight || scrollTop === 0 && clientY > 0 || scrollHeight - scrollTop <= clientHeight && clientY < 0) {\n          e.cancelable && e.preventDefault();\n        }\n      }\n    }, {\n      name: 'show',\n      self: true,\n      handler: function handler() {\n        if (this.mode === 'reveal' && !hasClass(parent(this.panel), this.clsMode)) {\n          wrapAll(this.panel, '<div>');\n          addClass(parent(this.panel), this.clsMode);\n        }\n\n        css(document.documentElement, 'overflowY', this.overlay ? 'hidden' : '');\n        addClass(document.body, this.clsContainer, this.clsFlip);\n        css(document.body, 'touch-action', 'pan-y pinch-zoom');\n        css(this.$el, 'display', 'block');\n        addClass(this.$el, this.clsOverlay);\n        addClass(this.panel, this.clsSidebarAnimation, this.mode !== 'reveal' ? this.clsMode : '');\n        height(document.body); // force reflow\n\n        addClass(document.body, this.clsContainerAnimation);\n        this.clsContainerAnimation && suppressUserScale();\n      }\n    }, {\n      name: 'hide',\n      self: true,\n      handler: function handler() {\n        removeClass(document.body, this.clsContainerAnimation);\n        css(document.body, 'touch-action', '');\n      }\n    }, {\n      name: 'hidden',\n      self: true,\n      handler: function handler() {\n        this.clsContainerAnimation && resumeUserScale();\n\n        if (this.mode === 'reveal') {\n          unwrap(this.panel);\n        }\n\n        removeClass(this.panel, this.clsSidebarAnimation, this.clsMode);\n        removeClass(this.$el, this.clsOverlay);\n        css(this.$el, 'display', '');\n        removeClass(document.body, this.clsContainer, this.clsFlip);\n        css(document.documentElement, 'overflowY', '');\n      }\n    }, {\n      name: 'swipeLeft swipeRight',\n      handler: function handler(e) {\n        if (this.isToggled() && endsWith(e.type, 'Left') ^ this.flip) {\n          this.hide();\n        }\n      }\n    }]\n  }; // Chrome in responsive mode zooms page upon opening offcanvas\n\n  function suppressUserScale() {\n    getViewport$1().content += ',user-scalable=0';\n  }\n\n  function resumeUserScale() {\n    var viewport = getViewport$1();\n    viewport.content = viewport.content.replace(/,user-scalable=0$/, '');\n  }\n\n  function getViewport$1() {\n    return $('meta[name=\"viewport\"]', document.head) || append(document.head, '<meta name=\"viewport\">');\n  }\n\n  var overflowAuto = {\n    mixins: [Class],\n    props: {\n      selContainer: String,\n      selContent: String\n    },\n    data: {\n      selContainer: '.uk-modal',\n      selContent: '.uk-modal-dialog'\n    },\n    computed: {\n      container: function container(ref, $el) {\n        var selContainer = ref.selContainer;\n        return closest($el, selContainer);\n      },\n      content: function content(ref, $el) {\n        var selContent = ref.selContent;\n        return closest($el, selContent);\n      }\n    },\n    connected: function connected() {\n      css(this.$el, 'minHeight', 150);\n    },\n    update: {\n      read: function read() {\n        if (!this.content || !this.container || !isVisible(this.$el)) {\n          return false;\n        }\n\n        return {\n          current: toFloat(css(this.$el, 'maxHeight')),\n          max: Math.max(150, height(this.container) - (dimensions(this.content).height - height(this.$el)))\n        };\n      },\n      write: function write(ref) {\n        var current = ref.current;\n        var max = ref.max;\n        css(this.$el, 'maxHeight', max);\n\n        if (Math.round(current) !== Math.round(max)) {\n          trigger(this.$el, 'resize');\n        }\n      },\n      events: ['resize']\n    }\n  };\n  var responsive = {\n    props: ['width', 'height'],\n    connected: function connected() {\n      addClass(this.$el, 'uk-responsive-width');\n    },\n    update: {\n      read: function read() {\n        return isVisible(this.$el) && this.width && this.height ? {\n          width: width(parent(this.$el)),\n          height: this.height\n        } : false;\n      },\n      write: function write(dim) {\n        height(this.$el, Dimensions.contain({\n          height: this.height,\n          width: this.width\n        }, dim).height);\n      },\n      events: ['resize']\n    }\n  };\n  var scroll = {\n    props: {\n      offset: Number\n    },\n    data: {\n      offset: 0\n    },\n    methods: {\n      scrollTo: function scrollTo(el) {\n        var this$1 = this;\n        el = el && $(el) || document.body;\n\n        if (trigger(this.$el, 'beforescroll', [this, el])) {\n          scrollIntoView(el, {\n            offset: this.offset\n          }).then(function () {\n            return trigger(this$1.$el, 'scrolled', [this$1, el]);\n          });\n        }\n      }\n    },\n    events: {\n      click: function click(e) {\n        if (e.defaultPrevented) {\n          return;\n        }\n\n        e.preventDefault();\n        this.scrollTo(\"#\" + escape(decodeURIComponent(this.$el.hash.substr(1))));\n      }\n    }\n  };\n  var stateKey$1 = '_ukScrollspy';\n  var scrollspy = {\n    args: 'cls',\n    props: {\n      cls: String,\n      target: String,\n      hidden: Boolean,\n      offsetTop: Number,\n      offsetLeft: Number,\n      repeat: Boolean,\n      delay: Number\n    },\n    data: function data() {\n      return {\n        cls: false,\n        target: false,\n        hidden: true,\n        offsetTop: 0,\n        offsetLeft: 0,\n        repeat: false,\n        delay: 0,\n        inViewClass: 'uk-scrollspy-inview'\n      };\n    },\n    computed: {\n      elements: {\n        get: function get(ref, $el) {\n          var target = ref.target;\n          return target ? $$(target, $el) : [$el];\n        },\n        watch: function watch(elements) {\n          if (this.hidden) {\n            css(filter(elements, \":not(.\" + this.inViewClass + \")\"), 'visibility', 'hidden');\n          }\n        },\n        immediate: true\n      }\n    },\n    disconnected: function disconnected() {\n      var this$1 = this;\n      this.elements.forEach(function (el) {\n        removeClass(el, this$1.inViewClass, el[stateKey$1] ? el[stateKey$1].cls : '');\n        delete el[stateKey$1];\n      });\n    },\n    update: [{\n      read: function read(ref) {\n        var this$1 = this;\n        var update = ref.update;\n\n        if (!update) {\n          return;\n        }\n\n        this.elements.forEach(function (el) {\n          if (!el[stateKey$1]) {\n            el[stateKey$1] = {\n              cls: data(el, 'uk-scrollspy-class') || this$1.cls\n            };\n          }\n\n          el[stateKey$1].show = isInView(el, this$1.offsetTop, this$1.offsetLeft);\n        });\n      },\n      write: function write(data) {\n        var this$1 = this; // Let child components be applied at least once first\n\n        if (!data.update) {\n          this.$emit();\n          return data.update = true;\n        }\n\n        this.elements.forEach(function (el) {\n          var state = el[stateKey$1];\n\n          var toggle = function toggle(inview) {\n            css(el, 'visibility', !inview && this$1.hidden ? 'hidden' : '');\n            toggleClass(el, this$1.inViewClass, inview);\n            toggleClass(el, state.cls);\n            trigger(el, inview ? 'inview' : 'outview');\n            state.inview = inview;\n            this$1.$update(el);\n          };\n\n          if (state.show && !state.inview && !state.queued) {\n            state.queued = true;\n            data.promise = (data.promise || Promise.resolve()).then(function () {\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, this$1.delay);\n              });\n            }).then(function () {\n              toggle(true);\n              setTimeout(function () {\n                state.queued = false;\n                this$1.$emit();\n              }, 300);\n            });\n          } else if (!state.show && state.inview && !state.queued && this$1.repeat) {\n            toggle(false);\n          }\n        });\n      },\n      events: ['scroll', 'resize']\n    }]\n  };\n  var scrollspyNav = {\n    props: {\n      cls: String,\n      closest: String,\n      scroll: Boolean,\n      overflow: Boolean,\n      offset: Number\n    },\n    data: {\n      cls: 'uk-active',\n      closest: false,\n      scroll: false,\n      overflow: true,\n      offset: 0\n    },\n    computed: {\n      links: {\n        get: function get(_, $el) {\n          return $$('a[href^=\"#\"]', $el).filter(function (el) {\n            return el.hash;\n          });\n        },\n        watch: function watch(links) {\n          if (this.scroll) {\n            this.$create('scroll', links, {\n              offset: this.offset || 0\n            });\n          }\n        },\n        immediate: true\n      },\n      targets: function targets() {\n        return $$(this.links.map(function (el) {\n          return escape(el.hash).substr(1);\n        }).join(','));\n      },\n      elements: function elements(ref) {\n        var selector = ref.closest;\n        return closest(this.links, selector || '*');\n      }\n    },\n    update: [{\n      read: function read() {\n        var this$1 = this;\n        var ref = this.targets;\n        var length = ref.length;\n\n        if (!length || !isVisible(this.$el)) {\n          return false;\n        }\n\n        var ref$1 = scrollParents(this.targets, /auto|scroll/, true);\n        var scrollElement = ref$1[0];\n        var scrollTop = scrollElement.scrollTop;\n        var scrollHeight = scrollElement.scrollHeight;\n        var viewport = getViewport(scrollElement);\n        var max = scrollHeight - height(viewport);\n        var active = false;\n\n        if (scrollTop === max) {\n          active = length - 1;\n        } else {\n          this.targets.every(function (el, i) {\n            if (position(el, viewport).top - this$1.offset <= 0) {\n              active = i;\n              return true;\n            }\n          });\n\n          if (active === false && this.overflow) {\n            active = 0;\n          }\n        }\n\n        return {\n          active: active\n        };\n      },\n      write: function write(ref) {\n        var active = ref.active;\n        this.links.forEach(function (el) {\n          return el.blur();\n        });\n        removeClass(this.elements, this.cls);\n\n        if (active !== false) {\n          trigger(this.$el, 'active', [active, addClass(this.elements[active], this.cls)]);\n        }\n      },\n      events: ['scroll', 'resize']\n    }]\n  };\n  var sticky = {\n    mixins: [Class, Media],\n    props: {\n      top: null,\n      bottom: Boolean,\n      offset: String,\n      animation: String,\n      clsActive: String,\n      clsInactive: String,\n      clsFixed: String,\n      clsBelow: String,\n      selTarget: String,\n      widthElement: Boolean,\n      showOnUp: Boolean,\n      targetOffset: Number\n    },\n    data: {\n      top: 0,\n      bottom: false,\n      offset: 0,\n      animation: '',\n      clsActive: 'uk-active',\n      clsInactive: '',\n      clsFixed: 'uk-sticky-fixed',\n      clsBelow: 'uk-sticky-below',\n      selTarget: '',\n      widthElement: false,\n      showOnUp: false,\n      targetOffset: false\n    },\n    computed: {\n      offset: function offset(ref) {\n        var offset = ref.offset;\n        return toPx(offset);\n      },\n      selTarget: function selTarget(ref, $el) {\n        var selTarget = ref.selTarget;\n        return selTarget && $(selTarget, $el) || $el;\n      },\n      widthElement: function widthElement(ref, $el) {\n        var widthElement = ref.widthElement;\n        return query(widthElement, $el) || this.placeholder;\n      },\n      isActive: {\n        get: function get() {\n          return hasClass(this.selTarget, this.clsActive);\n        },\n        set: function set(value) {\n          if (value && !this.isActive) {\n            replaceClass(this.selTarget, this.clsInactive, this.clsActive);\n            trigger(this.$el, 'active');\n          } else if (!value && !hasClass(this.selTarget, this.clsInactive)) {\n            replaceClass(this.selTarget, this.clsActive, this.clsInactive);\n            trigger(this.$el, 'inactive');\n          }\n        }\n      }\n    },\n    connected: function connected() {\n      this.placeholder = $('+ .uk-sticky-placeholder', this.$el) || $('<div class=\"uk-sticky-placeholder\"></div>');\n      this.isFixed = false;\n      this.isActive = false;\n    },\n    disconnected: function disconnected() {\n      if (this.isFixed) {\n        this.hide();\n        removeClass(this.selTarget, this.clsInactive);\n      }\n\n      _remove(this.placeholder);\n\n      this.placeholder = null;\n      this.widthElement = null;\n    },\n    events: [{\n      name: 'load hashchange popstate',\n      el: inBrowser && window,\n      handler: function handler() {\n        var this$1 = this;\n\n        if (!(this.targetOffset !== false && location.hash && window.pageYOffset > 0)) {\n          return;\n        }\n\n        var target = $(location.hash);\n\n        if (target) {\n          fastdom.read(function () {\n            var ref = offset(target);\n            var top = ref.top;\n            var elTop = offset(this$1.$el).top;\n            var elHeight = this$1.$el.offsetHeight;\n\n            if (this$1.isFixed && elTop + elHeight >= top && elTop <= top + target.offsetHeight) {\n              scrollTop(window, top - elHeight - (isNumeric(this$1.targetOffset) ? this$1.targetOffset : 0) - this$1.offset);\n            }\n          });\n        }\n      }\n    }],\n    update: [{\n      read: function read(ref, type) {\n        var height = ref.height;\n        this.inactive = !this.matchMedia || !isVisible(this.$el);\n\n        if (this.inactive) {\n          return false;\n        }\n\n        if (this.isActive && type !== 'update') {\n          this.hide();\n          height = this.$el.offsetHeight;\n          this.show();\n        }\n\n        height = !this.isActive ? this.$el.offsetHeight : height;\n        this.topOffset = offset(this.isFixed ? this.placeholder : this.$el).top;\n        this.bottomOffset = this.topOffset + height;\n        var bottom = parseProp('bottom', this);\n        this.top = Math.max(toFloat(parseProp('top', this)), this.topOffset) - this.offset;\n        this.bottom = bottom && bottom - this.$el.offsetHeight;\n        this.width = dimensions(isVisible(this.widthElement) ? this.widthElement : this.$el).width;\n        return {\n          height: height,\n          top: offsetPosition(this.placeholder)[0],\n          margins: css(this.$el, ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'])\n        };\n      },\n      write: function write(ref) {\n        var height = ref.height;\n        var margins = ref.margins;\n        var ref$1 = this;\n        var placeholder = ref$1.placeholder;\n        css(placeholder, assign({\n          height: height\n        }, margins));\n\n        if (!within(placeholder, document)) {\n          after(this.$el, placeholder);\n          placeholder.hidden = true;\n        }\n\n        this.isActive = !!this.isActive; // force self-assign\n      },\n      events: ['resize']\n    }, {\n      read: function read(ref) {\n        var scroll = ref.scroll;\n        if (scroll === void 0) scroll = 0;\n        this.scroll = window.pageYOffset;\n        return {\n          dir: scroll <= this.scroll ? 'down' : 'up',\n          scroll: this.scroll\n        };\n      },\n      write: function write(data, type) {\n        var this$1 = this;\n        var now = Date.now();\n        var initTimestamp = data.initTimestamp;\n        if (initTimestamp === void 0) initTimestamp = 0;\n        var dir = data.dir;\n        var lastDir = data.lastDir;\n        var lastScroll = data.lastScroll;\n        var scroll = data.scroll;\n        var top = data.top;\n        data.lastScroll = scroll;\n\n        if (scroll < 0 || scroll === lastScroll && type === 'scroll' || this.showOnUp && type !== 'scroll' && !this.isFixed) {\n          return;\n        }\n\n        if (now - initTimestamp > 300 || dir !== lastDir) {\n          data.initScroll = scroll;\n          data.initTimestamp = now;\n        }\n\n        data.lastDir = dir;\n\n        if (this.showOnUp && !this.isFixed && Math.abs(data.initScroll - scroll) <= 30 && Math.abs(lastScroll - scroll) <= 10) {\n          return;\n        }\n\n        if (this.inactive || scroll < this.top || this.showOnUp && (scroll <= this.top || dir === 'down' && type === 'scroll' || dir === 'up' && !this.isFixed && scroll <= this.bottomOffset)) {\n          if (!this.isFixed) {\n            if (Animation.inProgress(this.$el) && top > scroll) {\n              Animation.cancel(this.$el);\n              this.hide();\n            }\n\n            return;\n          }\n\n          this.isFixed = false;\n\n          if (this.animation && scroll > this.topOffset) {\n            Animation.cancel(this.$el);\n            Animation.out(this.$el, this.animation).then(function () {\n              return this$1.hide();\n            }, noop);\n          } else {\n            this.hide();\n          }\n        } else if (this.isFixed) {\n          this.update();\n        } else if (this.animation) {\n          Animation.cancel(this.$el);\n          this.show();\n          Animation[\"in\"](this.$el, this.animation)[\"catch\"](noop);\n        } else {\n          this.show();\n        }\n      },\n      events: ['resize', 'scroll']\n    }],\n    methods: {\n      show: function show() {\n        this.isFixed = true;\n        this.update();\n        this.placeholder.hidden = false;\n      },\n      hide: function hide() {\n        this.isActive = false;\n        removeClass(this.$el, this.clsFixed, this.clsBelow);\n        css(this.$el, {\n          position: '',\n          top: '',\n          width: ''\n        });\n        this.placeholder.hidden = true;\n      },\n      update: function update() {\n        var active = this.top !== 0 || this.scroll > this.top;\n        var top = Math.max(0, this.offset);\n\n        if (isNumeric(this.bottom) && this.scroll > this.bottom - this.offset) {\n          top = this.bottom - this.scroll;\n        }\n\n        css(this.$el, {\n          position: 'fixed',\n          top: top + \"px\",\n          width: this.width\n        });\n        this.isActive = active;\n        toggleClass(this.$el, this.clsBelow, this.scroll > this.bottomOffset);\n        addClass(this.$el, this.clsFixed);\n      }\n    }\n  };\n\n  function parseProp(prop, ref) {\n    var $props = ref.$props;\n    var $el = ref.$el;\n    var propOffset = ref[prop + \"Offset\"];\n    var value = $props[prop];\n\n    if (!value) {\n      return;\n    }\n\n    if (isString(value) && value.match(/^-?\\d/)) {\n      return propOffset + toPx(value);\n    } else {\n      return offset(value === true ? parent($el) : query(value, $el)).bottom;\n    }\n  }\n\n  var Switcher = {\n    mixins: [Togglable],\n    args: 'connect',\n    props: {\n      connect: String,\n      toggle: String,\n      active: Number,\n      swiping: Boolean\n    },\n    data: {\n      connect: '~.uk-switcher',\n      toggle: '> * > :first-child',\n      active: 0,\n      swiping: true,\n      cls: 'uk-active',\n      attrItem: 'uk-switcher-item'\n    },\n    computed: {\n      connects: {\n        get: function get(ref, $el) {\n          var connect = ref.connect;\n          return queryAll(connect, $el);\n        },\n        watch: function watch(connects) {\n          if (this.swiping) {\n            css(connects, 'touch-action', 'pan-y pinch-zoom');\n          }\n        },\n        immediate: true\n      },\n      toggles: {\n        get: function get(ref, $el) {\n          var toggle = ref.toggle;\n          return $$(toggle, $el).filter(function (el) {\n            return !matches(el, '.uk-disabled *, .uk-disabled, [disabled]');\n          });\n        },\n        watch: function watch(toggles) {\n          var active = this.index();\n          this.show(~active && active || toggles[this.active] || toggles[0]);\n        },\n        immediate: true\n      },\n      children: function children() {\n        var this$1 = this;\n        return _children(this.$el).filter(function (child) {\n          return this$1.toggles.some(function (toggle) {\n            return within(toggle, child);\n          });\n        });\n      }\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return this.toggle;\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.show(e.current);\n      }\n    }, {\n      name: 'click',\n      el: function el() {\n        return this.connects;\n      },\n      delegate: function delegate() {\n        return \"[\" + this.attrItem + \"],[data-\" + this.attrItem + \"]\";\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.show(data(e.current, this.attrItem));\n      }\n    }, {\n      name: 'swipeRight swipeLeft',\n      filter: function filter() {\n        return this.swiping;\n      },\n      el: function el() {\n        return this.connects;\n      },\n      handler: function handler(ref) {\n        var type = ref.type;\n        this.show(endsWith(type, 'Left') ? 'next' : 'previous');\n      }\n    }],\n    methods: {\n      index: function index() {\n        var this$1 = this;\n        return findIndex(this.children, function (el) {\n          return hasClass(el, this$1.cls);\n        });\n      },\n      show: function show(item) {\n        var this$1 = this;\n        var prev = this.index();\n\n        var next = _getIndex(this.children[_getIndex(item, this.toggles, prev)], _children(this.$el));\n\n        if (prev === next) {\n          return;\n        }\n\n        this.children.forEach(function (child, i) {\n          toggleClass(child, this$1.cls, next === i);\n          attr(this$1.toggles[i], 'aria-expanded', next === i);\n        });\n        this.connects.forEach(function (ref) {\n          var children = ref.children;\n          return this$1.toggleElement(toNodes(children).filter(function (child, i) {\n            return i !== next && this$1.isToggled(child);\n          }), false, prev >= 0).then(function () {\n            return this$1.toggleElement(children[next], true, prev >= 0);\n          });\n        });\n      }\n    }\n  };\n  var tab = {\n    mixins: [Class],\n    \"extends\": Switcher,\n    props: {\n      media: Boolean\n    },\n    data: {\n      media: 960,\n      attrItem: 'uk-tab-item'\n    },\n    connected: function connected() {\n      var cls = hasClass(this.$el, 'uk-tab-left') ? 'uk-tab-left' : hasClass(this.$el, 'uk-tab-right') ? 'uk-tab-right' : false;\n\n      if (cls) {\n        this.$create('toggle', this.$el, {\n          cls: cls,\n          mode: 'media',\n          media: this.media\n        });\n      }\n    }\n  };\n  var toggle = {\n    mixins: [Media, Togglable],\n    args: 'target',\n    props: {\n      href: String,\n      target: null,\n      mode: 'list',\n      queued: Boolean\n    },\n    data: {\n      href: false,\n      target: false,\n      mode: 'click',\n      queued: true\n    },\n    computed: {\n      target: {\n        get: function get(ref, $el) {\n          var href = ref.href;\n          var target = ref.target;\n          target = queryAll(target || href, $el);\n          return target.length && target || [$el];\n        },\n        watch: function watch() {\n          this.updateAria();\n        },\n        immediate: true\n      }\n    },\n    events: [{\n      name: pointerEnter + \" \" + pointerLeave,\n      filter: function filter() {\n        return includes(this.mode, 'hover');\n      },\n      handler: function handler(e) {\n        if (!isTouch(e)) {\n          this.toggle(\"toggle\" + (e.type === pointerEnter ? 'show' : 'hide'));\n        }\n      }\n    }, {\n      name: 'click',\n      filter: function filter() {\n        return includes(this.mode, 'click') || hasTouch && includes(this.mode, 'hover');\n      },\n      handler: function handler(e) {\n        var link;\n\n        if (closest(e.target, 'a[href=\"#\"], a[href=\"\"]') || (link = closest(e.target, 'a[href]')) && (!isToggled(this.target, this.cls) || link.hash && matches(this.target, link.hash))) {\n          e.preventDefault();\n        }\n\n        this.toggle();\n      }\n    }, {\n      name: 'toggled',\n      self: true,\n      el: function el() {\n        return this.target;\n      },\n      handler: function handler(e, toggled) {\n        this.updateAria(toggled);\n      }\n    }],\n    update: {\n      read: function read() {\n        return includes(this.mode, 'media') && this.media ? {\n          match: this.matchMedia\n        } : false;\n      },\n      write: function write(ref) {\n        var match = ref.match;\n        var toggled = this.isToggled(this.target);\n\n        if (match ? !toggled : toggled) {\n          this.toggle();\n        }\n      },\n      events: ['resize']\n    },\n    methods: {\n      toggle: function toggle(type) {\n        var this$1 = this;\n\n        if (!trigger(this.target, type || 'toggle', [this])) {\n          return;\n        }\n\n        if (!this.queued) {\n          return this.toggleElement(this.target);\n        }\n\n        var leaving = this.target.filter(function (el) {\n          return hasClass(el, this$1.clsLeave);\n        });\n\n        if (leaving.length) {\n          this.target.forEach(function (el) {\n            var isLeaving = includes(leaving, el);\n            this$1.toggleElement(el, isLeaving, isLeaving);\n          });\n          return;\n        }\n\n        var toggled = this.target.filter(this.isToggled);\n        this.toggleElement(toggled, false).then(function () {\n          return this$1.toggleElement(this$1.target.filter(function (el) {\n            return !includes(toggled, el);\n          }), true);\n        });\n      },\n      updateAria: function updateAria(toggled) {\n        attr(this.$el, 'aria-expanded', isBoolean(toggled) ? toggled : isToggled(this.target, this.cls));\n      }\n    }\n  }; // TODO improve isToggled handling\n\n  function isToggled(target, cls) {\n    return cls ? hasClass(target, cls.split(' ')[0]) : isVisible(target);\n  }\n\n  var components = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Accordion: Accordion,\n    Alert: alert,\n    Cover: cover,\n    Drop: drop,\n    Dropdown: drop,\n    FormCustom: formCustom,\n    Gif: gif,\n    Grid: grid,\n    HeightMatch: heightMatch,\n    HeightViewport: heightViewport,\n    Icon: Icon,\n    Img: img,\n    Leader: leader,\n    Margin: Margin,\n    Modal: modal,\n    Nav: nav,\n    Navbar: navbar,\n    Offcanvas: offcanvas,\n    OverflowAuto: overflowAuto,\n    Responsive: responsive,\n    Scroll: scroll,\n    Scrollspy: scrollspy,\n    ScrollspyNav: scrollspyNav,\n    Sticky: sticky,\n    Svg: SVG,\n    Switcher: Switcher,\n    Tab: tab,\n    Toggle: toggle,\n    Video: Video,\n    Close: Close,\n    Spinner: Spinner,\n    SlidenavNext: Slidenav,\n    SlidenavPrevious: Slidenav,\n    SearchIcon: Search,\n    Marker: IconComponent,\n    NavbarToggleIcon: IconComponent,\n    OverlayIcon: IconComponent,\n    PaginationNext: IconComponent,\n    PaginationPrevious: IconComponent,\n    Totop: IconComponent\n  }); // register components\n\n  each(components, function (component, name) {\n    return UIkit.component(name, component);\n  }); // core functionality\n\n  UIkit.use(Core);\n  boot(UIkit);\n  var countdown = {\n    mixins: [Class],\n    props: {\n      date: String,\n      clsWrapper: String\n    },\n    data: {\n      date: '',\n      clsWrapper: '.uk-countdown-%unit%'\n    },\n    computed: {\n      date: function date(ref) {\n        var date = ref.date;\n        return Date.parse(date);\n      },\n      days: function days(ref, $el) {\n        var clsWrapper = ref.clsWrapper;\n        return $(clsWrapper.replace('%unit%', 'days'), $el);\n      },\n      hours: function hours(ref, $el) {\n        var clsWrapper = ref.clsWrapper;\n        return $(clsWrapper.replace('%unit%', 'hours'), $el);\n      },\n      minutes: function minutes(ref, $el) {\n        var clsWrapper = ref.clsWrapper;\n        return $(clsWrapper.replace('%unit%', 'minutes'), $el);\n      },\n      seconds: function seconds(ref, $el) {\n        var clsWrapper = ref.clsWrapper;\n        return $(clsWrapper.replace('%unit%', 'seconds'), $el);\n      },\n      units: function units() {\n        var this$1 = this;\n        return ['days', 'hours', 'minutes', 'seconds'].filter(function (unit) {\n          return this$1[unit];\n        });\n      }\n    },\n    connected: function connected() {\n      this.start();\n    },\n    disconnected: function disconnected() {\n      var this$1 = this;\n      this.stop();\n      this.units.forEach(function (unit) {\n        return empty(this$1[unit]);\n      });\n    },\n    events: [{\n      name: 'visibilitychange',\n      el: inBrowser && document,\n      handler: function handler() {\n        if (document.hidden) {\n          this.stop();\n        } else {\n          this.start();\n        }\n      }\n    }],\n    update: {\n      write: function write() {\n        var this$1 = this;\n        var timespan = getTimeSpan(this.date);\n\n        if (timespan.total <= 0) {\n          this.stop();\n          timespan.days = timespan.hours = timespan.minutes = timespan.seconds = 0;\n        }\n\n        this.units.forEach(function (unit) {\n          var digits = String(Math.floor(timespan[unit]));\n          digits = digits.length < 2 ? \"0\" + digits : digits;\n          var el = this$1[unit];\n\n          if (el.textContent !== digits) {\n            digits = digits.split('');\n\n            if (digits.length !== el.children.length) {\n              html(el, digits.map(function () {\n                return '<span></span>';\n              }).join(''));\n            }\n\n            digits.forEach(function (digit, i) {\n              return el.children[i].textContent = digit;\n            });\n          }\n        });\n      }\n    },\n    methods: {\n      start: function start() {\n        this.stop();\n\n        if (this.date && this.units.length) {\n          this.$update();\n          this.timer = setInterval(this.$update, 1000);\n        }\n      },\n      stop: function stop() {\n        if (this.timer) {\n          clearInterval(this.timer);\n          this.timer = null;\n        }\n      }\n    }\n  };\n\n  function getTimeSpan(date) {\n    var total = date - Date.now();\n    return {\n      total: total,\n      seconds: total / 1000 % 60,\n      minutes: total / 1000 / 60 % 60,\n      hours: total / 1000 / 60 / 60 % 24,\n      days: total / 1000 / 60 / 60 / 24\n    };\n  }\n\n  var clsLeave = 'uk-transition-leave';\n  var clsEnter = 'uk-transition-enter';\n\n  function fade(action, target, duration, stagger) {\n    if (stagger === void 0) stagger = 0;\n    var index = transitionIndex(target, true);\n    var propsIn = {\n      opacity: 1\n    };\n    var propsOut = {\n      opacity: 0\n    };\n\n    var wrapIndexFn = function wrapIndexFn(fn) {\n      return function () {\n        return index === transitionIndex(target) ? fn() : Promise.reject();\n      };\n    };\n\n    var leaveFn = wrapIndexFn(function () {\n      addClass(target, clsLeave);\n      return Promise.all(getTransitionNodes(target).map(function (child, i) {\n        return new Promise(function (resolve) {\n          return setTimeout(function () {\n            return Transition.start(child, propsOut, duration / 2, 'ease').then(resolve);\n          }, i * stagger);\n        });\n      })).then(function () {\n        return removeClass(target, clsLeave);\n      });\n    });\n    var enterFn = wrapIndexFn(function () {\n      var oldHeight = height(target);\n      addClass(target, clsEnter);\n      action();\n      css(_children(target), {\n        opacity: 0\n      }); // Two frames to ensure UIkit updates propagated\n\n      return new Promise(function (resolve) {\n        return requestAnimationFrame(function () {\n          var nodes = _children(target);\n\n          var newHeight = height(target);\n          height(target, oldHeight);\n          var transitionNodes = getTransitionNodes(target);\n          css(nodes, propsOut);\n          var transitions = transitionNodes.map(function (child, i) {\n            return new Promise(function (resolve) {\n              return setTimeout(function () {\n                return Transition.start(child, propsIn, duration / 2, 'ease').then(resolve);\n              }, i * stagger);\n            });\n          });\n\n          if (oldHeight !== newHeight) {\n            transitions.push(Transition.start(target, {\n              height: newHeight\n            }, duration / 2 + transitionNodes.length * stagger, 'ease'));\n          }\n\n          Promise.all(transitions).then(function () {\n            removeClass(target, clsEnter);\n\n            if (index === transitionIndex(target)) {\n              css(target, 'height', '');\n              css(nodes, {\n                opacity: ''\n              });\n              delete target.dataset.transition;\n            }\n\n            resolve();\n          });\n        });\n      });\n    });\n    return hasClass(target, clsLeave) ? waitTransitionend(target).then(enterFn) : hasClass(target, clsEnter) ? waitTransitionend(target).then(leaveFn).then(enterFn) : leaveFn().then(enterFn);\n  }\n\n  function transitionIndex(target, next) {\n    if (next) {\n      target.dataset.transition = 1 + transitionIndex(target);\n    }\n\n    return toNumber(target.dataset.transition) || 0;\n  }\n\n  function waitTransitionend(target) {\n    return Promise.all(_children(target).filter(Transition.inProgress).map(function (el) {\n      return new Promise(function (resolve) {\n        return once(el, 'transitionend transitioncanceled', resolve);\n      });\n    }));\n  }\n\n  function getTransitionNodes(target) {\n    return getRows(_children(target)).reduce(function (nodes, row) {\n      return nodes.concat(sortBy(row.filter(function (el) {\n        return isInView(el);\n      }), 'offsetLeft'));\n    }, []);\n  }\n\n  var targetClass = 'uk-animation-target';\n\n  function slide(action, target, duration) {\n    addStyle();\n\n    var nodes = _children(target); // Get current state\n\n\n    var currentProps = nodes.map(function (el) {\n      return getProps(el, true);\n    });\n    var oldHeight = height(target); // Cancel previous animations\n\n    Transition.cancel(target);\n    nodes.forEach(Transition.cancel);\n    removeClass(target, targetClass);\n    reset(target); // Adding, sorting, removing nodes\n\n    action(); // Find new nodes\n\n    nodes = nodes.concat(_children(target).filter(function (el) {\n      return !includes(nodes, el);\n    })); // Wait for update to propagate\n\n    return Promise.resolve().then(function () {\n      // Force update\n      fastdom.flush(); // Get new state\n\n      var newHeight = height(target);\n      var ref = getTransitionProps(target, nodes, currentProps);\n      var propsTo = ref[0];\n      var propsFrom = ref[1]; // Reset to previous state\n\n      addClass(target, targetClass);\n      nodes.forEach(function (el, i) {\n        return propsFrom[i] && css(el, propsFrom[i]);\n      });\n      css(target, {\n        height: oldHeight,\n        display: 'block'\n      }); // Start transitions on next frame\n\n      return new Promise(function (resolve) {\n        return requestAnimationFrame(function () {\n          var transitions = nodes.map(function (el, i) {\n            return Transition.start(el, propsTo[i], duration, 'ease');\n          }).concat(Transition.start(target, {\n            height: newHeight\n          }, duration, 'ease'));\n          Promise.all(transitions).then(function () {\n            nodes.forEach(function (el, i) {\n              return css(el, 'display', propsTo[i].opacity === 0 ? 'none' : '');\n            });\n            reset(target);\n          }, noop).then(resolve);\n        });\n      });\n    });\n  }\n\n  function getProps(el, opacity) {\n    var zIndex = css(el, 'zIndex');\n    return isVisible(el) ? assign({\n      display: '',\n      opacity: opacity ? css(el, 'opacity') : '0',\n      pointerEvents: 'none',\n      position: 'absolute',\n      zIndex: zIndex === 'auto' ? index(el) : zIndex\n    }, getPositionWithMargin(el)) : false;\n  }\n\n  function getTransitionProps(target, nodes, currentProps) {\n    var propsTo = nodes.map(function (el, i) {\n      return parent(el) && i in currentProps ? currentProps[i] ? isVisible(el) ? getPositionWithMargin(el) : {\n        opacity: 0\n      } : {\n        opacity: isVisible(el) ? 1 : 0\n      } : false;\n    });\n    var propsFrom = propsTo.map(function (props, i) {\n      var from = parent(nodes[i]) === target && (currentProps[i] || getProps(nodes[i]));\n\n      if (!from) {\n        return false;\n      }\n\n      if (!props) {\n        delete from.opacity;\n      } else if (!('opacity' in props)) {\n        var opacity = from.opacity;\n\n        if (opacity % 1) {\n          props.opacity = 1;\n        } else {\n          delete from.opacity;\n        }\n      }\n\n      return from;\n    });\n    return [propsTo, propsFrom];\n  }\n\n  function reset(el) {\n    css(el.children, {\n      height: '',\n      left: '',\n      opacity: '',\n      pointerEvents: '',\n      position: '',\n      top: '',\n      width: '',\n      zIndex: ''\n    });\n    removeClass(el, targetClass);\n    css(el, {\n      height: '',\n      display: ''\n    });\n  }\n\n  function getPositionWithMargin(el) {\n    var ref = offset(el);\n    var height = ref.height;\n    var width = ref.width;\n    var ref$1 = position(el);\n    var top = ref$1.top;\n    var left = ref$1.left;\n    return {\n      top: top,\n      left: left,\n      height: height,\n      width: width\n    };\n  }\n\n  var style;\n\n  function addStyle() {\n    if (style) {\n      return;\n    }\n\n    style = !!append(document.head, \"<style> .\" + targetClass + \" > * {\\n            margin-top: 0 !important;\\n            transform: none !important;\\n        } </style>\");\n  }\n\n  var Animate = {\n    props: {\n      duration: Number,\n      animation: String\n    },\n    data: {\n      duration: 150,\n      animation: 'slide'\n    },\n    methods: {\n      animate: function animate(action, target) {\n        if (target === void 0) target = this.$el;\n        var name = this.animation;\n        var animationFn = name === 'fade' ? fade : name === 'delayed-fade' ? function () {\n          var args = [],\n              len = arguments.length;\n\n          while (len--) {\n            args[len] = arguments[len];\n          }\n\n          return fade.apply(void 0, args.concat([40]));\n        } : slide;\n        return animationFn(action, target, this.duration).then(function () {\n          return trigger(toWindow(target), 'resize');\n        }, noop);\n      }\n    }\n  };\n  var filter$1 = {\n    mixins: [Animate],\n    args: 'target',\n    props: {\n      target: Boolean,\n      selActive: Boolean\n    },\n    data: {\n      target: null,\n      selActive: false,\n      attrItem: 'uk-filter-control',\n      cls: 'uk-active',\n      duration: 250\n    },\n    computed: {\n      toggles: {\n        get: function get(ref, $el) {\n          var attrItem = ref.attrItem;\n          return $$(\"[\" + this.attrItem + \"],[data-\" + this.attrItem + \"]\", $el);\n        },\n        watch: function watch() {\n          var this$1 = this;\n          this.updateState();\n\n          if (this.selActive !== false) {\n            var actives = $$(this.selActive, this.$el);\n            this.toggles.forEach(function (el) {\n              return toggleClass(el, this$1.cls, includes(actives, el));\n            });\n          }\n        },\n        immediate: true\n      },\n      children: {\n        get: function get(ref, $el) {\n          var target = ref.target;\n          return $$(target + \" > *\", $el);\n        },\n        watch: function watch(list, old) {\n          if (!isEqualList(list, old)) {\n            this.updateState();\n          }\n        }\n      }\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return \"[\" + this.attrItem + \"],[data-\" + this.attrItem + \"]\";\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.apply(e.current);\n      }\n    }],\n    methods: {\n      apply: function apply(el) {\n        var prevState = this.getState();\n        var newState = mergeState(el, this.attrItem, this.getState());\n\n        if (!isEqualState(prevState, newState)) {\n          this.setState(newState);\n        }\n      },\n      getState: function getState() {\n        var this$1 = this;\n        return this.toggles.filter(function (item) {\n          return hasClass(item, this$1.cls);\n        }).reduce(function (state, el) {\n          return mergeState(el, this$1.attrItem, state);\n        }, {\n          filter: {\n            '': ''\n          },\n          sort: []\n        });\n      },\n      setState: function setState(state, animate) {\n        var this$1 = this;\n        if (animate === void 0) animate = true;\n        state = assign({\n          filter: {\n            '': ''\n          },\n          sort: []\n        }, state);\n        trigger(this.$el, 'beforeFilter', [this, state]);\n        this.toggles.forEach(function (el) {\n          return toggleClass(el, this$1.cls, !!matchFilter(el, this$1.attrItem, state));\n        });\n        Promise.all($$(this.target, this.$el).map(function (target) {\n          var filterFn = function filterFn() {\n            applyState(state, target, _children(target));\n            this$1.$update(this$1.$el);\n          };\n\n          return animate ? this$1.animate(filterFn, target) : filterFn();\n        })).then(function () {\n          return trigger(this$1.$el, 'afterFilter', [this$1]);\n        });\n      },\n      updateState: function updateState() {\n        var this$1 = this;\n        fastdom.write(function () {\n          return this$1.setState(this$1.getState(), false);\n        });\n      }\n    }\n  };\n\n  function getFilter(el, attr) {\n    return parseOptions(data(el, attr), ['filter']);\n  }\n\n  function isEqualState(stateA, stateB) {\n    return ['filter', 'sort'].every(function (prop) {\n      return isEqual(stateA[prop], stateB[prop]);\n    });\n  }\n\n  function applyState(state, target, children) {\n    var selector = getSelector(state);\n    children.forEach(function (el) {\n      return css(el, 'display', selector && !matches(el, selector) ? 'none' : '');\n    });\n    var ref = state.sort;\n    var sort = ref[0];\n    var order = ref[1];\n\n    if (sort) {\n      var sorted = sortItems(children, sort, order);\n\n      if (!isEqual(sorted, children)) {\n        append(target, sorted);\n      }\n    }\n  }\n\n  function mergeState(el, attr, state) {\n    var filterBy = getFilter(el, attr);\n    var filter = filterBy.filter;\n    var group = filterBy.group;\n    var sort = filterBy.sort;\n    var order = filterBy.order;\n    if (order === void 0) order = 'asc';\n\n    if (filter || isUndefined(sort)) {\n      if (group) {\n        if (filter) {\n          delete state.filter[''];\n          state.filter[group] = filter;\n        } else {\n          delete state.filter[group];\n\n          if (isEmpty(state.filter) || '' in state.filter) {\n            state.filter = {\n              '': filter || ''\n            };\n          }\n        }\n      } else {\n        state.filter = {\n          '': filter || ''\n        };\n      }\n    }\n\n    if (!isUndefined(sort)) {\n      state.sort = [sort, order];\n    }\n\n    return state;\n  }\n\n  function matchFilter(el, attr, ref) {\n    var stateFilter = ref.filter;\n    if (stateFilter === void 0) stateFilter = {\n      '': ''\n    };\n    var ref_sort = ref.sort;\n    var stateSort = ref_sort[0];\n    var stateOrder = ref_sort[1];\n    var ref$1 = getFilter(el, attr);\n    var filter = ref$1.filter;\n    if (filter === void 0) filter = '';\n    var group = ref$1.group;\n    if (group === void 0) group = '';\n    var sort = ref$1.sort;\n    var order = ref$1.order;\n    if (order === void 0) order = 'asc';\n    return isUndefined(sort) ? group in stateFilter && filter === stateFilter[group] || !filter && group && !(group in stateFilter) && !stateFilter[''] : stateSort === sort && stateOrder === order;\n  }\n\n  function isEqualList(listA, listB) {\n    return listA.length === listB.length && listA.every(function (el) {\n      return ~listB.indexOf(el);\n    });\n  }\n\n  function getSelector(ref) {\n    var filter = ref.filter;\n    var selector = '';\n    each(filter, function (value) {\n      return selector += value || '';\n    });\n    return selector;\n  }\n\n  function sortItems(nodes, sort, order) {\n    return assign([], nodes).sort(function (a, b) {\n      return data(a, sort).localeCompare(data(b, sort), undefined, {\n        numeric: true\n      }) * (order === 'asc' || -1);\n    });\n  }\n\n  var Animations = {\n    slide: {\n      show: function show(dir) {\n        return [{\n          transform: _translate(dir * -100)\n        }, {\n          transform: _translate()\n        }];\n      },\n      percent: function percent(current) {\n        return translated(current);\n      },\n      translate: function translate(percent, dir) {\n        return [{\n          transform: _translate(dir * -100 * percent)\n        }, {\n          transform: _translate(dir * 100 * (1 - percent))\n        }];\n      }\n    }\n  };\n\n  function translated(el) {\n    return Math.abs(css(el, 'transform').split(',')[4] / el.offsetWidth) || 0;\n  }\n\n  function _translate(value, unit) {\n    if (value === void 0) value = 0;\n    if (unit === void 0) unit = '%';\n    value += value ? unit : '';\n    return isIE ? \"translateX(\" + value + \")\" : \"translate3d(\" + value + \", 0, 0)\"; // currently not translate3d in IE, translate3d within translate3d does not work while transitioning\n  }\n\n  function scale3d(value) {\n    return \"scale3d(\" + value + \", \" + value + \", 1)\";\n  }\n\n  var Animations$1 = assign({}, Animations, {\n    fade: {\n      show: function show() {\n        return [{\n          opacity: 0\n        }, {\n          opacity: 1\n        }];\n      },\n      percent: function percent(current) {\n        return 1 - css(current, 'opacity');\n      },\n      translate: function translate(percent) {\n        return [{\n          opacity: 1 - percent\n        }, {\n          opacity: percent\n        }];\n      }\n    },\n    scale: {\n      show: function show() {\n        return [{\n          opacity: 0,\n          transform: scale3d(1 - .2)\n        }, {\n          opacity: 1,\n          transform: scale3d(1)\n        }];\n      },\n      percent: function percent(current) {\n        return 1 - css(current, 'opacity');\n      },\n      translate: function translate(percent) {\n        return [{\n          opacity: 1 - percent,\n          transform: scale3d(1 - .2 * percent)\n        }, {\n          opacity: percent,\n          transform: scale3d(1 - .2 + .2 * percent)\n        }];\n      }\n    }\n  });\n\n  function Transitioner(prev, next, dir, ref) {\n    var animation = ref.animation;\n    var easing = ref.easing;\n    var _percent = animation.percent;\n    var _translate2 = animation.translate;\n    var show = animation.show;\n    if (show === void 0) show = noop;\n    var props = show(dir);\n    var deferred = new Deferred();\n    return {\n      dir: dir,\n      show: function show(duration, percent, linear) {\n        var this$1 = this;\n        if (percent === void 0) percent = 0;\n        var timing = linear ? 'linear' : easing;\n        duration -= Math.round(duration * clamp(percent, -1, 1));\n        this.translate(percent);\n        triggerUpdate(next, 'itemin', {\n          percent: percent,\n          duration: duration,\n          timing: timing,\n          dir: dir\n        });\n        triggerUpdate(prev, 'itemout', {\n          percent: 1 - percent,\n          duration: duration,\n          timing: timing,\n          dir: dir\n        });\n        Promise.all([Transition.start(next, props[1], duration, timing), Transition.start(prev, props[0], duration, timing)]).then(function () {\n          this$1.reset();\n          deferred.resolve();\n        }, noop);\n        return deferred.promise;\n      },\n      cancel: function cancel() {\n        Transition.cancel([next, prev]);\n      },\n      reset: function reset() {\n        for (var prop in props[0]) {\n          css([next, prev], prop, '');\n        }\n      },\n      forward: function forward(duration, percent) {\n        if (percent === void 0) percent = this.percent();\n        Transition.cancel([next, prev]);\n        return this.show(duration, percent, true);\n      },\n      translate: function translate(percent) {\n        this.reset();\n\n        var props = _translate2(percent, dir);\n\n        css(next, props[1]);\n        css(prev, props[0]);\n        triggerUpdate(next, 'itemtranslatein', {\n          percent: percent,\n          dir: dir\n        });\n        triggerUpdate(prev, 'itemtranslateout', {\n          percent: 1 - percent,\n          dir: dir\n        });\n      },\n      percent: function percent() {\n        return _percent(prev || next, next, dir);\n      },\n      getDistance: function getDistance() {\n        return prev && prev.offsetWidth;\n      }\n    };\n  }\n\n  function triggerUpdate(el, type, data) {\n    trigger(el, createEvent(type, false, false, data));\n  }\n\n  var SliderAutoplay = {\n    props: {\n      autoplay: Boolean,\n      autoplayInterval: Number,\n      pauseOnHover: Boolean\n    },\n    data: {\n      autoplay: false,\n      autoplayInterval: 7000,\n      pauseOnHover: true\n    },\n    connected: function connected() {\n      this.autoplay && this.startAutoplay();\n    },\n    disconnected: function disconnected() {\n      this.stopAutoplay();\n    },\n    update: function update() {\n      attr(this.slides, 'tabindex', '-1');\n    },\n    events: [{\n      name: 'visibilitychange',\n      el: inBrowser && document,\n      filter: function filter() {\n        return this.autoplay;\n      },\n      handler: function handler() {\n        if (document.hidden) {\n          this.stopAutoplay();\n        } else {\n          this.startAutoplay();\n        }\n      }\n    }],\n    methods: {\n      startAutoplay: function startAutoplay() {\n        var this$1 = this;\n        this.stopAutoplay();\n        this.interval = setInterval(function () {\n          return (!this$1.draggable || !$(':focus', this$1.$el)) && (!this$1.pauseOnHover || !matches(this$1.$el, ':hover')) && !this$1.stack.length && this$1.show('next');\n        }, this.autoplayInterval);\n      },\n      stopAutoplay: function stopAutoplay() {\n        this.interval && clearInterval(this.interval);\n      }\n    }\n  };\n  var SliderDrag = {\n    props: {\n      draggable: Boolean\n    },\n    data: {\n      draggable: true,\n      threshold: 10\n    },\n    created: function created() {\n      var this$1 = this;\n      ['start', 'move', 'end'].forEach(function (key) {\n        var fn = this$1[key];\n\n        this$1[key] = function (e) {\n          var pos = getEventPos(e).x * (isRtl ? -1 : 1);\n          this$1.prevPos = pos !== this$1.pos ? this$1.pos : this$1.prevPos;\n          this$1.pos = pos;\n          fn(e);\n        };\n      });\n    },\n    events: [{\n      name: pointerDown,\n      delegate: function delegate() {\n        return this.selSlides;\n      },\n      handler: function handler(e) {\n        if (!this.draggable || !isTouch(e) && hasTextNodesOnly(e.target) || closest(e.target, selInput) || e.button > 0 || this.length < 2) {\n          return;\n        }\n\n        this.start(e);\n      }\n    }, {\n      name: 'dragstart',\n      handler: function handler(e) {\n        e.preventDefault();\n      }\n    }],\n    methods: {\n      start: function start() {\n        this.drag = this.pos;\n\n        if (this._transitioner) {\n          this.percent = this._transitioner.percent();\n          this.drag += this._transitioner.getDistance() * this.percent * this.dir;\n\n          this._transitioner.cancel();\n\n          this._transitioner.translate(this.percent);\n\n          this.dragging = true;\n          this.stack = [];\n        } else {\n          this.prevIndex = this.index;\n        } // Workaround for iOS's inert scrolling preventing pointerdown event\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\n\n\n        on(this.list, 'touchmove', this.move, {\n          passive: false\n        });\n        on(document, pointerMove, this.move, {\n          passive: false\n        });\n        on(document, pointerUp + \" \" + pointerCancel, this.end, true);\n        css(this.list, 'userSelect', 'none');\n      },\n      move: function move(e) {\n        var this$1 = this;\n        var distance = this.pos - this.drag;\n\n        if (distance === 0 || this.prevPos === this.pos || !this.dragging && Math.abs(distance) < this.threshold) {\n          return;\n        }\n\n        e.cancelable && e.preventDefault();\n        this.dragging = true;\n        this.dir = distance < 0 ? 1 : -1;\n        var ref = this;\n        var slides = ref.slides;\n        var ref$1 = this;\n        var prevIndex = ref$1.prevIndex;\n        var dis = Math.abs(distance);\n        var nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);\n        var width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\n\n        while (nextIndex !== prevIndex && dis > width) {\n          this.drag -= width * this.dir;\n          prevIndex = nextIndex;\n          dis -= width;\n          nextIndex = this.getIndex(prevIndex + this.dir, prevIndex);\n          width = this._getDistance(prevIndex, nextIndex) || slides[prevIndex].offsetWidth;\n        }\n\n        this.percent = dis / width;\n        var prev = slides[prevIndex];\n        var next = slides[nextIndex];\n        var changed = this.index !== nextIndex;\n        var edge = prevIndex === nextIndex;\n        var itemShown;\n        [this.index, this.prevIndex].filter(function (i) {\n          return !includes([nextIndex, prevIndex], i);\n        }).forEach(function (i) {\n          trigger(slides[i], 'itemhidden', [this$1]);\n\n          if (edge) {\n            itemShown = true;\n            this$1.prevIndex = prevIndex;\n          }\n        });\n\n        if (this.index === prevIndex && this.prevIndex !== prevIndex || itemShown) {\n          trigger(slides[this.index], 'itemshown', [this]);\n        }\n\n        if (changed) {\n          this.prevIndex = prevIndex;\n          this.index = nextIndex;\n          !edge && trigger(prev, 'beforeitemhide', [this]);\n          trigger(next, 'beforeitemshow', [this]);\n        }\n\n        this._transitioner = this._translate(Math.abs(this.percent), prev, !edge && next);\n\n        if (changed) {\n          !edge && trigger(prev, 'itemhide', [this]);\n          trigger(next, 'itemshow', [this]);\n        }\n      },\n      end: function end() {\n        off(this.list, 'touchmove', this.move, {\n          passive: false\n        });\n        off(document, pointerMove, this.move, {\n          passive: false\n        });\n        off(document, pointerUp + \" \" + pointerCancel, this.end, true);\n\n        if (this.dragging) {\n          this.dragging = null;\n\n          if (this.index === this.prevIndex) {\n            this.percent = 1 - this.percent;\n            this.dir *= -1;\n\n            this._show(false, this.index, true);\n\n            this._transitioner = null;\n          } else {\n            var dirChange = (isRtl ? this.dir * (isRtl ? 1 : -1) : this.dir) < 0 === this.prevPos > this.pos;\n            this.index = dirChange ? this.index : this.prevIndex;\n\n            if (dirChange) {\n              this.percent = 1 - this.percent;\n            }\n\n            this.show(this.dir > 0 && !dirChange || this.dir < 0 && dirChange ? 'next' : 'previous', true);\n          }\n        }\n\n        css(this.list, {\n          userSelect: '',\n          pointerEvents: ''\n        });\n        this.drag = this.percent = null;\n      }\n    }\n  };\n\n  function hasTextNodesOnly(el) {\n    return !el.children.length && el.childNodes.length;\n  }\n\n  var SliderNav = {\n    data: {\n      selNav: false\n    },\n    computed: {\n      nav: function nav(ref, $el) {\n        var selNav = ref.selNav;\n        return $(selNav, $el);\n      },\n      selNavItem: function selNavItem(ref) {\n        var attrItem = ref.attrItem;\n        return \"[\" + attrItem + \"],[data-\" + attrItem + \"]\";\n      },\n      navItems: function navItems(_, $el) {\n        return $$(this.selNavItem, $el);\n      }\n    },\n    update: {\n      write: function write() {\n        var this$1 = this;\n\n        if (this.nav && this.length !== this.nav.children.length) {\n          html(this.nav, this.slides.map(function (_, i) {\n            return \"<li \" + this$1.attrItem + \"=\\\"\" + i + \"\\\"><a href></a></li>\";\n          }).join(''));\n        }\n\n        this.navItems.concat(this.nav).forEach(function (el) {\n          return el && (el.hidden = !this$1.maxIndex);\n        });\n        this.updateNav();\n      },\n      events: ['resize']\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return this.selNavItem;\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.show(data(e.current, this.attrItem));\n      }\n    }, {\n      name: 'itemshow',\n      handler: 'updateNav'\n    }],\n    methods: {\n      updateNav: function updateNav() {\n        var this$1 = this;\n        var i = this.getValidIndex();\n        this.navItems.forEach(function (el) {\n          var cmd = data(el, this$1.attrItem);\n          toggleClass(el, this$1.clsActive, toNumber(cmd) === i);\n          toggleClass(el, 'uk-invisible', this$1.finite && (cmd === 'previous' && i === 0 || cmd === 'next' && i >= this$1.maxIndex));\n        });\n      }\n    }\n  };\n  var Slider = {\n    mixins: [SliderAutoplay, SliderDrag, SliderNav],\n    props: {\n      clsActivated: Boolean,\n      easing: String,\n      index: Number,\n      finite: Boolean,\n      velocity: Number,\n      selSlides: String\n    },\n    data: function data() {\n      return {\n        easing: 'ease',\n        finite: false,\n        velocity: 1,\n        index: 0,\n        prevIndex: -1,\n        stack: [],\n        percent: 0,\n        clsActive: 'uk-active',\n        clsActivated: false,\n        Transitioner: false,\n        transitionOptions: {}\n      };\n    },\n    connected: function connected() {\n      this.prevIndex = -1;\n      this.index = this.getValidIndex(this.$props.index);\n      this.stack = [];\n    },\n    disconnected: function disconnected() {\n      removeClass(this.slides, this.clsActive);\n    },\n    computed: {\n      duration: function duration(ref, $el) {\n        var velocity = ref.velocity;\n        return speedUp($el.offsetWidth / velocity);\n      },\n      list: function list(ref, $el) {\n        var selList = ref.selList;\n        return $(selList, $el);\n      },\n      maxIndex: function maxIndex() {\n        return this.length - 1;\n      },\n      selSlides: function selSlides(ref) {\n        var selList = ref.selList;\n        var selSlides = ref.selSlides;\n        return selList + \" \" + (selSlides || '> *');\n      },\n      slides: {\n        get: function get() {\n          return $$(this.selSlides, this.$el);\n        },\n        watch: function watch() {\n          this.$reset();\n        }\n      },\n      length: function length() {\n        return this.slides.length;\n      }\n    },\n    events: {\n      itemshown: function itemshown() {\n        this.$update(this.list);\n      }\n    },\n    methods: {\n      show: function show(index, force) {\n        var this$1 = this;\n        if (force === void 0) force = false;\n\n        if (this.dragging || !this.length) {\n          return;\n        }\n\n        var ref = this;\n        var stack = ref.stack;\n        var queueIndex = force ? 0 : stack.length;\n\n        var reset = function reset() {\n          stack.splice(queueIndex, 1);\n\n          if (stack.length) {\n            this$1.show(stack.shift(), true);\n          }\n        };\n\n        stack[force ? 'unshift' : 'push'](index);\n\n        if (!force && stack.length > 1) {\n          if (stack.length === 2) {\n            this._transitioner.forward(Math.min(this.duration, 200));\n          }\n\n          return;\n        }\n\n        var prevIndex = this.getIndex(this.index);\n        var prev = hasClass(this.slides, this.clsActive) && this.slides[prevIndex];\n        var nextIndex = this.getIndex(index, this.index);\n        var next = this.slides[nextIndex];\n\n        if (prev === next) {\n          reset();\n          return;\n        }\n\n        this.dir = getDirection(index, prevIndex);\n        this.prevIndex = prevIndex;\n        this.index = nextIndex;\n\n        if (prev && !trigger(prev, 'beforeitemhide', [this]) || !trigger(next, 'beforeitemshow', [this, prev])) {\n          this.index = this.prevIndex;\n          reset();\n          return;\n        }\n\n        var promise = this._show(prev, next, force).then(function () {\n          prev && trigger(prev, 'itemhidden', [this$1]);\n          trigger(next, 'itemshown', [this$1]);\n          return new Promise(function (resolve) {\n            fastdom.write(function () {\n              stack.shift();\n\n              if (stack.length) {\n                this$1.show(stack.shift(), true);\n              } else {\n                this$1._transitioner = null;\n              }\n\n              resolve();\n            });\n          });\n        });\n\n        prev && trigger(prev, 'itemhide', [this]);\n        trigger(next, 'itemshow', [this]);\n        return promise;\n      },\n      getIndex: function getIndex(index, prev) {\n        if (index === void 0) index = this.index;\n        if (prev === void 0) prev = this.index;\n        return clamp(_getIndex(index, this.slides, prev, this.finite), 0, this.maxIndex);\n      },\n      getValidIndex: function getValidIndex(index, prevIndex) {\n        if (index === void 0) index = this.index;\n        if (prevIndex === void 0) prevIndex = this.prevIndex;\n        return this.getIndex(index, prevIndex);\n      },\n      _show: function _show(prev, next, force) {\n        this._transitioner = this._getTransitioner(prev, next, this.dir, assign({\n          easing: force ? next.offsetWidth < 600 ? 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'\n          /* easeOutQuad */\n          : 'cubic-bezier(0.165, 0.84, 0.44, 1)'\n          /* easeOutQuart */\n          : this.easing\n        }, this.transitionOptions));\n\n        if (!force && !prev) {\n          this._translate(1);\n\n          return Promise.resolve();\n        }\n\n        var ref = this.stack;\n        var length = ref.length;\n        return this._transitioner[length > 1 ? 'forward' : 'show'](length > 1 ? Math.min(this.duration, 75 + 75 / (length - 1)) : this.duration, this.percent);\n      },\n      _getDistance: function _getDistance(prev, next) {\n        return this._getTransitioner(prev, prev !== next && next).getDistance();\n      },\n      _translate: function _translate(percent, prev, next) {\n        if (prev === void 0) prev = this.prevIndex;\n        if (next === void 0) next = this.index;\n\n        var transitioner = this._getTransitioner(prev !== next ? prev : false, next);\n\n        transitioner.translate(percent);\n        return transitioner;\n      },\n      _getTransitioner: function _getTransitioner(prev, next, dir, options) {\n        if (prev === void 0) prev = this.prevIndex;\n        if (next === void 0) next = this.index;\n        if (dir === void 0) dir = this.dir || 1;\n        if (options === void 0) options = this.transitionOptions;\n        return new this.Transitioner(isNumber(prev) ? this.slides[prev] : prev, isNumber(next) ? this.slides[next] : next, dir * (isRtl ? -1 : 1), options);\n      }\n    }\n  };\n\n  function getDirection(index, prevIndex) {\n    return index === 'next' ? 1 : index === 'previous' ? -1 : index < prevIndex ? -1 : 1;\n  }\n\n  function speedUp(x) {\n    return .5 * x + 300; // parabola through (400,500; 600,600; 1800,1200)\n  }\n\n  var Slideshow = {\n    mixins: [Slider],\n    props: {\n      animation: String\n    },\n    data: {\n      animation: 'slide',\n      clsActivated: 'uk-transition-active',\n      Animations: Animations,\n      Transitioner: Transitioner\n    },\n    computed: {\n      animation: function animation(ref) {\n        var animation = ref.animation;\n        var Animations = ref.Animations;\n        return assign(Animations[animation] || Animations.slide, {\n          name: animation\n        });\n      },\n      transitionOptions: function transitionOptions() {\n        return {\n          animation: this.animation\n        };\n      }\n    },\n    events: {\n      'itemshow itemhide itemshown itemhidden': function itemshowItemhideItemshownItemhidden(ref) {\n        var target = ref.target;\n        this.$update(target);\n      },\n      beforeitemshow: function beforeitemshow(ref) {\n        var target = ref.target;\n        addClass(target, this.clsActive);\n      },\n      itemshown: function itemshown(ref) {\n        var target = ref.target;\n        addClass(target, this.clsActivated);\n      },\n      itemhidden: function itemhidden(ref) {\n        var target = ref.target;\n        removeClass(target, this.clsActive, this.clsActivated);\n      }\n    }\n  };\n  var LightboxPanel = {\n    mixins: [Container, Modal, Togglable, Slideshow],\n    functional: true,\n    props: {\n      delayControls: Number,\n      preload: Number,\n      videoAutoplay: Boolean,\n      template: String\n    },\n    data: function data() {\n      return {\n        preload: 1,\n        videoAutoplay: false,\n        delayControls: 3000,\n        items: [],\n        cls: 'uk-open',\n        clsPage: 'uk-lightbox-page',\n        selList: '.uk-lightbox-items',\n        attrItem: 'uk-lightbox-item',\n        selClose: '.uk-close-large',\n        selCaption: '.uk-lightbox-caption',\n        pauseOnHover: false,\n        velocity: 2,\n        Animations: Animations$1,\n        template: \"<div class=\\\"uk-lightbox uk-overflow-hidden\\\"> <ul class=\\\"uk-lightbox-items\\\"></ul> <div class=\\\"uk-lightbox-toolbar uk-position-top uk-text-right uk-transition-slide-top uk-transition-opaque\\\"> <button class=\\\"uk-lightbox-toolbar-icon uk-close-large\\\" type=\\\"button\\\" uk-close></button> </div> <a class=\\\"uk-lightbox-button uk-position-center-left uk-position-medium uk-transition-fade\\\" href uk-slidenav-previous uk-lightbox-item=\\\"previous\\\"></a> <a class=\\\"uk-lightbox-button uk-position-center-right uk-position-medium uk-transition-fade\\\" href uk-slidenav-next uk-lightbox-item=\\\"next\\\"></a> <div class=\\\"uk-lightbox-toolbar uk-lightbox-caption uk-position-bottom uk-text-center uk-transition-slide-bottom uk-transition-opaque\\\"></div> </div>\"\n      };\n    },\n    created: function created() {\n      var $el = $(this.template);\n      var list = $(this.selList, $el);\n      this.items.forEach(function () {\n        return append(list, '<li>');\n      });\n      this.$mount(append(this.container, $el));\n    },\n    computed: {\n      caption: function caption(ref, $el) {\n        var selCaption = ref.selCaption;\n        return $('.uk-lightbox-caption', $el);\n      }\n    },\n    events: [{\n      name: pointerMove + \" \" + pointerDown + \" keydown\",\n      handler: 'showControls'\n    }, {\n      name: 'click',\n      self: true,\n      delegate: function delegate() {\n        return this.selSlides;\n      },\n      handler: function handler(e) {\n        if (e.defaultPrevented) {\n          return;\n        }\n\n        this.hide();\n      }\n    }, {\n      name: 'shown',\n      self: true,\n      handler: function handler() {\n        this.showControls();\n      }\n    }, {\n      name: 'hide',\n      self: true,\n      handler: function handler() {\n        this.hideControls();\n        removeClass(this.slides, this.clsActive);\n        Transition.stop(this.slides);\n      }\n    }, {\n      name: 'hidden',\n      self: true,\n      handler: function handler() {\n        this.$destroy(true);\n      }\n    }, {\n      name: 'keyup',\n      el: inBrowser && document,\n      handler: function handler(e) {\n        if (!this.isToggled(this.$el) || !this.draggable) {\n          return;\n        }\n\n        switch (e.keyCode) {\n          case 37:\n            this.show('previous');\n            break;\n\n          case 39:\n            this.show('next');\n            break;\n        }\n      }\n    }, {\n      name: 'beforeitemshow',\n      handler: function handler(e) {\n        if (this.isToggled()) {\n          return;\n        }\n\n        this.draggable = false;\n        e.preventDefault();\n        this.toggleElement(this.$el, true, false);\n        this.animation = Animations$1['scale'];\n        removeClass(e.target, this.clsActive);\n        this.stack.splice(1, 0, this.index);\n      }\n    }, {\n      name: 'itemshow',\n      handler: function handler() {\n        html(this.caption, this.getItem().caption || '');\n\n        for (var j = -this.preload; j <= this.preload; j++) {\n          this.loadItem(this.index + j);\n        }\n      }\n    }, {\n      name: 'itemshown',\n      handler: function handler() {\n        this.draggable = this.$props.draggable;\n      }\n    }, {\n      name: 'itemload',\n      handler: function handler(_, item) {\n        var this$1 = this;\n        var src = item.source;\n        var type = item.type;\n        var alt = item.alt;\n        if (alt === void 0) alt = '';\n        var poster = item.poster;\n        var attrs = item.attrs;\n        if (attrs === void 0) attrs = {};\n        this.setItem(item, '<span uk-spinner></span>');\n\n        if (!src) {\n          return;\n        }\n\n        var matches;\n        var iframeAttrs = {\n          frameborder: '0',\n          allow: 'autoplay',\n          allowfullscreen: '',\n          style: 'max-width: 100%; box-sizing: border-box;',\n          'uk-responsive': '',\n          'uk-video': \"\" + this.videoAutoplay\n        }; // Image\n\n        if (type === 'image' || src.match(/\\.(jpe?g|png|gif|svg|webp)($|\\?)/i)) {\n          getImage(src, attrs.srcset, attrs.size).then(function (ref) {\n            var width = ref.width;\n            var height = ref.height;\n            return this$1.setItem(item, createEl('img', assign({\n              src: src,\n              width: width,\n              height: height,\n              alt: alt\n            }, attrs)));\n          }, function () {\n            return this$1.setError(item);\n          }); // Video\n        } else if (type === 'video' || src.match(/\\.(mp4|webm|ogv)($|\\?)/i)) {\n          var video = createEl('video', assign({\n            src: src,\n            poster: poster,\n            controls: '',\n            playsinline: '',\n            'uk-video': \"\" + this.videoAutoplay\n          }, attrs));\n          on(video, 'loadedmetadata', function () {\n            attr(video, {\n              width: video.videoWidth,\n              height: video.videoHeight\n            });\n            this$1.setItem(item, video);\n          });\n          on(video, 'error', function () {\n            return this$1.setError(item);\n          }); // Iframe\n        } else if (type === 'iframe' || src.match(/\\.(html|php)($|\\?)/i)) {\n          this.setItem(item, createEl('iframe', assign({\n            src: src,\n            frameborder: '0',\n            allowfullscreen: '',\n            \"class\": 'uk-lightbox-iframe'\n          }, attrs))); // YouTube\n        } else if (matches = src.match(/\\/\\/(?:.*?youtube(-nocookie)?\\..*?[?&]v=|youtu\\.be\\/)([\\w-]{11})[&?]?(.*)?/)) {\n          this.setItem(item, createEl('iframe', assign({\n            src: \"https://www.youtube\" + (matches[1] || '') + \".com/embed/\" + matches[2] + (matches[3] ? \"?\" + matches[3] : ''),\n            width: 1920,\n            height: 1080\n          }, iframeAttrs, attrs))); // Vimeo\n        } else if (matches = src.match(/\\/\\/.*?vimeo\\.[a-z]+\\/(\\d+)[&?]?(.*)?/)) {\n          ajax(\"https://vimeo.com/api/oembed.json?maxwidth=1920&url=\" + encodeURI(src), {\n            responseType: 'json',\n            withCredentials: false\n          }).then(function (ref) {\n            var ref_response = ref.response;\n            var height = ref_response.height;\n            var width = ref_response.width;\n            return this$1.setItem(item, createEl('iframe', assign({\n              src: \"https://player.vimeo.com/video/\" + matches[1] + (matches[2] ? \"?\" + matches[2] : ''),\n              width: width,\n              height: height\n            }, iframeAttrs, attrs)));\n          }, function () {\n            return this$1.setError(item);\n          });\n        }\n      }\n    }],\n    methods: {\n      loadItem: function loadItem(index) {\n        if (index === void 0) index = this.index;\n        var item = this.getItem(index);\n\n        if (!this.getSlide(item).childElementCount) {\n          trigger(this.$el, 'itemload', [item]);\n        }\n      },\n      getItem: function getItem(index) {\n        if (index === void 0) index = this.index;\n        return this.items[_getIndex(index, this.slides)];\n      },\n      setItem: function setItem(item, content) {\n        trigger(this.$el, 'itemloaded', [this, html(this.getSlide(item), content)]);\n      },\n      getSlide: function getSlide(item) {\n        return this.slides[this.items.indexOf(item)];\n      },\n      setError: function setError(item) {\n        this.setItem(item, '<span uk-icon=\"icon: bolt; ratio: 2\"></span>');\n      },\n      showControls: function showControls() {\n        clearTimeout(this.controlsTimer);\n        this.controlsTimer = setTimeout(this.hideControls, this.delayControls);\n        addClass(this.$el, 'uk-active', 'uk-transition-active');\n      },\n      hideControls: function hideControls() {\n        removeClass(this.$el, 'uk-active', 'uk-transition-active');\n      }\n    }\n  };\n\n  function createEl(tag, attrs) {\n    var el = fragment(\"<\" + tag + \">\");\n    attr(el, attrs);\n    return el;\n  }\n\n  var lightbox = {\n    install: install$2,\n    props: {\n      toggle: String\n    },\n    data: {\n      toggle: 'a'\n    },\n    computed: {\n      toggles: {\n        get: function get(ref, $el) {\n          var toggle = ref.toggle;\n          return $$(toggle, $el);\n        },\n        watch: function watch() {\n          this.hide();\n        }\n      }\n    },\n    disconnected: function disconnected() {\n      this.hide();\n    },\n    events: [{\n      name: 'click',\n      delegate: function delegate() {\n        return this.toggle + \":not(.uk-disabled)\";\n      },\n      handler: function handler(e) {\n        e.preventDefault();\n        this.show(e.current);\n      }\n    }],\n    methods: {\n      show: function show(index) {\n        var this$1 = this;\n        var items = uniqueBy(this.toggles.map(toItem), 'source');\n\n        if (isElement(index)) {\n          var ref = toItem(index);\n          var source = ref.source;\n          index = findIndex(items, function (ref) {\n            var src = ref.source;\n            return source === src;\n          });\n        }\n\n        this.panel = this.panel || this.$create('lightboxPanel', assign({}, this.$props, {\n          items: items\n        }));\n        on(this.panel.$el, 'hidden', function () {\n          return this$1.panel = false;\n        });\n        return this.panel.show(index);\n      },\n      hide: function hide() {\n        return this.panel && this.panel.hide();\n      }\n    }\n  };\n\n  function install$2(UIkit, Lightbox) {\n    if (!UIkit.lightboxPanel) {\n      UIkit.component('lightboxPanel', LightboxPanel);\n    }\n\n    assign(Lightbox.props, UIkit.component('lightboxPanel').options.props);\n  }\n\n  function toItem(el) {\n    var item = {};\n    ['href', 'caption', 'type', 'poster', 'alt', 'attrs'].forEach(function (attr) {\n      item[attr === 'href' ? 'source' : attr] = data(el, attr);\n    });\n    item.attrs = parseOptions(item.attrs);\n    return item;\n  }\n\n  var obj;\n  var notification = {\n    functional: true,\n    args: ['message', 'status'],\n    data: {\n      message: '',\n      status: '',\n      timeout: 5000,\n      group: null,\n      pos: 'top-center',\n      clsContainer: 'uk-notification',\n      clsClose: 'uk-notification-close',\n      clsMsg: 'uk-notification-message'\n    },\n    install: install$3,\n    computed: {\n      marginProp: function marginProp(ref) {\n        var pos = ref.pos;\n        return \"margin\" + (startsWith(pos, 'top') ? 'Top' : 'Bottom');\n      },\n      startProps: function startProps() {\n        var obj;\n        return obj = {\n          opacity: 0\n        }, obj[this.marginProp] = -this.$el.offsetHeight, obj;\n      }\n    },\n    created: function created() {\n      var container = $(\".\" + this.clsContainer + \"-\" + this.pos, this.$container) || append(this.$container, \"<div class=\\\"\" + this.clsContainer + \" \" + this.clsContainer + \"-\" + this.pos + \"\\\" style=\\\"display: block\\\"></div>\");\n      this.$mount(append(container, \"<div class=\\\"\" + this.clsMsg + (this.status ? \" \" + this.clsMsg + \"-\" + this.status : '') + \"\\\"> <a href class=\\\"\" + this.clsClose + \"\\\" data-uk-close></a> <div>\" + this.message + \"</div> </div>\"));\n    },\n    connected: function connected() {\n      var this$1 = this;\n      var obj;\n      var margin = toFloat(css(this.$el, this.marginProp));\n      Transition.start(css(this.$el, this.startProps), (obj = {\n        opacity: 1\n      }, obj[this.marginProp] = margin, obj)).then(function () {\n        if (this$1.timeout) {\n          this$1.timer = setTimeout(this$1.close, this$1.timeout);\n        }\n      });\n    },\n    events: (obj = {\n      click: function click(e) {\n        if (closest(e.target, 'a[href=\"#\"],a[href=\"\"]')) {\n          e.preventDefault();\n        }\n\n        this.close();\n      }\n    }, obj[pointerEnter] = function () {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    }, obj[pointerLeave] = function () {\n      if (this.timeout) {\n        this.timer = setTimeout(this.close, this.timeout);\n      }\n    }, obj),\n    methods: {\n      close: function close(immediate) {\n        var this$1 = this;\n\n        var removeFn = function removeFn(el) {\n          var container = parent(el);\n          trigger(el, 'close', [this$1]);\n\n          _remove(el);\n\n          if (container && !container.hasChildNodes()) {\n            _remove(container);\n          }\n        };\n\n        if (this.timer) {\n          clearTimeout(this.timer);\n        }\n\n        if (immediate) {\n          removeFn(this.$el);\n        } else {\n          Transition.start(this.$el, this.startProps).then(removeFn);\n        }\n      }\n    }\n  };\n\n  function install$3(UIkit) {\n    UIkit.notification.closeAll = function (group, immediate) {\n      apply(document.body, function (el) {\n        var notification = UIkit.getComponent(el, 'notification');\n\n        if (notification && (!group || group === notification.group)) {\n          notification.close(immediate);\n        }\n      });\n    };\n  }\n\n  var _props = ['x', 'y', 'bgx', 'bgy', 'rotate', 'scale', 'color', 'backgroundColor', 'borderColor', 'opacity', 'blur', 'hue', 'grayscale', 'invert', 'saturate', 'sepia', 'fopacity', 'stroke'];\n  var Parallax = {\n    mixins: [Media],\n    props: _props.reduce(function (props, prop) {\n      props[prop] = 'list';\n      return props;\n    }, {}),\n    data: _props.reduce(function (data, prop) {\n      data[prop] = undefined;\n      return data;\n    }, {}),\n    computed: {\n      props: function props(properties, $el) {\n        var this$1 = this;\n        return _props.reduce(function (props, prop) {\n          if (isUndefined(properties[prop])) {\n            return props;\n          }\n\n          var isColor = prop.match(/color/i);\n          var isCssProp = isColor || prop === 'opacity';\n          var pos, bgPos, diff;\n          var steps = properties[prop].slice();\n\n          if (isCssProp) {\n            css($el, prop, '');\n          }\n\n          if (steps.length < 2) {\n            steps.unshift((prop === 'scale' ? 1 : isCssProp ? css($el, prop) : 0) || 0);\n          }\n\n          var unit = getUnit(steps);\n\n          if (isColor) {\n            var ref = $el.style;\n            var color = ref.color;\n            steps = steps.map(function (step) {\n              return parseColor($el, step);\n            });\n            $el.style.color = color;\n          } else if (startsWith(prop, 'bg')) {\n            var attr = prop === 'bgy' ? 'height' : 'width';\n            steps = steps.map(function (step) {\n              return toPx(step, attr, this$1.$el);\n            });\n            css($el, \"background-position-\" + prop[2], '');\n            bgPos = css($el, 'backgroundPosition').split(' ')[prop[2] === 'x' ? 0 : 1]; // IE 11 can't read background-position-[x|y]\n\n            if (this$1.covers) {\n              var min = Math.min.apply(Math, steps);\n              var max = Math.max.apply(Math, steps);\n              var down = steps.indexOf(min) < steps.indexOf(max);\n              diff = max - min;\n              steps = steps.map(function (step) {\n                return step - (down ? min : max);\n              });\n              pos = (down ? -diff : 0) + \"px\";\n            } else {\n              pos = bgPos;\n            }\n          } else {\n            steps = steps.map(toFloat);\n          }\n\n          if (prop === 'stroke') {\n            if (!steps.some(function (step) {\n              return step;\n            })) {\n              return props;\n            }\n\n            var length = getMaxPathLength(this$1.$el);\n            css($el, 'strokeDasharray', length);\n\n            if (unit === '%') {\n              steps = steps.map(function (step) {\n                return step * length / 100;\n              });\n            }\n\n            steps = steps.reverse();\n            prop = 'strokeDashoffset';\n          }\n\n          props[prop] = {\n            steps: steps,\n            unit: unit,\n            pos: pos,\n            bgPos: bgPos,\n            diff: diff\n          };\n          return props;\n        }, {});\n      },\n      bgProps: function bgProps() {\n        var this$1 = this;\n        return ['bgx', 'bgy'].filter(function (bg) {\n          return bg in this$1.props;\n        });\n      },\n      covers: function covers(_, $el) {\n        return _covers($el);\n      }\n    },\n    disconnected: function disconnected() {\n      delete this._image;\n    },\n    update: {\n      read: function read(data) {\n        var this$1 = this;\n        data.active = this.matchMedia;\n\n        if (!data.active) {\n          return;\n        }\n\n        if (!data.image && this.covers && this.bgProps.length) {\n          var src = css(this.$el, 'backgroundImage').replace(/^none|url\\([\"']?(.+?)[\"']?\\)$/, '$1');\n\n          if (src) {\n            var img = new Image();\n            img.src = src;\n            data.image = img;\n\n            if (!img.naturalWidth) {\n              img.onload = function () {\n                return this$1.$update();\n              };\n            }\n          }\n        }\n\n        var image = data.image;\n\n        if (!image || !image.naturalWidth) {\n          return;\n        }\n\n        var dimEl = {\n          width: this.$el.offsetWidth,\n          height: this.$el.offsetHeight\n        };\n        var dimImage = {\n          width: image.naturalWidth,\n          height: image.naturalHeight\n        };\n        var dim = Dimensions.cover(dimImage, dimEl);\n        this.bgProps.forEach(function (prop) {\n          var ref = this$1.props[prop];\n          var diff = ref.diff;\n          var bgPos = ref.bgPos;\n          var steps = ref.steps;\n          var attr = prop === 'bgy' ? 'height' : 'width';\n          var span = dim[attr] - dimEl[attr];\n\n          if (span < diff) {\n            dimEl[attr] = dim[attr] + diff - span;\n          } else if (span > diff) {\n            var posPercentage = dimEl[attr] / toPx(bgPos, attr, this$1.$el);\n\n            if (posPercentage) {\n              this$1.props[prop].steps = steps.map(function (step) {\n                return step - (span - diff) / posPercentage;\n              });\n            }\n          }\n\n          dim = Dimensions.cover(dimImage, dimEl);\n        });\n        data.dim = dim;\n      },\n      write: function write(ref) {\n        var dim = ref.dim;\n        var active = ref.active;\n\n        if (!active) {\n          css(this.$el, {\n            backgroundSize: '',\n            backgroundRepeat: ''\n          });\n          return;\n        }\n\n        dim && css(this.$el, {\n          backgroundSize: dim.width + \"px \" + dim.height + \"px\",\n          backgroundRepeat: 'no-repeat'\n        });\n      },\n      events: ['resize']\n    },\n    methods: {\n      reset: function reset() {\n        var this$1 = this;\n        each(this.getCss(0), function (_, prop) {\n          return css(this$1.$el, prop, '');\n        });\n      },\n      getCss: function getCss(percent) {\n        var ref = this;\n        var props = ref.props;\n        return Object.keys(props).reduce(function (css, prop) {\n          var ref = props[prop];\n          var steps = ref.steps;\n          var unit = ref.unit;\n          var pos = ref.pos;\n          var value = getValue(steps, percent);\n\n          switch (prop) {\n            // transforms\n            case 'x':\n            case 'y':\n              {\n                unit = unit || 'px';\n                css.transform += \" translate\" + ucfirst(prop) + \"(\" + toFloat(value).toFixed(unit === 'px' ? 0 : 2) + unit + \")\";\n                break;\n              }\n\n            case 'rotate':\n              unit = unit || 'deg';\n              css.transform += \" rotate(\" + (value + unit) + \")\";\n              break;\n\n            case 'scale':\n              css.transform += \" scale(\" + value + \")\";\n              break;\n            // bg image\n\n            case 'bgy':\n            case 'bgx':\n              css[\"background-position-\" + prop[2]] = \"calc(\" + pos + \" + \" + value + \"px)\";\n              break;\n            // color\n\n            case 'color':\n            case 'backgroundColor':\n            case 'borderColor':\n              {\n                var ref$1 = getStep(steps, percent);\n                var start = ref$1[0];\n                var end = ref$1[1];\n                var p = ref$1[2];\n                css[prop] = \"rgba(\" + start.map(function (value, i) {\n                  value = value + p * (end[i] - value);\n                  return i === 3 ? toFloat(value) : parseInt(value, 10);\n                }).join(',') + \")\";\n                break;\n              }\n            // CSS Filter\n\n            case 'blur':\n              unit = unit || 'px';\n              css.filter += \" blur(\" + (value + unit) + \")\";\n              break;\n\n            case 'hue':\n              unit = unit || 'deg';\n              css.filter += \" hue-rotate(\" + (value + unit) + \")\";\n              break;\n\n            case 'fopacity':\n              unit = unit || '%';\n              css.filter += \" opacity(\" + (value + unit) + \")\";\n              break;\n\n            case 'grayscale':\n            case 'invert':\n            case 'saturate':\n            case 'sepia':\n              unit = unit || '%';\n              css.filter += \" \" + prop + \"(\" + (value + unit) + \")\";\n              break;\n\n            default:\n              css[prop] = value;\n          }\n\n          return css;\n        }, {\n          transform: '',\n          filter: ''\n        });\n      }\n    }\n  };\n\n  function parseColor(el, color) {\n    return css(css(el, 'color', color), 'color').split(/[(),]/g).slice(1, -1).concat(1).slice(0, 4).map(toFloat);\n  }\n\n  function getStep(steps, percent) {\n    var count = steps.length - 1;\n    var index = Math.min(Math.floor(count * percent), count - 1);\n    var step = steps.slice(index, index + 2);\n    step.push(percent === 1 ? 1 : percent % (1 / count) * count);\n    return step;\n  }\n\n  function getValue(steps, percent, digits) {\n    if (digits === void 0) digits = 2;\n    var ref = getStep(steps, percent);\n    var start = ref[0];\n    var end = ref[1];\n    var p = ref[2];\n    return (isNumber(start) ? start + Math.abs(start - end) * p * (start < end ? 1 : -1) : +end).toFixed(digits);\n  }\n\n  function getUnit(steps) {\n    return steps.reduce(function (unit, step) {\n      return isString(step) && step.replace(/-|\\d/g, '').trim() || unit;\n    }, '');\n  }\n\n  function _covers(el) {\n    var ref = el.style;\n    var backgroundSize = ref.backgroundSize;\n    var covers = css(css(el, 'backgroundSize', ''), 'backgroundSize') === 'cover';\n    el.style.backgroundSize = backgroundSize;\n    return covers;\n  }\n\n  var parallax = {\n    mixins: [Parallax],\n    props: {\n      target: String,\n      viewport: Number,\n      easing: Number\n    },\n    data: {\n      target: false,\n      viewport: 1,\n      easing: 1\n    },\n    computed: {\n      target: function target(ref, $el) {\n        var target = ref.target;\n        return getOffsetElement(target && query(target, $el) || $el);\n      }\n    },\n    update: {\n      read: function read(ref, type) {\n        var percent = ref.percent;\n        var active = ref.active;\n\n        if (type !== 'scroll') {\n          percent = false;\n        }\n\n        if (!active) {\n          return;\n        }\n\n        var prev = percent;\n        percent = ease(scrolledOver(this.target) / (this.viewport || 1), this.easing);\n        return {\n          percent: percent,\n          style: prev !== percent ? this.getCss(percent) : false\n        };\n      },\n      write: function write(ref) {\n        var style = ref.style;\n        var active = ref.active;\n\n        if (!active) {\n          this.reset();\n          return;\n        }\n\n        style && css(this.$el, style);\n      },\n      events: ['scroll', 'resize']\n    }\n  };\n\n  function ease(percent, easing) {\n    return clamp(percent * (1 - (easing - easing * percent)));\n  } // SVG elements do not inherit from HTMLElement\n\n\n  function getOffsetElement(el) {\n    return el ? 'offsetTop' in el ? el : getOffsetElement(parent(el)) : document.body;\n  }\n\n  var SliderReactive = {\n    update: {\n      write: function write() {\n        if (this.stack.length || this.dragging) {\n          return;\n        }\n\n        var index = this.getValidIndex(this.index);\n\n        if (!~this.prevIndex || this.index !== index) {\n          this.show(index);\n        }\n      },\n      events: ['resize']\n    }\n  };\n\n  function Transitioner$1(prev, next, dir, ref) {\n    var center = ref.center;\n    var easing = ref.easing;\n    var list = ref.list;\n    var deferred = new Deferred();\n    var from = prev ? getLeft(prev, list, center) : getLeft(next, list, center) + dimensions(next).width * dir;\n    var to = next ? getLeft(next, list, center) : from + dimensions(prev).width * dir * (isRtl ? -1 : 1);\n    return {\n      dir: dir,\n      show: function show(duration, percent, linear) {\n        if (percent === void 0) percent = 0;\n        var timing = linear ? 'linear' : easing;\n        duration -= Math.round(duration * clamp(percent, -1, 1));\n        this.translate(percent);\n        prev && this.updateTranslates();\n        percent = prev ? percent : clamp(percent, 0, 1);\n        triggerUpdate$1(this.getItemIn(), 'itemin', {\n          percent: percent,\n          duration: duration,\n          timing: timing,\n          dir: dir\n        });\n        prev && triggerUpdate$1(this.getItemIn(true), 'itemout', {\n          percent: 1 - percent,\n          duration: duration,\n          timing: timing,\n          dir: dir\n        });\n        Transition.start(list, {\n          transform: _translate(-to * (isRtl ? -1 : 1), 'px')\n        }, duration, timing).then(deferred.resolve, noop);\n        return deferred.promise;\n      },\n      cancel: function cancel() {\n        Transition.cancel(list);\n      },\n      reset: function reset() {\n        css(list, 'transform', '');\n      },\n      forward: function forward(duration, percent) {\n        if (percent === void 0) percent = this.percent();\n        Transition.cancel(list);\n        return this.show(duration, percent, true);\n      },\n      translate: function translate(percent) {\n        var distance = this.getDistance() * dir * (isRtl ? -1 : 1);\n        css(list, 'transform', _translate(clamp(-to + (distance - distance * percent), -getWidth(list), dimensions(list).width) * (isRtl ? -1 : 1), 'px'));\n        this.updateTranslates();\n\n        if (prev) {\n          percent = clamp(percent, -1, 1);\n          triggerUpdate$1(this.getItemIn(), 'itemtranslatein', {\n            percent: percent,\n            dir: dir\n          });\n          triggerUpdate$1(this.getItemIn(true), 'itemtranslateout', {\n            percent: 1 - percent,\n            dir: dir\n          });\n        }\n      },\n      percent: function percent() {\n        return Math.abs((css(list, 'transform').split(',')[4] * (isRtl ? -1 : 1) + from) / (to - from));\n      },\n      getDistance: function getDistance() {\n        return Math.abs(to - from);\n      },\n      getItemIn: function getItemIn(out) {\n        if (out === void 0) out = false;\n        var actives = sortBy(this.getActives(), 'offsetLeft');\n        var all = sortBy(_children(list), 'offsetLeft');\n        var i = index(all, actives[dir * (out ? -1 : 1) > 0 ? actives.length - 1 : 0]);\n        return ~i && all[i + (prev && !out ? dir : 0)];\n      },\n      getActives: function getActives() {\n        return [prev || next].concat(_children(list).filter(function (slide) {\n          var slideLeft = getElLeft(slide, list);\n          return slideLeft > from && slideLeft + dimensions(slide).width <= dimensions(list).width + from;\n        }));\n      },\n      updateTranslates: function updateTranslates() {\n        var actives = this.getActives();\n\n        _children(list).forEach(function (slide) {\n          var isActive = includes(actives, slide);\n          triggerUpdate$1(slide, \"itemtranslate\" + (isActive ? 'in' : 'out'), {\n            percent: isActive ? 1 : 0,\n            dir: slide.offsetLeft <= next.offsetLeft ? 1 : -1\n          });\n        });\n      }\n    };\n  }\n\n  function getLeft(el, list, center) {\n    var left = getElLeft(el, list);\n    return center ? left - centerEl(el, list) : Math.min(left, getMax(list));\n  }\n\n  function getMax(list) {\n    return Math.max(0, getWidth(list) - dimensions(list).width);\n  }\n\n  function getWidth(list) {\n    return _children(list).reduce(function (right, el) {\n      return dimensions(el).width + right;\n    }, 0);\n  }\n\n  function centerEl(el, list) {\n    return dimensions(list).width / 2 - dimensions(el).width / 2;\n  }\n\n  function getElLeft(el, list) {\n    return el && (position(el).left + (isRtl ? dimensions(el).width - dimensions(list).width : 0)) * (isRtl ? -1 : 1) || 0;\n  }\n\n  function triggerUpdate$1(el, type, data) {\n    trigger(el, createEvent(type, false, false, data));\n  }\n\n  var slider = {\n    mixins: [Class, Slider, SliderReactive],\n    props: {\n      center: Boolean,\n      sets: Boolean\n    },\n    data: {\n      center: false,\n      sets: false,\n      attrItem: 'uk-slider-item',\n      selList: '.uk-slider-items',\n      selNav: '.uk-slider-nav',\n      clsContainer: 'uk-slider-container',\n      Transitioner: Transitioner$1\n    },\n    computed: {\n      avgWidth: function avgWidth() {\n        return getWidth(this.list) / this.length;\n      },\n      finite: function finite(ref) {\n        var finite = ref.finite;\n        return finite || Math.ceil(getWidth(this.list)) < dimensions(this.list).width + getMaxElWidth(this.list) + this.center;\n      },\n      maxIndex: function maxIndex() {\n        var this$1 = this;\n\n        if (!this.finite || this.center && !this.sets) {\n          return this.length - 1;\n        }\n\n        if (this.center) {\n          return last(this.sets);\n        }\n\n        css(this.slides, 'order', '');\n        var max = getMax(this.list);\n        var index = findIndex(this.slides, function (el) {\n          return getElLeft(el, this$1.list) >= max;\n        });\n        return ~index ? index : this.length - 1;\n      },\n      sets: function sets(ref) {\n        var this$1 = this;\n        var sets = ref.sets;\n\n        if (!sets) {\n          return;\n        }\n\n        var width = dimensions(this.list).width / (this.center ? 2 : 1);\n        var left = 0;\n        var leftCenter = width;\n        var slideLeft = 0;\n        sets = sortBy(this.slides, 'offsetLeft').reduce(function (sets, slide, i) {\n          var slideWidth = dimensions(slide).width;\n          var slideRight = slideLeft + slideWidth;\n\n          if (slideRight > left) {\n            if (!this$1.center && i > this$1.maxIndex) {\n              i = this$1.maxIndex;\n            }\n\n            if (!includes(sets, i)) {\n              var cmp = this$1.slides[i + 1];\n\n              if (this$1.center && cmp && slideWidth < leftCenter - dimensions(cmp).width / 2) {\n                leftCenter -= slideWidth;\n              } else {\n                leftCenter = width;\n                sets.push(i);\n                left = slideLeft + width + (this$1.center ? slideWidth / 2 : 0);\n              }\n            }\n          }\n\n          slideLeft += slideWidth;\n          return sets;\n        }, []);\n        return !isEmpty(sets) && sets;\n      },\n      transitionOptions: function transitionOptions() {\n        return {\n          center: this.center,\n          list: this.list\n        };\n      }\n    },\n    connected: function connected() {\n      toggleClass(this.$el, this.clsContainer, !$(\".\" + this.clsContainer, this.$el));\n    },\n    update: {\n      write: function write() {\n        var this$1 = this;\n        this.navItems.forEach(function (el) {\n          var index = toNumber(data(el, this$1.attrItem));\n\n          if (index !== false) {\n            el.hidden = !this$1.maxIndex || index > this$1.maxIndex || this$1.sets && !includes(this$1.sets, index);\n          }\n        });\n\n        if (this.length && !this.dragging && !this.stack.length) {\n          this.reorder();\n\n          this._translate(1);\n        }\n\n        var actives = this._getTransitioner(this.index).getActives();\n\n        this.slides.forEach(function (slide) {\n          return toggleClass(slide, this$1.clsActive, includes(actives, slide));\n        });\n        (!this.sets || includes(this.sets, toFloat(this.index))) && this.slides.forEach(function (slide) {\n          return toggleClass(slide, this$1.clsActivated, includes(actives, slide));\n        });\n      },\n      events: ['resize']\n    },\n    events: {\n      beforeitemshow: function beforeitemshow(e) {\n        if (!this.dragging && this.sets && this.stack.length < 2 && !includes(this.sets, this.index)) {\n          this.index = this.getValidIndex();\n        }\n\n        var diff = Math.abs(this.index - this.prevIndex + (this.dir > 0 && this.index < this.prevIndex || this.dir < 0 && this.index > this.prevIndex ? (this.maxIndex + 1) * this.dir : 0));\n\n        if (!this.dragging && diff > 1) {\n          for (var i = 0; i < diff; i++) {\n            this.stack.splice(1, 0, this.dir > 0 ? 'next' : 'previous');\n          }\n\n          e.preventDefault();\n          return;\n        }\n\n        var index = this.dir < 0 || !this.slides[this.prevIndex] ? this.index : this.prevIndex;\n        this.duration = speedUp(this.avgWidth / this.velocity) * (dimensions(this.slides[index]).width / this.avgWidth);\n        this.reorder();\n      },\n      itemshow: function itemshow() {\n        ~this.prevIndex && addClass(this._getTransitioner().getItemIn(), this.clsActive);\n      }\n    },\n    methods: {\n      reorder: function reorder() {\n        var this$1 = this;\n\n        if (this.finite) {\n          css(this.slides, 'order', '');\n          return;\n        }\n\n        var index = this.dir > 0 && this.slides[this.prevIndex] ? this.prevIndex : this.index;\n        this.slides.forEach(function (slide, i) {\n          return css(slide, 'order', this$1.dir > 0 && i < index ? 1 : this$1.dir < 0 && i >= this$1.index ? -1 : '');\n        });\n\n        if (!this.center) {\n          return;\n        }\n\n        var next = this.slides[index];\n        var width = dimensions(this.list).width / 2 - dimensions(next).width / 2;\n        var j = 0;\n\n        while (width > 0) {\n          var slideIndex = this.getIndex(--j + index, index);\n          var slide = this.slides[slideIndex];\n          css(slide, 'order', slideIndex > index ? -2 : -1);\n          width -= dimensions(slide).width;\n        }\n      },\n      getValidIndex: function getValidIndex(index, prevIndex) {\n        if (index === void 0) index = this.index;\n        if (prevIndex === void 0) prevIndex = this.prevIndex;\n        index = this.getIndex(index, prevIndex);\n\n        if (!this.sets) {\n          return index;\n        }\n\n        var prev;\n\n        do {\n          if (includes(this.sets, index)) {\n            return index;\n          }\n\n          prev = index;\n          index = this.getIndex(index + this.dir, prevIndex);\n        } while (index !== prev);\n\n        return index;\n      }\n    }\n  };\n\n  function getMaxElWidth(list) {\n    return Math.max.apply(Math, [0].concat(_children(list).map(function (el) {\n      return dimensions(el).width;\n    })));\n  }\n\n  var sliderParallax = {\n    mixins: [Parallax],\n    data: {\n      selItem: '!li'\n    },\n    computed: {\n      item: function item(ref, $el) {\n        var selItem = ref.selItem;\n        return query(selItem, $el);\n      }\n    },\n    events: [{\n      name: 'itemin itemout',\n      self: true,\n      el: function el() {\n        return this.item;\n      },\n      handler: function handler(ref) {\n        var this$1 = this;\n        var type = ref.type;\n        var ref_detail = ref.detail;\n        var percent = ref_detail.percent;\n        var duration = ref_detail.duration;\n        var timing = ref_detail.timing;\n        var dir = ref_detail.dir;\n        fastdom.read(function () {\n          var propsFrom = this$1.getCss(getCurrentPercent(type, dir, percent));\n          var propsTo = this$1.getCss(isIn(type) ? .5 : dir > 0 ? 1 : 0);\n          fastdom.write(function () {\n            css(this$1.$el, propsFrom);\n            Transition.start(this$1.$el, propsTo, duration, timing)[\"catch\"](noop);\n          });\n        });\n      }\n    }, {\n      name: 'transitioncanceled transitionend',\n      self: true,\n      el: function el() {\n        return this.item;\n      },\n      handler: function handler() {\n        Transition.cancel(this.$el);\n      }\n    }, {\n      name: 'itemtranslatein itemtranslateout',\n      self: true,\n      el: function el() {\n        return this.item;\n      },\n      handler: function handler(ref) {\n        var this$1 = this;\n        var type = ref.type;\n        var ref_detail = ref.detail;\n        var percent = ref_detail.percent;\n        var dir = ref_detail.dir;\n        fastdom.read(function () {\n          var props = this$1.getCss(getCurrentPercent(type, dir, percent));\n          fastdom.write(function () {\n            return css(this$1.$el, props);\n          });\n        });\n      }\n    }]\n  };\n\n  function isIn(type) {\n    return endsWith(type, 'in');\n  }\n\n  function getCurrentPercent(type, dir, percent) {\n    percent /= 2;\n    return !isIn(type) ? dir < 0 ? percent : 1 - percent : dir < 0 ? 1 - percent : percent;\n  }\n\n  var Animations$2 = assign({}, Animations, {\n    fade: {\n      show: function show() {\n        return [{\n          opacity: 0,\n          zIndex: 0\n        }, {\n          zIndex: -1\n        }];\n      },\n      percent: function percent(current) {\n        return 1 - css(current, 'opacity');\n      },\n      translate: function translate(percent) {\n        return [{\n          opacity: 1 - percent,\n          zIndex: 0\n        }, {\n          zIndex: -1\n        }];\n      }\n    },\n    scale: {\n      show: function show() {\n        return [{\n          opacity: 0,\n          transform: scale3d(1 + .5),\n          zIndex: 0\n        }, {\n          zIndex: -1\n        }];\n      },\n      percent: function percent(current) {\n        return 1 - css(current, 'opacity');\n      },\n      translate: function translate(percent) {\n        return [{\n          opacity: 1 - percent,\n          transform: scale3d(1 + .5 * percent),\n          zIndex: 0\n        }, {\n          zIndex: -1\n        }];\n      }\n    },\n    pull: {\n      show: function show(dir) {\n        return dir < 0 ? [{\n          transform: _translate(30),\n          zIndex: -1\n        }, {\n          transform: _translate(),\n          zIndex: 0\n        }] : [{\n          transform: _translate(-100),\n          zIndex: 0\n        }, {\n          transform: _translate(),\n          zIndex: -1\n        }];\n      },\n      percent: function percent(current, next, dir) {\n        return dir < 0 ? 1 - translated(next) : translated(current);\n      },\n      translate: function translate(percent, dir) {\n        return dir < 0 ? [{\n          transform: _translate(30 * percent),\n          zIndex: -1\n        }, {\n          transform: _translate(-100 * (1 - percent)),\n          zIndex: 0\n        }] : [{\n          transform: _translate(-percent * 100),\n          zIndex: 0\n        }, {\n          transform: _translate(30 * (1 - percent)),\n          zIndex: -1\n        }];\n      }\n    },\n    push: {\n      show: function show(dir) {\n        return dir < 0 ? [{\n          transform: _translate(100),\n          zIndex: 0\n        }, {\n          transform: _translate(),\n          zIndex: -1\n        }] : [{\n          transform: _translate(-30),\n          zIndex: -1\n        }, {\n          transform: _translate(),\n          zIndex: 0\n        }];\n      },\n      percent: function percent(current, next, dir) {\n        return dir > 0 ? 1 - translated(next) : translated(current);\n      },\n      translate: function translate(percent, dir) {\n        return dir < 0 ? [{\n          transform: _translate(percent * 100),\n          zIndex: 0\n        }, {\n          transform: _translate(-30 * (1 - percent)),\n          zIndex: -1\n        }] : [{\n          transform: _translate(-30 * percent),\n          zIndex: -1\n        }, {\n          transform: _translate(100 * (1 - percent)),\n          zIndex: 0\n        }];\n      }\n    }\n  });\n  var slideshow = {\n    mixins: [Class, Slideshow, SliderReactive],\n    props: {\n      ratio: String,\n      minHeight: Number,\n      maxHeight: Number\n    },\n    data: {\n      ratio: '16:9',\n      minHeight: false,\n      maxHeight: false,\n      selList: '.uk-slideshow-items',\n      attrItem: 'uk-slideshow-item',\n      selNav: '.uk-slideshow-nav',\n      Animations: Animations$2\n    },\n    update: {\n      read: function read() {\n        var ref = this.ratio.split(':').map(Number);\n        var width = ref[0];\n        var height = ref[1];\n        height = height * this.list.offsetWidth / width || 0;\n\n        if (this.minHeight) {\n          height = Math.max(this.minHeight, height);\n        }\n\n        if (this.maxHeight) {\n          height = Math.min(this.maxHeight, height);\n        }\n\n        return {\n          height: height - boxModelAdjust(this.list, 'height', 'content-box')\n        };\n      },\n      write: function write(ref) {\n        var height = ref.height;\n        height > 0 && css(this.list, 'minHeight', height);\n      },\n      events: ['resize']\n    }\n  };\n  var sortable = {\n    mixins: [Class, Animate],\n    props: {\n      group: String,\n      threshold: Number,\n      clsItem: String,\n      clsPlaceholder: String,\n      clsDrag: String,\n      clsDragState: String,\n      clsBase: String,\n      clsNoDrag: String,\n      clsEmpty: String,\n      clsCustom: String,\n      handle: String\n    },\n    data: {\n      group: false,\n      threshold: 5,\n      clsItem: 'uk-sortable-item',\n      clsPlaceholder: 'uk-sortable-placeholder',\n      clsDrag: 'uk-sortable-drag',\n      clsDragState: 'uk-drag',\n      clsBase: 'uk-sortable',\n      clsNoDrag: 'uk-sortable-nodrag',\n      clsEmpty: 'uk-sortable-empty',\n      clsCustom: '',\n      handle: false,\n      pos: {}\n    },\n    created: function created() {\n      var this$1 = this;\n      ['init', 'start', 'move', 'end'].forEach(function (key) {\n        var fn = this$1[key];\n\n        this$1[key] = function (e) {\n          assign(this$1.pos, getEventPos(e));\n          fn(e);\n        };\n      });\n    },\n    events: {\n      name: pointerDown,\n      passive: false,\n      handler: 'init'\n    },\n    computed: {\n      target: function target() {\n        return (this.$el.tBodies || [this.$el])[0];\n      },\n      items: function items() {\n        return _children(this.target);\n      },\n      isEmpty: {\n        get: function get() {\n          return isEmpty(this.items);\n        },\n        watch: function watch(empty) {\n          toggleClass(this.target, this.clsEmpty, empty);\n        },\n        immediate: true\n      },\n      handles: {\n        get: function get(ref, el) {\n          var handle = ref.handle;\n          return handle ? $$(handle, el) : this.items;\n        },\n        watch: function watch(handles, prev) {\n          css(prev, {\n            touchAction: '',\n            userSelect: ''\n          });\n          css(handles, {\n            touchAction: hasTouch ? 'none' : '',\n            userSelect: 'none'\n          }); // touchAction set to 'none' causes a performance drop in Chrome 80\n        },\n        immediate: true\n      }\n    },\n    update: {\n      write: function write() {\n        if (!this.drag || !parent(this.placeholder)) {\n          return;\n        }\n\n        var ref = this;\n        var ref_pos = ref.pos;\n        var x = ref_pos.x;\n        var y = ref_pos.y;\n        var ref_origin = ref.origin;\n        var offsetTop = ref_origin.offsetTop;\n        var offsetLeft = ref_origin.offsetLeft;\n        var placeholder = ref.placeholder;\n        css(this.drag, {\n          top: y - offsetTop,\n          left: x - offsetLeft\n        });\n        var sortable = this.getSortable(document.elementFromPoint(x, y));\n\n        if (!sortable) {\n          return;\n        }\n\n        var items = sortable.items;\n\n        if (items.some(Transition.inProgress)) {\n          return;\n        }\n\n        var target = findTarget(items, {\n          x: x,\n          y: y\n        });\n\n        if (items.length && (!target || target === placeholder)) {\n          return;\n        }\n\n        this.touched.add(sortable);\n        var previous = this.getSortable(placeholder);\n\n        if (sortable !== previous) {\n          previous.remove(placeholder);\n        }\n\n        sortable.insert(placeholder, findInsertTarget(sortable.target, target, placeholder, x, y));\n      },\n      events: ['move']\n    },\n    methods: {\n      init: function init(e) {\n        var target = e.target;\n        var button = e.button;\n        var defaultPrevented = e.defaultPrevented;\n        var ref = this.items.filter(function (el) {\n          return within(target, el);\n        });\n        var placeholder = ref[0];\n\n        if (!placeholder || defaultPrevented || button > 0 || isInput(target) || within(target, \".\" + this.clsNoDrag) || this.handle && !within(target, this.handle)) {\n          return;\n        }\n\n        e.preventDefault();\n        this.touched = new Set([this]);\n        this.placeholder = placeholder;\n        this.origin = assign({\n          target: target,\n          index: index(placeholder)\n        }, this.pos);\n        on(document, pointerMove, this.move);\n        on(document, pointerUp, this.end);\n\n        if (!this.threshold) {\n          this.start(e);\n        }\n      },\n      start: function start(e) {\n        this.drag = appendDrag(this.$container, this.placeholder);\n        var ref = this.placeholder.getBoundingClientRect();\n        var left = ref.left;\n        var top = ref.top;\n        assign(this.origin, {\n          offsetLeft: this.pos.x - left,\n          offsetTop: this.pos.y - top\n        });\n        addClass(this.drag, this.clsDrag, this.clsCustom);\n        addClass(this.placeholder, this.clsPlaceholder);\n        addClass(this.items, this.clsItem);\n        addClass(document.documentElement, this.clsDragState);\n        trigger(this.$el, 'start', [this, this.placeholder]);\n        trackScroll(this.pos);\n        this.move(e);\n      },\n      move: function move(e) {\n        if (this.drag) {\n          this.$emit('move');\n        } else if (Math.abs(this.pos.x - this.origin.x) > this.threshold || Math.abs(this.pos.y - this.origin.y) > this.threshold) {\n          this.start(e);\n        }\n      },\n      end: function end() {\n        var this$1 = this;\n        off(document, pointerMove, this.move);\n        off(document, pointerUp, this.end);\n        off(window, 'scroll', this.scroll);\n\n        if (!this.drag) {\n          return;\n        }\n\n        untrackScroll();\n        var sortable = this.getSortable(this.placeholder);\n\n        if (this === sortable) {\n          if (this.origin.index !== index(this.placeholder)) {\n            trigger(this.$el, 'moved', [this, this.placeholder]);\n          }\n        } else {\n          trigger(sortable.$el, 'added', [sortable, this.placeholder]);\n          trigger(this.$el, 'removed', [this, this.placeholder]);\n        }\n\n        trigger(this.$el, 'stop', [this, this.placeholder]);\n\n        _remove(this.drag);\n\n        this.drag = null;\n        this.touched.forEach(function (ref) {\n          var clsPlaceholder = ref.clsPlaceholder;\n          var clsItem = ref.clsItem;\n          return this$1.touched.forEach(function (sortable) {\n            return removeClass(sortable.items, clsPlaceholder, clsItem);\n          });\n        });\n        this.touched = null;\n        removeClass(document.documentElement, this.clsDragState);\n      },\n      insert: function insert(element, target) {\n        var this$1 = this;\n\n        if (target && (element === target || element === target.previousElementSibling)) {\n          return;\n        }\n\n        addClass(this.items, this.clsItem);\n\n        var insert = function insert() {\n          return target ? before(target, element) : append(this$1.target, element);\n        };\n\n        if (this.animation) {\n          this.animate(insert);\n        } else {\n          insert();\n        }\n      },\n      remove: function remove(element) {\n        if (!within(element, this.target)) {\n          return;\n        }\n\n        if (this.animation) {\n          this.animate(function () {\n            return _remove(element);\n          });\n        } else {\n          _remove(element);\n        }\n      },\n      getSortable: function getSortable(element) {\n        do {\n          var sortable = this.$getComponent(element, 'sortable');\n\n          if (sortable && (sortable === this || this.group !== false && sortable.group === this.group)) {\n            return sortable;\n          }\n        } while (element = parent(element));\n      }\n    }\n  };\n  var trackTimer;\n\n  function trackScroll(pos) {\n    var last = Date.now();\n    trackTimer = setInterval(function () {\n      var x = pos.x;\n      var y = pos.y;\n      y += window.pageYOffset;\n      var dist = (Date.now() - last) * .3;\n      last = Date.now();\n      scrollParents(document.elementFromPoint(x, pos.y)).reverse().some(function (scrollEl) {\n        var scroll = scrollEl.scrollTop;\n        var scrollHeight = scrollEl.scrollHeight;\n        var ref = offset(getViewport(scrollEl));\n        var top = ref.top;\n        var bottom = ref.bottom;\n        var height = ref.height;\n\n        if (top < y && top + 35 > y) {\n          scroll -= dist;\n        } else if (bottom > y && bottom - 35 < y) {\n          scroll += dist;\n        } else {\n          return;\n        }\n\n        if (scroll > 0 && scroll < scrollHeight - height) {\n          scrollTop(scrollEl, scroll);\n          return true;\n        }\n      });\n    }, 15);\n  }\n\n  function untrackScroll() {\n    clearInterval(trackTimer);\n  }\n\n  function appendDrag(container, element) {\n    var clone = append(container, element.outerHTML.replace(/(^<)(?:li|tr)|(?:li|tr)(\\/>$)/g, '$1div$2'));\n    css(clone, 'margin', '0', 'important');\n    css(clone, assign({\n      boxSizing: 'border-box',\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    }, css(element, ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'])));\n    height(clone.firstElementChild, height(element.firstElementChild));\n    return clone;\n  }\n\n  function findTarget(items, point) {\n    return items[findIndex(items, function (item) {\n      return pointInRect(point, item.getBoundingClientRect());\n    })];\n  }\n\n  function findInsertTarget(list, target, placeholder, x, y) {\n    var items = _children(list);\n\n    if (!items.length) {\n      return;\n    }\n\n    var single = items.length === 1;\n\n    if (single) {\n      append(list, placeholder);\n    }\n\n    var horizontal = isHorizontal(_children(list));\n\n    if (single) {\n      _remove(placeholder);\n    }\n\n    var rect = target.getBoundingClientRect();\n\n    if (!horizontal) {\n      return y < rect.top + rect.height / 2 ? target : target.nextElementSibling;\n    }\n\n    var placeholderRect = placeholder.getBoundingClientRect();\n    var sameLine = intersectLine([rect.top, rect.bottom], [placeholderRect.top, placeholderRect.bottom]);\n    return sameLine && x > rect.left + rect.width / 2 || !sameLine && placeholderRect.top < rect.top ? target.nextElementSibling : target;\n  }\n\n  function isHorizontal(items) {\n    return items.some(function (el, i) {\n      var rectA = el.getBoundingClientRect();\n      return items.slice(i + 1).some(function (el) {\n        var rectB = el.getBoundingClientRect();\n        return !intersectLine([rectA.left, rectA.right], [rectB.left, rectB.right]);\n      });\n    });\n  }\n\n  function intersectLine(lineA, lineB) {\n    return lineA[1] > lineB[0] && lineB[1] > lineA[0];\n  }\n\n  var obj$1;\n  var tooltip = {\n    mixins: [Container, Togglable, Position],\n    args: 'title',\n    props: {\n      delay: Number,\n      title: String\n    },\n    data: {\n      pos: 'top',\n      title: '',\n      delay: 0,\n      animation: ['uk-animation-scale-up'],\n      duration: 100,\n      cls: 'uk-active',\n      clsPos: 'uk-tooltip'\n    },\n    beforeConnect: function beforeConnect() {\n      this._hasTitle = hasAttr(this.$el, 'title');\n      attr(this.$el, 'title', '');\n      this.updateAria(false);\n      makeFocusable(this.$el);\n    },\n    disconnected: function disconnected() {\n      this.hide();\n      attr(this.$el, 'title', this._hasTitle ? this.title : null);\n    },\n    methods: {\n      show: function show() {\n        var this$1 = this;\n\n        if (this.isToggled(this.tooltip) || !this.title) {\n          return;\n        }\n\n        this._unbind = once(document, 'show keydown', this.hide, false, function (e) {\n          return e.type === 'keydown' && e.keyCode === 27 || e.type === 'show' && e.detail[0] !== this$1 && e.detail[0].$name === this$1.$name;\n        });\n        clearTimeout(this.showTimer);\n        this.showTimer = setTimeout(this._show, this.delay);\n      },\n      hide: function hide() {\n        var this$1 = this;\n\n        if (matches(this.$el, 'input:focus')) {\n          return;\n        }\n\n        clearTimeout(this.showTimer);\n\n        if (!this.isToggled(this.tooltip)) {\n          return;\n        }\n\n        this.toggleElement(this.tooltip, false, false).then(function () {\n          this$1.tooltip = _remove(this$1.tooltip);\n\n          this$1._unbind();\n        });\n      },\n      _show: function _show() {\n        var this$1 = this;\n        this.tooltip = append(this.container, \"<div class=\\\"\" + this.clsPos + \"\\\"> <div class=\\\"\" + this.clsPos + \"-inner\\\">\" + this.title + \"</div> </div>\");\n        on(this.tooltip, 'toggled', function (e, toggled) {\n          this$1.updateAria(toggled);\n\n          if (!toggled) {\n            return;\n          }\n\n          this$1.positionAt(this$1.tooltip, this$1.$el);\n          this$1.origin = this$1.getAxis() === 'y' ? flipPosition(this$1.dir) + \"-\" + this$1.align : this$1.align + \"-\" + flipPosition(this$1.dir);\n        });\n        this.toggleElement(this.tooltip, true);\n      },\n      updateAria: function updateAria(toggled) {\n        attr(this.$el, 'aria-expanded', toggled);\n      }\n    },\n    events: (obj$1 = {\n      focus: 'show',\n      blur: 'hide'\n    }, obj$1[pointerEnter + \" \" + pointerLeave] = function (e) {\n      if (isTouch(e)) {\n        return;\n      }\n\n      e.type === pointerEnter ? this.show() : this.hide();\n    }, obj$1)\n  };\n\n  function makeFocusable(el) {\n    if (!isFocusable(el)) {\n      attr(el, 'tabindex', '0');\n    }\n  }\n\n  function isFocusable(el) {\n    return isInput(el) || matches(el, 'a,button') || hasAttr(el, 'tabindex');\n  }\n\n  var upload = {\n    props: {\n      allow: String,\n      clsDragover: String,\n      concurrent: Number,\n      maxSize: Number,\n      method: String,\n      mime: String,\n      msgInvalidMime: String,\n      msgInvalidName: String,\n      msgInvalidSize: String,\n      multiple: Boolean,\n      name: String,\n      params: Object,\n      type: String,\n      url: String\n    },\n    data: {\n      allow: false,\n      clsDragover: 'uk-dragover',\n      concurrent: 1,\n      maxSize: 0,\n      method: 'POST',\n      mime: false,\n      msgInvalidMime: 'Invalid File Type: %s',\n      msgInvalidName: 'Invalid File Name: %s',\n      msgInvalidSize: 'Invalid File Size: %s Kilobytes Max',\n      multiple: false,\n      name: 'files[]',\n      params: {},\n      type: '',\n      url: '',\n      abort: noop,\n      beforeAll: noop,\n      beforeSend: noop,\n      complete: noop,\n      completeAll: noop,\n      error: noop,\n      fail: noop,\n      load: noop,\n      loadEnd: noop,\n      loadStart: noop,\n      progress: noop\n    },\n    events: {\n      change: function change(e) {\n        if (!matches(e.target, 'input[type=\"file\"]')) {\n          return;\n        }\n\n        e.preventDefault();\n\n        if (e.target.files) {\n          this.upload(e.target.files);\n        }\n\n        e.target.value = '';\n      },\n      drop: function drop(e) {\n        stop(e);\n        var transfer = e.dataTransfer;\n\n        if (!transfer || !transfer.files) {\n          return;\n        }\n\n        removeClass(this.$el, this.clsDragover);\n        this.upload(transfer.files);\n      },\n      dragenter: function dragenter(e) {\n        stop(e);\n      },\n      dragover: function dragover(e) {\n        stop(e);\n        addClass(this.$el, this.clsDragover);\n      },\n      dragleave: function dragleave(e) {\n        stop(e);\n        removeClass(this.$el, this.clsDragover);\n      }\n    },\n    methods: {\n      upload: function upload(files) {\n        var this$1 = this;\n\n        if (!files.length) {\n          return;\n        }\n\n        trigger(this.$el, 'upload', [files]);\n\n        for (var i = 0; i < files.length; i++) {\n          if (this.maxSize && this.maxSize * 1000 < files[i].size) {\n            this.fail(this.msgInvalidSize.replace('%s', this.maxSize));\n            return;\n          }\n\n          if (this.allow && !match$1(this.allow, files[i].name)) {\n            this.fail(this.msgInvalidName.replace('%s', this.allow));\n            return;\n          }\n\n          if (this.mime && !match$1(this.mime, files[i].type)) {\n            this.fail(this.msgInvalidMime.replace('%s', this.mime));\n            return;\n          }\n        }\n\n        if (!this.multiple) {\n          files = [files[0]];\n        }\n\n        this.beforeAll(this, files);\n        var chunks = chunk(files, this.concurrent);\n\n        var upload = function upload(files) {\n          var data = new FormData();\n          files.forEach(function (file) {\n            return data.append(this$1.name, file);\n          });\n\n          for (var key in this$1.params) {\n            data.append(key, this$1.params[key]);\n          }\n\n          ajax(this$1.url, {\n            data: data,\n            method: this$1.method,\n            responseType: this$1.type,\n            beforeSend: function beforeSend(env) {\n              var xhr = env.xhr;\n              xhr.upload && on(xhr.upload, 'progress', this$1.progress);\n              ['loadStart', 'load', 'loadEnd', 'abort'].forEach(function (type) {\n                return on(xhr, type.toLowerCase(), this$1[type]);\n              });\n              this$1.beforeSend(env);\n            }\n          }).then(function (xhr) {\n            this$1.complete(xhr);\n\n            if (chunks.length) {\n              upload(chunks.shift());\n            } else {\n              this$1.completeAll(xhr);\n            }\n          }, function (e) {\n            return this$1.error(e);\n          });\n        };\n\n        upload(chunks.shift());\n      }\n    }\n  };\n\n  function match$1(pattern, path) {\n    return path.match(new RegExp(\"^\" + pattern.replace(/\\//g, '\\\\/').replace(/\\*\\*/g, '(\\\\/[^\\\\/]+)*').replace(/\\*/g, '[^\\\\/]+').replace(/((?!\\\\))\\?/g, '$1.') + \"$\", 'i'));\n  }\n\n  function chunk(files, size) {\n    var chunks = [];\n\n    for (var i = 0; i < files.length; i += size) {\n      var chunk = [];\n\n      for (var j = 0; j < size; j++) {\n        chunk.push(files[i + j]);\n      }\n\n      chunks.push(chunk);\n    }\n\n    return chunks;\n  }\n\n  function stop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  var components$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Countdown: countdown,\n    Filter: filter$1,\n    Lightbox: lightbox,\n    LightboxPanel: LightboxPanel,\n    Notification: notification,\n    Parallax: parallax,\n    Slider: slider,\n    SliderParallax: sliderParallax,\n    Slideshow: slideshow,\n    SlideshowParallax: sliderParallax,\n    Sortable: sortable,\n    Tooltip: tooltip,\n    Upload: upload\n  });\n  each(components$1, function (component, name) {\n    return UIkit.component(name, component);\n  });\n  return UIkit;\n});\n\n},{\"@babel/runtime/helpers/interopRequireDefault\":1,\"@babel/runtime/helpers/typeof\":2}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _uikit = _interopRequireDefault(require(\"uikit\"));\n\nvar _uikitIcons = _interopRequireDefault(require(\"uikit/dist/js/uikit-icons\"));\n\n// import jQuery\n// import bootstrap components from node_modules folder\n// see https://getbootstrap.com/docs/4.3/getting-started/webpack/\n// import 'popper.js';\n// import 'bootstrap/js/dist/util';\n// import 'bootstrap/js/dist/carousel';\n// import 'bootstrap/js/dist/tooltip';\n// import Icons from '../scripts/uikit-icons-digicheck';\n// import '../scripts/dc-app';\n_uikit[\"default\"].use(_uikitIcons[\"default\"]); // import demo\n// import fooFighters from './demo-modules/foo-fighters';\n// on document ready\n\n\n$(function () {\n  var $doc = $(document); // enable bootstrap tooltips\n  //$('[data-toggle=\"tooltip\"]').tooltip();\n  // Learn to Fly!\n  //console.dir(fooFighters);\n});\n\n},{\"@babel/runtime/helpers/interopRequireDefault\":1,\"uikit\":4,\"uikit/dist/js/uikit-icons\":3}]},{},[5]);\n"],"file":"script.js"}